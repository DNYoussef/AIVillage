[tool:pytest]
# Pytest configuration for agent testing

minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=agents
    --cov-report=term-missing
    --cov-report=html:tests/reports/htmlcov
    --cov-fail-under=80
    --tb=short
    --maxfail=10

testpaths = 
    tests/agents
    tests/integration
    tests/behavior
    tests/performance

python_files = 
    test_*.py
    *_test.py

python_classes = 
    Test*

python_functions = 
    test_*

markers =
    unit: Unit tests focusing on individual components
    integration: Integration tests for component interactions
    behavior: Behavior-driven tests for workflows
    performance: Performance and benchmark tests  
    chaos: Chaos engineering and resilience tests
    slow: Tests that take more than 1 second to run
    network: Tests requiring network access
    gpu: Tests requiring GPU resources
    memory_intensive: Tests that use significant memory
    
    # Agent-specific markers
    agent_core: Tests for core agent functionality
    agent_analytics: Tests for analytics components
    agent_processing: Tests for processing interfaces
    agent_communication: Tests for inter-agent communication
    agent_learning: Tests for learning and adaptation
    
    # Quality markers
    regression: Regression tests
    smoke: Smoke tests for basic functionality
    acceptance: Acceptance criteria tests

filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::pytest.PytestUnraisableExceptionWarning

asyncio_mode = auto

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/reports/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test timeout
timeout = 300

# Parallel execution
# addopts = -n auto  # Uncomment for parallel execution

# Coverage configuration  
[coverage:run]
source = agents
branch = true
omit = 
    */tests/*
    */test_*.py
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = true
skip_covered = false

[coverage:html]
directory = tests/reports/htmlcov