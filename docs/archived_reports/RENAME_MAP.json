{
  "src/core/p2p/p2p_node.py": {
    "action": "deprecate",
    "canonical": "src/production/communications/p2p/p2p_node.py",
    "group": "P2P Implementation",
    "dependents_count": 340,
    "risk_level": "HIGH",
    "migration_priority": "high",
    "shim_strategy": "import_redirect",
    "migration_steps": [
      "1. Create import proxy module",
      "2. Add deprecation warnings",
      "3. Update documentation",
      "4. Gradual import replacement",
      "5. Remove after grace period"
    ],
    "timeline": "4-6 weeks",
    "testing_requirements": "Comprehensive integration testing",
    "rollback_strategy": {
      "method": "Restore deprecated modules",
      "recovery_time": "4 hours",
      "data_loss_risk": "None"
    }
  },
  "src/infrastructure/p2p/p2p_node.py": {
    "action": "deprecate",
    "canonical": "src/production/communications/p2p/p2p_node.py",
    "group": "P2P Implementation",
    "dependents_count": 315,
    "risk_level": "HIGH",
    "migration_priority": "high",
    "shim_strategy": "import_redirect",
    "migration_steps": [
      "1. Create import proxy module",
      "2. Add deprecation warnings",
      "3. Update documentation",
      "4. Gradual import replacement",
      "5. Remove after grace period"
    ],
    "timeline": "4-6 weeks",
    "testing_requirements": "Comprehensive integration testing",
    "rollback_strategy": {
      "method": "Restore deprecated modules",
      "recovery_time": "4 hours",
      "data_loss_risk": "None"
    }
  },
  "src/core/resources/device_profiler.py": {
    "action": "deprecate",
    "canonical": "src/production/monitoring/mobile/device_profiler.py",
    "group": "Device Profiler",
    "dependents_count": 159,
    "risk_level": "HIGH",
    "migration_priority": "high",
    "shim_strategy": "import_redirect",
    "migration_steps": [
      "1. Create import proxy module",
      "2. Add deprecation warnings",
      "3. Update documentation",
      "4. Gradual import replacement",
      "5. Remove after grace period"
    ],
    "timeline": "4-6 weeks",
    "testing_requirements": "Comprehensive integration testing",
    "rollback_strategy": {
      "method": "Restore deprecated modules",
      "recovery_time": "4 hours",
      "data_loss_risk": "None"
    }
  },
  "src/production/rag/rag_system/core/intelligent_chunking.py": {
    "action": "deprecate",
    "canonical": "src/production/rag/rag_system/core/intelligent_chunking_simple.py",
    "group": "RAG Chunking",
    "dependents_count": 57,
    "risk_level": "HIGH",
    "migration_priority": "high",
    "shim_strategy": "import_redirect",
    "migration_steps": [
      "1. Create import proxy module",
      "2. Add deprecation warnings",
      "3. Update documentation",
      "4. Gradual import replacement",
      "5. Remove after grace period"
    ],
    "timeline": "4-6 weeks",
    "testing_requirements": "Comprehensive integration testing",
    "rollback_strategy": {
      "method": "Restore deprecated modules",
      "recovery_time": "4 hours",
      "data_loss_risk": "None"
    }
  },
  "scripts/implement_mesh_protocol_fixed.py": {
    "action": "merge",
    "canonical": "scripts/implement_mesh_protocol.py",
    "group": "Mesh Protocol",
    "dependents_count": 6,
    "risk_level": "MEDIUM",
    "migration_priority": "medium",
    "shim_strategy": "import_redirect",
    "migration_steps": [
      "1. Add compatibility shims",
      "2. Update direct imports",
      "3. Test integration points",
      "4. Remove old module"
    ],
    "timeline": "2-3 weeks",
    "testing_requirements": "Unit and integration testing",
    "rollback_strategy": {
      "method": "Restore deprecated modules",
      "recovery_time": "4 hours",
      "data_loss_risk": "None"
    }
  }
}