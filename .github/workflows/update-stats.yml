name: Update Repository Stats

"on":
  schedule:
    - cron: '0 6 * * *'  # Run daily at 6 AM UTC
  workflow_dispatch:

jobs:
  # Check if stats script exists
  stats-check:
    runs-on: ubuntu-latest
    outputs:
      has_stats_script: ${{ steps.check-stats.outputs.has_stats_script }}
      has_status_doc: ${{ steps.check-stats.outputs.has_status_doc }}
    steps:
    - uses: actions/checkout@v4

    - name: Check for stats script and documentation
      id: check-stats
      run: |
        if [ -f "scripts/update_status.py" ] || [ -f "scripts/update_stats.py" ]; then
          echo "has_stats_script=true" >> $GITHUB_OUTPUT
          echo "Stats script found"
        else
          echo "has_stats_script=false" >> $GITHUB_OUTPUT
          echo "No stats script found"
        fi

        if [ -f "docs/status.md" ] || [ -d "docs" ]; then
          echo "has_status_doc=true" >> $GITHUB_OUTPUT
          echo "Documentation directory found"
        else
          echo "has_status_doc=false" >> $GITHUB_OUTPUT
          echo "No documentation directory found"
        fi

  update-stats:
    runs-on: ubuntu-latest
    needs: stats-check
    permissions:
      contents: write  # Need write permissions to commit changes

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Need full history for stats

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

        # Install cloc for code counting
        sudo apt-get update && sudo apt-get install -y cloc || echo "cloc installation failed"

        # Install Python packages that might be needed
        pip install pyyaml requests || echo "Some packages failed to install"

    - name: Run custom stats script
      if: needs.stats-check.outputs.has_stats_script == 'true'
      run: |
        echo "=== Running custom stats script ==="

        if [ -f "scripts/update_status.py" ]; then
          echo "Running scripts/update_status.py"
          python scripts/update_status.py || echo "Stats script failed"
        elif [ -f "scripts/update_stats.py" ]; then
          echo "Running scripts/update_stats.py"
          python scripts/update_stats.py || echo "Stats script failed"
        fi

    - name: Generate basic repository stats
      if: needs.stats-check.outputs.has_stats_script == 'false'
      run: |
        echo "=== Generating basic repository stats ==="

        # Create docs directory if it doesn't exist
        mkdir -p docs

        # Generate status.md
        cat > docs/status.md << 'EOF'
        # Repository Status

        ## Project Statistics

        EOF

        echo "Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> docs/status.md
        echo "" >> docs/status.md

        # Code statistics
        echo "## Code Statistics" >> docs/status.md
        echo "" >> docs/status.md

        if which cloc >/dev/null 2>&1; then
          echo "### Lines of Code" >> docs/status.md
          echo '```' >> docs/status.md
          cloc --exclude-dir=.git,.mypy_cache,__pycache__,node_modules,venv,.venv . || echo "cloc failed" >> docs/status.md
          echo '```' >> docs/status.md
        else
          echo "### File Counts" >> docs/status.md
          echo "- Python files: $(find . -name '*.py' -not -path './.*' | wc -l)" >> docs/status.md
          echo "- Test files: $(find . -name 'test_*.py' -o -name '*_test.py' | wc -l)" >> docs/status.md
          echo "- Workflow files: $(find .github/workflows -name '*.yml' 2>/dev/null | wc -l)" >> docs/status.md
        fi

        echo "" >> docs/status.md

        # Git statistics
        echo "## Git Statistics" >> docs/status.md
        echo "" >> docs/status.md
        echo "- Total commits: $(git rev-list --count HEAD 2>/dev/null || echo 'N/A')" >> docs/status.md
        echo "- Contributors: $(git shortlog -sn 2>/dev/null | wc -l || echo 'N/A')" >> docs/status.md
        echo "- Branches: $(git branch -a 2>/dev/null | wc -l || echo 'N/A')" >> docs/status.md

        echo "" >> docs/status.md

        # Recent commits
        echo "## Recent Activity" >> docs/status.md
        echo "" >> docs/status.md
        echo "### Latest Commits" >> docs/status.md
        echo '```' >> docs/status.md
        git log --oneline -10 2>/dev/null || echo "No git history available" >> docs/status.md
        echo '```' >> docs/status.md

        echo "" >> docs/status.md
        echo "---" >> docs/status.md
        echo "*Auto-generated by GitHub Actions*" >> docs/status.md

        echo "Generated status.md:"
        cat docs/status.md

    - name: Check for changes
      id: git-check
      run: |
        git add docs/status.md 2>/dev/null || true

        if git diff --cached --quiet; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No changes to commit"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Changes detected"
        fi

    - name: Commit and push changes
      if: steps.git-check.outputs.has_changes == 'true'
      run: |
        # Configure git
        git config user.name 'github-actions[bot]'
        git config user.email '41898282+github-actions[bot]@users.noreply.github.com'

        # Commit changes
          git commit -m "docs: update repository stats [automated]

          - Updated code statistics
          - Updated git metrics
          - Updated recent activity

          Auto-generated by GitHub Actions workflow" || echo "Commit failed"

        # Push changes
        git push || echo "Push failed"

    - name: Stats update summary
      if: always()
      run: |
        echo "=== Stats Update Summary ==="
        echo "Has custom script: ${{ needs.stats-check.outputs.has_stats_script }}"
        echo "Has changes: ${{ steps.git-check.outputs.has_changes }}"
        echo "Update completed"
