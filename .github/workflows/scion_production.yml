name: Scion Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  scion-prod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: stable
      - name: Run Rust clippy (Main Workspace)
        continue-on-error: true
        run: |
          if [ -f "Cargo.toml" ]; then
            echo "Running clippy on main workspace..."
            cargo clippy --workspace --all-targets --message-format=json > clippy-main.json || echo "[WARNING] Clippy found issues in main workspace"
          elif [ -f "build/core-build/Cargo.toml" ]; then
            cd build/core-build
            cargo clippy --message-format=json > ../../clippy-main.json || echo "[WARNING] Clippy completed with warnings"
            cd ../..
          else
            echo "[INFO] No main Rust workspace found, skipping clippy"
            echo '[]' > clippy-main.json
          fi

      - name: Run Rust clippy (BetaNet Bounty Workspace)
        continue-on-error: true
        env:
          OPENSSL_VENDORED: 1
        run: |
          if [ -f "packages/p2p/betanet-bounty/Cargo.toml" ]; then
            echo "Running clippy on BetaNet bounty workspace..."
            cd packages/p2p/betanet-bounty
            cargo clippy --workspace --all-targets --message-format=json > ../../../clippy-betanet.json || echo "[WARNING] Clippy found issues in BetaNet workspace"
            cd ../../..
          else
            echo "[INFO] No BetaNet bounty workspace found, skipping clippy"
            echo '[]' > clippy-betanet.json
          fi

      - name: Run Go vet
        run: |
          if [ -d "clients/rust/scion-sidecar" ]; then
            cd clients/rust/scion-sidecar
            go vet ./... 2>&1 | tee ../../../govet.txt
            cd ../../..
          else
            echo "No Go modules found, skipping vet"
            echo "No Go modules found" > govet.txt
          fi

      - name: Upload lint reports
        uses: actions/upload-artifact@v3
        with:
          name: lint-reports
          path: |
            clippy-main.json
            clippy-betanet.json
            govet.txt

      - name: Build Rust (Main Workspace)
        continue-on-error: true
        run: |
          if [ -f "Cargo.toml" ]; then
            echo "Building main Rust workspace..."
            cargo build --workspace --all-targets || echo "[WARNING] Some workspace crates failed to build (non-blocking)"
            echo "[INFO] Main workspace build completed"
          elif [ -f "build/core-build/Cargo.toml" ]; then
            cd build/core-build
            cargo build --all-targets || echo "[WARNING] Build completed with some failures (non-blocking)"
            cd ../..
          else
            echo "[INFO] No main Rust workspace found, skipping build"
          fi

      - name: Build Rust (BetaNet Bounty Workspace)
        continue-on-error: true
        env:
          OPENSSL_VENDORED: 1
        run: |
          if [ -f "packages/p2p/betanet-bounty/Cargo.toml" ]; then
            echo "Building BetaNet bounty workspace..."
            cd packages/p2p/betanet-bounty
            cargo build --workspace --all-targets || echo "[WARNING] Some BetaNet crates failed to build (non-blocking)"
            echo "[INFO] BetaNet bounty workspace build completed"
            cd ../../..
          else
            echo "[INFO] No BetaNet bounty workspace found, skipping build"
          fi

      - name: Test Rust (Main Workspace)
        continue-on-error: true
        run: |
          if [ -f "Cargo.toml" ]; then
            echo "Testing main Rust workspace..."
            cargo test --workspace --all-targets || echo "[WARNING] Some workspace tests failed (non-blocking)"
            echo "[INFO] Main workspace tests completed"
          elif [ -f "build/core-build/Cargo.toml" ]; then
            cd build/core-build
            cargo test --all-targets || echo "[WARNING] Some tests failed (non-blocking)"
            cd ../..
          else
            echo "[INFO] No main Rust workspace found, skipping tests"
          fi

      - name: Test Rust (BetaNet Bounty Workspace)
        continue-on-error: true
        env:
          OPENSSL_VENDORED: 1
        run: |
          if [ -f "packages/p2p/betanet-bounty/Cargo.toml" ]; then
            echo "Testing BetaNet bounty workspace..."
            cd packages/p2p/betanet-bounty
            cargo test --workspace --all-targets || echo "[WARNING] Some BetaNet tests failed (non-blocking)"
            echo "[INFO] BetaNet bounty workspace tests completed"
            cd ../../..
          else
            echo "[INFO] No BetaNet bounty workspace found, skipping tests"
          fi

      - name: Build Go
        run: |
          if [ -d "clients/rust/scion-sidecar" ]; then
            cd clients/rust/scion-sidecar
            go build ./...
            cd ../../..
          else
            echo "No Go modules found, skipping build"
          fi

      - name: Test Go
        run: |
          if [ -d "clients/rust/scion-sidecar" ]; then
            cd clients/rust/scion-sidecar
            go test ./...
            cd ../../..
          else
            echo "No Go modules found, skipping tests"
          fi

      - name: Generate metrics snapshot
        run: python scripts/monitor_performance.py

      - name: Upload metrics snapshot
        uses: actions/upload-artifact@v3
        with:
          name: metrics-snapshot
          path: test_performance_summary.json

      - name: Run benches
        run: bash ops/bench/run_bench.sh > bench.log

      - name: Upload bench results
        uses: actions/upload-artifact@v3
        with:
          name: bench-results
          path: bench.log

      - name: Short fuzz (Main Workspace)
        continue-on-error: true
        run: |
          if [ -f "build/core-build/crates/betanet-htx/fuzz/Cargo.toml" ]; then
            cd build/core-build/crates/betanet-htx
            cargo install cargo-fuzz >/dev/null 2>&1 || echo "Cargo fuzz installation failed, continuing"
            cargo fuzz run htx_frame_fuzz -- -runs=100 -max_total_time=30 || echo "[WARNING] Main workspace fuzz testing completed with issues (non-blocking)"
            cd ../../../..
          else
            echo '[INFO] No main workspace fuzz targets found, skipping.'
          fi

      - name: Short fuzz (BetaNet Bounty Workspace)
        continue-on-error: true
        env:
          OPENSSL_VENDORED: 1
        run: |
          if [ -f "packages/p2p/betanet-bounty/crates/betanet-htx/fuzz/Cargo.toml" ]; then
            cd packages/p2p/betanet-bounty/crates/betanet-htx
            cargo install cargo-fuzz >/dev/null 2>&1 || echo "Cargo fuzz installation failed, continuing"
            cargo fuzz run htx_frame_fuzz -- -runs=100 -max_total_time=30 || echo "[WARNING] BetaNet workspace fuzz testing completed with issues (non-blocking)"
            cd ../../../../..
          else
            echo '[INFO] No BetaNet bounty fuzz targets found, skipping.'
          fi

      - name: Check for forbidden terms
        run: tools/linting/forbidden_checks.sh

      - name: Deny insecure feature
        run: |
          if [ -f "tools/security/deny_insecure.rs" ]; then
            if rustc tools/security/deny_insecure.rs --cfg feature="insecure" 2>&1 | tee /tmp/deny.log; then
              echo "Insecure feature flag compiled" >&2
              exit 1
            else
              echo "Insecure feature blocked"
            fi
          else
            echo "No security validation tool found, skipping"
          fi
