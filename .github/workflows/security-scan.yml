name: Comprehensive Security Scan
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of security scan'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - dependencies
        - containers
        - code

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '20'
  RUST_VERSION: '1.70'
  GO_VERSION: '1.21'

jobs:
  # Job 1: Python Dependency Security
  python-security:
    name: Python Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache Python dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        
    - name: Install security tools
      run: |
        pip install pip-audit safety bandit semgrep cyclonedx-bom
        
    - name: Create security reports directory
      run: |
        mkdir -p security/reports security/sboms
        
    - name: Pip Audit Scan
      run: |
        pip-audit --desc --format=json --output=security/reports/pip-audit.json || true
        
    - name: Safety Scan
      run: |
        safety check --json --output security/reports/safety.json || true
        
    - name: Bandit Static Analysis
      run: |
        mkdir -p security/reports
        bandit -r core/ infrastructure/ -f json -o security/reports/bandit-report.json --skip B101,B601 -ll || true
        
    - name: Semgrep Security Scan
      run: |
        semgrep --config=auto --json --output=security/reports/semgrep.json . || true
        
    - name: Generate Python SBOM
      run: |
        cyclonedx-py requirements config/requirements/requirements.txt -o security/sboms/python-sbom.json || cyclonedx-py requirements config/requirements/CONSOLIDATED_REQUIREMENTS.txt -o security/sboms/python-sbom.json || echo "SBOM generation completed with fallback"
        
    - name: Upload Python Security Results
      uses: actions/upload-artifact@v4
      with:
        name: python-security-results
        path: security/reports/
        retention-days: 30

  # Job 2: Node.js Security
  nodejs-security:
    name: Node.js Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
        
    - name: Install dependencies
      run: |
        cd apps/web
        npm ci
        
    - name: Install security tools
      run: |
        npm install -g retire @cyclonedx/cdxgen audit-ci
        
    - name: NPM Audit
      run: |
        cd apps/web
        npm audit --json > ../../security/reports/npm-audit.json || true
        
    - name: Retire.js Scan
      run: |
        cd apps/web
        retire --outputformat json --outputpath ../../security/reports/retire.json || true
        
    - name: Generate Node.js SBOM
      run: |
        cd apps/web
        cdxgen -t js -o ../../security/sboms/nodejs-sbom.json .
        
    - name: Upload Node.js Security Results
      uses: actions/upload-artifact@v4
      with:
        name: nodejs-security-results
        path: security/reports/
        retention-days: 30

  # Job 3: Rust Security
  rust-security:
    name: Rust Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.RUST_VERSION }}
        override: true
        
    - name: Install Cargo Audit
      run: cargo install cargo-audit cargo-deny
      
    - name: Cache Rust dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cargo Audit
      run: |
        cargo audit --json > security/reports/cargo-audit.json || true
        
    - name: Cargo Deny
      run: |
        cargo deny --format json check > security/reports/cargo-deny.json || true
        
    - name: Generate Rust SBOM
      run: |
        # Use cargo metadata to generate SBOM
        cargo metadata --format-version 1 > security/sboms/rust-metadata.json
        
    - name: Upload Rust Security Results
      uses: actions/upload-artifact@v4
      with:
        name: rust-security-results
        path: security/reports/
        retention-days: 30

  # Job 4: Go Security
  go-security:
    name: Go Security Scan
    runs-on: ubuntu-latest
    if: hashFiles('**/go.mod') != ''
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: Install Nancy
      run: go install github.com/sonatypecommunity/nancy@latest
      
    - name: Go Vulnerability Check
      run: |
        go list -json -m all > security/reports/go-modules.json
        govulncheck -json ./... > security/reports/govulncheck.json || true
        
    - name: Nancy Scan
      run: |
        go list -json -deps ./... | nancy sleuth > security/reports/nancy.json || true
        
    - name: Upload Go Security Results
      uses: actions/upload-artifact@v4
      with:
        name: go-security-results
        path: security/reports/
        retention-days: 30

  # Job 5: Container Security
  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: hashFiles('**/Dockerfile') != '' || hashFiles('**/docker-compose.yml') != ''
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        format: 'json'
        output: 'security/reports/trivy.json'
        
    - name: Upload Container Security Results
      uses: actions/upload-artifact@v4
      with:
        name: container-security-results
        path: security/reports/trivy.json
        retention-days: 30

  # Job 6: Security Report Aggregation
  aggregate-results:
    name: Aggregate Security Results
    runs-on: ubuntu-latest
    needs: [python-security, nodejs-security, rust-security, go-security, container-security]
    if: always()
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: security/results/
        
    - name: Set up Python for aggregation
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install analysis tools
      run: |
        pip install jq pandas matplotlib seaborn
        
    - name: Aggregate and analyze results
      run: |
        python security/scripts/aggregate-security-results.py
        
    - name: Generate Security Dashboard
      run: |
        python security/scripts/generate-security-dashboard.py
        
    - name: Create Security Issue (if critical vulnerabilities found)
      uses: actions/github-script@v6
      if: failure()
      with:
        script: |
          const fs = require('fs');
          const path = 'security/reports/critical-vulnerabilities.json';
          
          if (fs.existsSync(path)) {
            const vulnerabilities = JSON.parse(fs.readFileSync(path, 'utf8'));
            
            const body = `
            ## 🚨 Critical Security Vulnerabilities Detected
            
            This is an automated security alert. Critical vulnerabilities have been detected in the codebase.
            
            ### Summary
            - **Critical vulnerabilities:** ${vulnerabilities.critical || 0}
            - **High severity vulnerabilities:** ${vulnerabilities.high || 0}
            - **Scan timestamp:** ${new Date().toISOString()}
            
            ### Action Required
            Please review the security scan results and address these vulnerabilities immediately.
            
            ### Artifacts
            Security scan results are available in the workflow artifacts.
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Critical Security Vulnerabilities - ${new Date().toISOString().split('T')[0]}`,
              body: body,
              labels: ['security', 'critical', 'vulnerability']
            });
          }
          
    - name: Upload Aggregated Results
      uses: actions/upload-artifact@v4
      with:
        name: security-dashboard
        path: security/dashboard/
        retention-days: 90
        
    - name: Comment PR with security summary
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const summaryPath = 'security/reports/security-summary.json';
          
          if (fs.existsSync(summaryPath)) {
            const summary = JSON.parse(fs.readFileSync(summaryPath, 'utf8'));
            
            const comment = `
            ## 🛡️ Security Scan Results
            
            | Severity | Count |
            |----------|-------|
            | Critical | ${summary.critical || 0} |
            | High | ${summary.high || 0} |
            | Medium | ${summary.medium || 0} |
            | Low | ${summary.low || 0} |
            
            ${summary.critical > 0 ? '⚠️ **Critical vulnerabilities detected! Please address before merging.**' : '✅ No critical vulnerabilities found.'}
            
            Detailed results available in workflow artifacts.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }