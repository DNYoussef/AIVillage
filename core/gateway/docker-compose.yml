# AIVillage Unified Gateway - Docker Compose Development Setup

version: '3.8'

services:
  gateway:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - API_KEY=dev-gateway-key-12345
      - SECRET_KEY=dev-secret-key-change-in-production
      - TWIN_URL=http://twin:8001
      - AGENT_CONTROLLER_URL=http://agent-controller:8002
      - KNOWLEDGE_SYSTEM_URL=http://knowledge-system:8003
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    volumes:
      - ./server.py:/app/server.py
      - ./config.yaml:/app/config.yaml
    depends_on:
      - twin
      - agent-controller
      - knowledge-system
    networks:
      - aivillage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Mock downstream services for development
  twin:
    image: mockserver/mockserver:5.15.0
    ports:
      - "8001:1080"
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/twin-mock.json
    volumes:
      - ./mocks:/config
    networks:
      - aivillage

  agent-controller:
    image: mockserver/mockserver:5.15.0
    ports:
      - "8002:1080"
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/agent-controller-mock.json
    volumes:
      - ./mocks:/config
    networks:
      - aivillage

  knowledge-system:
    image: mockserver/mockserver:5.15.0
    ports:
      - "8003:1080"
    environment:
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/knowledge-system-mock.json
    volumes:
      - ./mocks:/config
    networks:
      - aivillage

  # Monitoring stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - aivillage

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - aivillage

networks:
  aivillage:
    driver: bridge

volumes:
  grafana-storage: