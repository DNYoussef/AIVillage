openapi: 3.0.0
info:
  title: BitNet Phase 4 API
  version: 1.0.0
  description: |
    Comprehensive API for BitNet 1-bit neural network optimization and deployment.

    BitNet Phase 4 provides:
    - 8x memory reduction through 1-bit quantization
    - 2-4x inference speedup with optimized kernels
    - <10% accuracy degradation with NASA POT10 compliance
    - Integration with Agent Forge pipeline phases

    ## Key Features
    - **Model Optimization**: Convert models to 1-bit precision
    - **Performance Validation**: Comprehensive benchmarking suite
    - **Memory Profiling**: Advanced memory usage analysis
    - **Hardware Acceleration**: GPU and CPU kernel optimization
    - **Quality Assurance**: NASA POT10 compliance monitoring

  contact:
    name: BitNet Phase 4 Team
    email: support@agentforge.dev
  license:
    name: NASA POT10 Compliant
    url: https://nasa.gov/pot10

servers:
  - url: http://localhost:8000/api/v1
    description: Development server
  - url: https://api.agentforge.dev/bitnet/v1
    description: Production server

security:
  - ApiKeyAuth: []

paths:
  /models/create:
    post:
      summary: Create BitNet model
      description: |
        Create a new BitNet model with specified configuration.

        Supports multiple model sizes and optimization profiles:
        - **Development**: Fast iteration with basic optimizations
        - **Production**: Maximum optimization with full validation
        - **Inference**: Optimized for deployment scenarios
        - **Defense Grade**: NASA POT10 compliant with full audit trails
      tags:
        - Models
      operationId: createBitNetModel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelCreateRequest'
            examples:
              development:
                summary: Development model
                value:
                  model_size: "small"
                  optimization_profile: "development"
                  config_overrides:
                    architecture:
                      hidden_size: 512
                      num_hidden_layers: 8
              production:
                summary: Production model
                value:
                  model_size: "base"
                  optimization_profile: "production"
                  nasa_compliance:
                    compliance_level: "enhanced"
      responses:
        '201':
          description: BitNet model created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelCreateResponse'
              example:
                model_id: "bitnet_base_prod_001"
                status: "created"
                config:
                  total_parameters_millions: 25.4
                  quantized_parameters_millions: 20.3
                  memory_reduction_factor: 8.2
                memory_footprint:
                  model_memory_mb: 12.7
                  compression_ratio: 8.2
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /models/{model_id}:
    get:
      summary: Get model information
      description: Retrieve comprehensive information about a BitNet model
      tags:
        - Models
      operationId: getModel
      parameters:
        - name: model_id
          in: path
          required: true
          schema:
            type: string
          description: Unique model identifier
          example: "bitnet_base_prod_001"
      responses:
        '200':
          description: Model information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfo'
        '404':
          $ref: '#/components/responses/NotFound'

  /optimization/memory:
    post:
      summary: Optimize model memory usage
      description: |
        Apply comprehensive memory optimization to BitNet model.

        Features:
        - Advanced memory pooling with 8x reduction
        - Gradient checkpointing for training efficiency
        - Activation compression with real-time processing
        - GPU memory defragmentation
      tags:
        - Optimization
      operationId: optimizeMemory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryOptimizationRequest'
            example:
              model_id: "bitnet_base_prod_001"
              optimization_level: "production"
              target_memory_reduction: 8.0
              enable_gradient_checkpointing: true
      responses:
        '200':
          description: Memory optimization completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryOptimizationResponse'
              example:
                status: "optimized"
                memory_reduction_achieved: 8.2
                peak_memory_usage_mb: 156.3
                optimization_time_seconds: 45.2

  /optimization/inference:
    post:
      summary: Optimize model for inference
      description: |
        Apply inference-specific optimizations for maximum speed.

        Optimizations include:
        - Custom CUDA kernels for 1-bit operations
        - Dynamic batching for throughput optimization
        - KV-cache optimization for transformers
        - Model compilation with PyTorch 2.0+
      tags:
        - Optimization
      operationId: optimizeInference
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferenceOptimizationRequest'
      responses:
        '200':
          description: Inference optimization completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InferenceOptimizationResponse'

  /benchmarks/performance:
    post:
      summary: Run performance benchmark
      description: |
        Execute comprehensive performance benchmarking suite.

        Benchmarks include:
        - Memory usage analysis with 8x target validation
        - Speed benchmarking with 2-4x speedup verification
        - Accuracy preservation testing (<10% degradation)
        - Hardware utilization efficiency
      tags:
        - Benchmarks
      operationId: runPerformanceBenchmark
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BenchmarkRequest'
            example:
              model_id: "bitnet_base_prod_001"
              benchmark_suite: "comprehensive"
              test_inputs:
                batch_size: 16
                sequence_length: 512
                num_samples: 1000
      responses:
        '200':
          description: Benchmark completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BenchmarkResponse'

  /validation/targets:
    post:
      summary: Validate performance targets
      description: |
        Comprehensive validation of BitNet performance targets.

        Validates:
        - 8x memory reduction achievement
        - 2-4x speedup verification
        - <10% accuracy degradation
        - NASA POT10 compliance (95% score)
        - Real-time inference capability (<50ms)
      tags:
        - Validation
      operationId: validatePerformanceTargets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '200':
          description: Validation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
              example:
                validation_status: "PASSED"
                targets_achieved: true
                production_ready: true
                results:
                  memory_reduction_achieved: 8.2
                  speedup_achieved: 3.8
                  accuracy_degradation: 0.067
                  nasa_compliance_score: 0.95
                  inference_latency_p95_ms: 14.2

  /profiling/memory:
    post:
      summary: Profile memory usage
      description: Advanced memory profiling with detailed analysis
      tags:
        - Profiling
      operationId: profileMemory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemoryProfilingRequest'
      responses:
        '200':
          description: Memory profiling completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemoryProfilingResponse'

  /profiling/speed:
    post:
      summary: Profile inference speed
      description: Comprehensive speed analysis with bottleneck detection
      tags:
        - Profiling
      operationId: profileSpeed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeedProfilingRequest'
      responses:
        '200':
          description: Speed profiling completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpeedProfilingResponse'

  /compliance/nasa-pot10:
    get:
      summary: Get NASA POT10 compliance status
      description: |
        Retrieve comprehensive NASA POT10 compliance information.

        Includes:
        - Overall compliance score (target: 95%)
        - Audit trail completeness
        - Security validation status
        - Performance monitoring compliance
        - Documentation completeness
      tags:
        - Compliance
      operationId: getNASACompliance
      parameters:
        - name: model_id
          in: query
          required: true
          schema:
            type: string
          description: Model identifier for compliance check
      responses:
        '200':
          description: Compliance status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceStatus'
              example:
                compliance_score: 0.95
                overall_status: "COMPLIANT"
                compliance_level: "enhanced"
                last_audit_date: "2025-09-15T10:30:00Z"
                requirements:
                  min_test_coverage: 90
                  security_scan_passed: true
                  performance_benchmarks: true
                  audit_trail_complete: true

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

  schemas:
    ModelCreateRequest:
      type: object
      required:
        - model_size
        - optimization_profile
      properties:
        model_size:
          type: string
          enum: [tiny, small, base, large, xlarge]
          description: Predefined model size configuration
          example: "base"
        optimization_profile:
          type: string
          enum: [development, production, inference, training, edge_deployment]
          description: Optimization profile for use case
          example: "production"
        config_overrides:
          type: object
          description: Configuration parameter overrides
          properties:
            architecture:
              $ref: '#/components/schemas/ArchitectureConfig'
            training:
              $ref: '#/components/schemas/TrainingConfig'
            nasa_compliance:
              $ref: '#/components/schemas/NASAComplianceConfig'

    ArchitectureConfig:
      type: object
      properties:
        hidden_size:
          type: integer
          minimum: 64
          description: Hidden layer size
          example: 768
        num_attention_heads:
          type: integer
          minimum: 1
          description: Number of attention heads
          example: 12
        num_hidden_layers:
          type: integer
          minimum: 1
          description: Number of transformer layers
          example: 12
        use_1bit_quantization:
          type: boolean
          description: Enable 1-bit weight quantization
          example: true

    TrainingConfig:
      type: object
      properties:
        learning_rate:
          type: number
          format: float
          minimum: 0
          description: Learning rate for training
          example: 0.0001
        batch_size:
          type: integer
          minimum: 1
          description: Training batch size
          example: 32
        gradient_checkpointing:
          type: boolean
          description: Enable gradient checkpointing
          example: true

    NASAComplianceConfig:
      type: object
      properties:
        compliance_level:
          type: string
          enum: [standard, enhanced, defense_grade]
          description: Required compliance level
          example: "enhanced"
        enable_audit_trail:
          type: boolean
          description: Enable comprehensive audit logging
          example: true

    ModelCreateResponse:
      type: object
      required:
        - model_id
        - status
        - config
        - memory_footprint
      properties:
        model_id:
          type: string
          description: Unique model identifier
          example: "bitnet_base_prod_001"
        status:
          type: string
          enum: [created, initializing, ready, error]
          description: Model creation status
        config:
          type: object
          properties:
            total_parameters_millions:
              type: number
              format: float
              description: Total model parameters in millions
            quantized_parameters_millions:
              type: number
              format: float
              description: Quantized parameters in millions
            memory_reduction_factor:
              type: number
              format: float
              description: Memory reduction achieved
        memory_footprint:
          $ref: '#/components/schemas/MemoryFootprint'

    ModelInfo:
      type: object
      properties:
        model_id:
          type: string
          description: Model identifier
        created_at:
          type: string
          format: date-time
          description: Model creation timestamp
        config:
          $ref: '#/components/schemas/ModelConfiguration'
        performance_stats:
          $ref: '#/components/schemas/PerformanceStats'
        memory_footprint:
          $ref: '#/components/schemas/MemoryFootprint'

    ModelConfiguration:
      type: object
      properties:
        model_size:
          type: string
          description: Model size category
        optimization_profile:
          type: string
          description: Applied optimization profile
        architecture:
          $ref: '#/components/schemas/ArchitectureConfig'
        quantization_enabled:
          type: boolean
          description: Whether quantization is active

    PerformanceStats:
      type: object
      properties:
        memory_reduction_achieved:
          type: number
          format: float
          description: Actual memory reduction factor
        speedup_achieved:
          type: number
          format: float
          description: Inference speedup factor
        accuracy_preservation:
          type: number
          format: float
          description: Accuracy retention (0.0-1.0)
        inference_latency_ms:
          type: number
          format: float
          description: Average inference latency

    MemoryFootprint:
      type: object
      properties:
        model_memory_mb:
          type: number
          format: float
          description: Model weight memory in MB
        training_memory_mb:
          type: number
          format: float
          description: Total training memory in MB
        inference_memory_mb:
          type: number
          format: float
          description: Inference memory in MB
        compression_ratio:
          type: number
          format: float
          description: Memory compression ratio

    MemoryOptimizationRequest:
      type: object
      required:
        - model_id
        - optimization_level
      properties:
        model_id:
          type: string
          description: Model to optimize
        optimization_level:
          type: string
          enum: [development, balanced, production]
          description: Optimization intensity
        target_memory_reduction:
          type: number
          format: float
          minimum: 1.0
          description: Target memory reduction factor
        enable_gradient_checkpointing:
          type: boolean
          description: Enable gradient checkpointing

    MemoryOptimizationResponse:
      type: object
      properties:
        status:
          type: string
          enum: [optimized, failed, partial]
          description: Optimization result
        memory_reduction_achieved:
          type: number
          format: float
          description: Actual reduction achieved
        peak_memory_usage_mb:
          type: number
          format: float
          description: Peak memory usage
        optimization_time_seconds:
          type: number
          format: float
          description: Time taken for optimization

    InferenceOptimizationRequest:
      type: object
      required:
        - model_id
      properties:
        model_id:
          type: string
          description: Model to optimize
        enable_torch_compile:
          type: boolean
          description: Enable PyTorch compilation
        use_custom_kernels:
          type: boolean
          description: Use optimized CUDA kernels
        target_speedup:
          type: number
          format: float
          description: Target speedup factor

    InferenceOptimizationResponse:
      type: object
      properties:
        status:
          type: string
          description: Optimization status
        speedup_achieved:
          type: number
          format: float
          description: Measured speedup factor
        latency_reduction_percent:
          type: number
          format: float
          description: Latency improvement percentage

    BenchmarkRequest:
      type: object
      required:
        - model_id
        - benchmark_suite
      properties:
        model_id:
          type: string
          description: Model to benchmark
        benchmark_suite:
          type: string
          enum: [basic, comprehensive, performance, accuracy]
          description: Benchmark suite to run
        test_inputs:
          type: object
          properties:
            batch_size:
              type: integer
              description: Test batch size
            sequence_length:
              type: integer
              description: Input sequence length
            num_samples:
              type: integer
              description: Number of test samples

    BenchmarkResponse:
      type: object
      properties:
        benchmark_id:
          type: string
          description: Benchmark execution ID
        status:
          type: string
          enum: [completed, failed, running]
        results:
          type: object
          properties:
            memory_benchmark:
              $ref: '#/components/schemas/MemoryBenchmarkResults'
            speed_benchmark:
              $ref: '#/components/schemas/SpeedBenchmarkResults'
            accuracy_benchmark:
              $ref: '#/components/schemas/AccuracyBenchmarkResults'

    MemoryBenchmarkResults:
      type: object
      properties:
        peak_memory_mb:
          type: number
          format: float
        memory_reduction_factor:
          type: number
          format: float
        target_achieved:
          type: boolean
          description: Whether 8x target was achieved

    SpeedBenchmarkResults:
      type: object
      properties:
        inference_time_ms:
          type: number
          format: float
        speedup_factor:
          type: number
          format: float
        throughput_tokens_per_second:
          type: number
          format: float

    AccuracyBenchmarkResults:
      type: object
      properties:
        baseline_accuracy:
          type: number
          format: float
        quantized_accuracy:
          type: number
          format: float
        accuracy_degradation:
          type: number
          format: float
        target_achieved:
          type: boolean
          description: Whether <10% degradation achieved

    ValidationRequest:
      type: object
      required:
        - model_id
      properties:
        model_id:
          type: string
          description: Model to validate
        validation_suite:
          type: string
          enum: [basic, comprehensive, nasa_compliance]
          description: Validation suite to run
        include_baseline_comparison:
          type: boolean
          description: Compare against full-precision baseline

    ValidationResponse:
      type: object
      properties:
        validation_status:
          type: string
          enum: [PASSED, FAILED, WARNING]
          description: Overall validation result
        targets_achieved:
          type: boolean
          description: All performance targets met
        production_ready:
          type: boolean
          description: Ready for production deployment
        results:
          type: object
          properties:
            memory_reduction_achieved:
              type: number
              format: float
            speedup_achieved:
              type: number
              format: float
            accuracy_degradation:
              type: number
              format: float
            nasa_compliance_score:
              type: number
              format: float
            inference_latency_p95_ms:
              type: number
              format: float

    MemoryProfilingRequest:
      type: object
      required:
        - model_id
      properties:
        model_id:
          type: string
        profiling_mode:
          type: string
          enum: [basic, comprehensive, detailed]
        sample_inputs:
          type: object
          description: Test inputs for profiling

    MemoryProfilingResponse:
      type: object
      properties:
        profile_id:
          type: string
        memory_analysis:
          type: object
          properties:
            peak_memory_usage:
              type: number
              format: float
            memory_efficiency:
              type: number
              format: float
            hotspots:
              type: array
              items:
                type: object
                properties:
                  component:
                    type: string
                  memory_usage_mb:
                    type: number
                    format: float

    SpeedProfilingRequest:
      type: object
      required:
        - model_id
      properties:
        model_id:
          type: string
        profiling_duration_seconds:
          type: integer
          minimum: 10
        input_generator:
          type: object
          description: Configuration for test input generation

    SpeedProfilingResponse:
      type: object
      properties:
        profile_id:
          type: string
        speed_analysis:
          type: object
          properties:
            average_latency_ms:
              type: number
              format: float
            p95_latency_ms:
              type: number
              format: float
            throughput_ops_per_second:
              type: number
              format: float
            bottlenecks:
              type: array
              items:
                type: object
                properties:
                  operation:
                    type: string
                  time_percentage:
                    type: number
                    format: float

    ComplianceStatus:
      type: object
      properties:
        compliance_score:
          type: number
          format: float
          minimum: 0.0
          maximum: 1.0
          description: Overall compliance score (0.0-1.0)
        overall_status:
          type: string
          enum: [COMPLIANT, NON_COMPLIANT, WARNING]
        compliance_level:
          type: string
          enum: [standard, enhanced, defense_grade]
        last_audit_date:
          type: string
          format: date-time
        requirements:
          type: object
          properties:
            min_test_coverage:
              type: number
              format: float
            security_scan_passed:
              type: boolean
            performance_benchmarks:
              type: boolean
            audit_trail_complete:
              type: boolean

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        request_id:
          type: string
          description: Request identifier for debugging

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INVALID_REQUEST"
            message: "Invalid model size specified"
            details:
              field: "model_size"
              allowed_values: ["tiny", "small", "base", "large", "xlarge"]

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "NOT_FOUND"
            message: "Model with ID 'invalid_id' not found"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INTERNAL_ERROR"
            message: "An unexpected error occurred during model creation"

tags:
  - name: Models
    description: BitNet model lifecycle management
  - name: Optimization
    description: Memory and inference optimization
  - name: Benchmarks
    description: Performance benchmarking and validation
  - name: Validation
    description: Performance target validation
  - name: Profiling
    description: Advanced profiling and analysis
  - name: Compliance
    description: NASA POT10 compliance monitoring