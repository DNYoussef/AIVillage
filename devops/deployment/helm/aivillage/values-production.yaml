# Production values for aivillage
# Override default values for production environment

# Production deployment configuration
deployment:
  replicaCount: 5  # Higher replica count for production
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2

# Production ingress
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "2000"  # Higher rate limit
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: api.aivillage.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: aivillage-production-tls
      hosts:
        - api.aivillage.com

# Production service configurations with higher resource allocations
gateway:
  replicaCount: 5
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1"
  env:
    RATE_LIMIT_REQUESTS: "2000"
    RATE_LIMIT_WINDOW: "60"
    GUNICORN_WORKERS: "4"
    GUNICORN_THREADS: "2"

twin:
  replicaCount: 3
  resources:
    requests:
      memory: "1Gi"
      cpu: "800m"
    limits:
      memory: "2Gi"
      cpu: "1.5"

creditsAPI:
  replicaCount: 3
  resources:
    requests:
      memory: "512Mi"
      cpu: "400m"
    limits:
      memory: "1Gi"
      cpu: "800m"

creditsWorker:
  replicaCount: 2  # More workers for production
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "400m"

hyperagMCP:
  replicaCount: 3
  resources:
    requests:
      memory: "1Gi"
      cpu: "800m"
    limits:
      memory: "2Gi"
      cpu: "1.5"

agentForge:
  replicaCount: 3
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "4Gi"
      cpu: "2"

compressionService:
  replicaCount: 2
  resources:
    requests:
      memory: "4Gi"
      cpu: "2"
    limits:
      memory: "8Gi"
      cpu: "4"

evolutionEngine:
  replicaCount: 2
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "4Gi"
      cpu: "2"

meshNetwork:
  replicaCount: 3
  resources:
    requests:
      memory: "512Mi"
      cpu: "400m"
    limits:
      memory: "1Gi"
      cpu: "800m"

# Production database configurations
postgresql:
  primary:
    persistence:
      size: 100Gi  # Larger storage for production
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"
      limits:
        memory: "4Gi"
        cpu: "2"

redis:
  master:
    persistence:
      size: 20Gi
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1"

neo4j:
  persistence:
    size: 100Gi
  resources:
    requests:
      memory: "4Gi"
      cpu: "2"
    limits:
      memory: "8Gi"
      cpu: "4"

qdrant:
  persistence:
    size: 100Gi
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "4Gi"
      cpu: "2"

# Production monitoring with longer retention
monitoring:
  prometheus:
    retention: "30d"  # 30 days retention for production
    resources:
      requests:
        memory: "2Gi"
        cpu: "1"
      limits:
        memory: "4Gi"
        cpu: "2"
  grafana:
    resources:
      requests:
        memory: "512Mi"
        cpu: "400m"
      limits:
        memory: "1Gi"
        cpu: "800m"

# Production resource quotas
resources:
  requests:
    cpu: "20"
    memory: "40Gi"
  limits:
    cpu: "50"
    memory: "100Gi"

# Production node selectors (if using dedicated nodes)
nodeSelector:
  node-type: "production"

# Production tolerations and affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - aivillage-gateway
            - aivillage-twin
            - aivillage-hyperag-mcp
        topologyKey: kubernetes.io/hostname

# Production secrets (these should be set via CI/CD)
secrets:
  # These will be overridden by environment variables in CI/CD
  postgresPassword: "REPLACE_IN_CICD"
  redisPassword: "REPLACE_IN_CICD"
  neo4jPassword: "REPLACE_IN_CICD"
  hyperhagJwtSecret: "REPLACE_IN_CICD"
  openaiApiKey: "REPLACE_IN_CICD"
  anthropicApiKey: "REPLACE_IN_CICD"
  grafanaPassword: "REPLACE_IN_CICD"
