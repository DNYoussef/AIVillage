apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "aivillage.fullname" . }}-config
  labels:
    {{- include "aivillage.labels" . | nindent 4 }}
data:
  # Database initialization script
  init.sql: |
    -- AIVillage database initialization
    -- Creates basic tables for production deployment

    -- Create extensions
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pgcrypto";

    -- Agent states table
    CREATE TABLE IF NOT EXISTS agent_states (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        agent_id VARCHAR(255) NOT NULL,
        agent_type VARCHAR(100) NOT NULL,
        state JSONB NOT NULL DEFAULT '{}',
        metadata JSONB DEFAULT '{}',
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        UNIQUE(agent_id)
    );

    -- User profiles table
    CREATE TABLE IF NOT EXISTS user_profiles (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        user_id VARCHAR(255) NOT NULL UNIQUE,
        profile_data JSONB NOT NULL DEFAULT '{}',
        preferences JSONB DEFAULT '{}',
        privacy_settings JSONB DEFAULT '{}',
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );

    -- Learning sessions table
    CREATE TABLE IF NOT EXISTS learning_sessions (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        user_id VARCHAR(255) NOT NULL,
        agent_id VARCHAR(255),
        session_data JSONB NOT NULL DEFAULT '{}',
        metrics JSONB DEFAULT '{}',
        started_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        ended_at TIMESTAMP WITH TIME ZONE,
        duration_seconds INTEGER,
        FOREIGN KEY (user_id) REFERENCES user_profiles(user_id)
    );

    -- Evolution metrics table
    CREATE TABLE IF NOT EXISTS evolution_metrics (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        agent_id VARCHAR(255) NOT NULL,
        generation INTEGER NOT NULL,
        fitness_score DECIMAL(10, 6),
        metrics JSONB DEFAULT '{}',
        parent_ids TEXT[],
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );

    -- Digital twin data table
    CREATE TABLE IF NOT EXISTS digital_twin_data (
        id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
        user_id VARCHAR(255) NOT NULL,
        data_type VARCHAR(100) NOT NULL,
        data_content JSONB NOT NULL,
        privacy_level INTEGER DEFAULT 3,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        expires_at TIMESTAMP WITH TIME ZONE,
        FOREIGN KEY (user_id) REFERENCES user_profiles(user_id)
    );

    -- Create indexes for performance
    CREATE INDEX IF NOT EXISTS idx_agent_states_agent_id ON agent_states(agent_id);
    CREATE INDEX IF NOT EXISTS idx_agent_states_agent_type ON agent_states(agent_type);
    CREATE INDEX IF NOT EXISTS idx_user_profiles_user_id ON user_profiles(user_id);
    CREATE INDEX IF NOT EXISTS idx_learning_sessions_user_id ON learning_sessions(user_id);
    CREATE INDEX IF NOT EXISTS idx_learning_sessions_agent_id ON learning_sessions(agent_id);
    CREATE INDEX IF NOT EXISTS idx_evolution_metrics_agent_id ON evolution_metrics(agent_id);
    CREATE INDEX IF NOT EXISTS idx_evolution_metrics_generation ON evolution_metrics(generation);
    CREATE INDEX IF NOT EXISTS idx_digital_twin_data_user_id ON digital_twin_data(user_id);
    CREATE INDEX IF NOT EXISTS idx_digital_twin_data_type ON digital_twin_data(data_type);
    CREATE INDEX IF NOT EXISTS idx_digital_twin_data_expires ON digital_twin_data(expires_at);

  # Application configuration
  app.yaml: |
    # AIVillage Application Configuration
    app:
      name: "AIVillage"
      version: {{ .Chart.AppVersion | quote }}
      environment: {{ .Values.environment | default "production" | quote }}
      debug: {{ .Values.debug | default false }}

    logging:
      level: {{ .Values.logLevel | default "INFO" | quote }}
      format: "json"
      include_request_id: true

    security:
      cors_origins:
        {{- range .Values.security.corsOrigins | default list }}
        - {{ . | quote }}
        {{- end }}
      rate_limiting:
        enabled: true
        requests_per_minute: {{ .Values.rateLimiting.requestsPerMinute | default 1000 }}
        burst_size: {{ .Values.rateLimiting.burstSize | default 100 }}

    features:
      digital_twin: {{ .Values.twin.enabled | default true }}
      agent_forge: {{ .Values.agentForge.enabled | default true }}
      compression: {{ .Values.compressionService.enabled | default true }}
      evolution: {{ .Values.evolutionEngine.enabled | default true }}
      mesh_network: {{ .Values.meshNetwork.enabled | default true }}

    monitoring:
      metrics_enabled: {{ .Values.monitoring.enabled | default true }}
      tracing_enabled: {{ .Values.monitoring.tracing.enabled | default false }}
      health_check_interval: {{ .Values.monitoring.healthCheckInterval | default 30 }}

  # Feature flags configuration
  features.yaml: |
    flags:
      # Core features
      digital_twin_privacy:
        enabled: true
        environments: ["production", "staging"]
        description: "Enhanced privacy controls for digital twins"

      agent_coordination:
        enabled: true
        environments: ["production", "staging"]
        rollout_percentage: 100
        description: "Multi-agent coordination system"

      distributed_rag:
        enabled: true
        environments: ["production", "staging"]
        rollout_percentage: 100
        description: "Distributed RAG with Bayesian trust"

      p2p_mesh_network:
        enabled: {{ .Values.meshNetwork.enabled | default true }}
        environments: ["production", "staging"]
        rollout_percentage: 80
        description: "P2P mesh networking with BitChat/BetaNet"

      # Experimental features
      quantum_compression:
        enabled: false
        environments: ["staging"]
        rollout_percentage: 10
        description: "Experimental quantum-inspired compression"

      federated_learning:
        enabled: true
        environments: ["production", "staging"]
        rollout_percentage: 50
        description: "Privacy-preserving federated learning"
