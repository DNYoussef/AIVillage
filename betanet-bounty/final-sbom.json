{
  "SPDXID": "SPDXRef-DOCUMENT",
  "created": "2025-08-16T15:25:37Z",
  "creator": "Tool: betanet-linter",
  "dataLicense": "CC0-1.0",
  "documentNamespace": "https://betanet.org/sbom/betanet-bounty-d96dce4b-29e5-4045-940c-ed0100b66dcb",
  "name": "Betanet SBOM - betanet-bounty",
  "packages": [
    {
      "SPDXID": "SPDXRef-addr2line",
      "copyrightText": "NOASSERTION",
      "description": "A cross-platform symbolication library written in Rust, using `gimli`",
      "downloadLocation": "https://github.com/gimli-rs/addr2line",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "addr2line",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.24.2"
    },
    {
      "SPDXID": "SPDXRef-adler2",
      "copyrightText": "NOASSERTION",
      "description": "A simple clean-room implementation of the Adler-32 checksum",
      "downloadLocation": "https://github.com/oyvindln/adler2",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "0BSD OR MIT OR Apache-2.0",
      "name": "adler2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "2.0.1"
    },
    {
      "SPDXID": "SPDXRef-aead",
      "copyrightText": "NOASSERTION",
      "description": "Traits for Authenticated Encryption with Associated Data (AEAD) algorithms,\nsuch as AES-GCM as ChaCha20Poly1305, which provide a high-level API\n",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "aead",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.4.3"
    },
    {
      "SPDXID": "SPDXRef-aead",
      "copyrightText": "NOASSERTION",
      "description": "Traits for Authenticated Encryption with Associated Data (AEAD) algorithms,\nsuch as AES-GCM as ChaCha20Poly1305, which provide a high-level API\n",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "aead",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.5.2"
    },
    {
      "SPDXID": "SPDXRef-aes",
      "copyrightText": "NOASSERTION",
      "description": "Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)\nincluding support for AES in counter mode (a.k.a. AES-CTR)\n",
      "downloadLocation": "https://github.com/RustCrypto/block-ciphers",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "aes",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "0.7.5"
    },
    {
      "SPDXID": "SPDXRef-aesgcm",
      "copyrightText": "NOASSERTION",
      "description": "Pure Rust implementation of the AES-GCM (Galois/Counter Mode)\nAuthenticated Encryption with Associated Data (AEAD) Cipher\nwith optional architecture-specific hardware acceleration\n",
      "downloadLocation": "https://github.com/RustCrypto/AEADs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "aes-gcm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.9.2"
    },
    {
      "SPDXID": "SPDXRef-agentfabric",
      "copyrightText": "NOASSERTION",
      "description": "Unified agent messaging API for RPC, bundles, and MLS cohorts",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "agent-fabric",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-ahocorasick",
      "copyrightText": "NOASSERTION",
      "description": "Fast multiple substring searching.",
      "downloadLocation": "https://github.com/BurntSushi/aho-corasick",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/aho-corasick",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense OR MIT",
      "name": "aho-corasick",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.1.3"
    },
    {
      "SPDXID": "SPDXRef-androidtzdata",
      "copyrightText": "NOASSERTION",
      "description": "Parser for the Android-specific tzdata file",
      "downloadLocation": "https://github.com/RumovZ/android-tzdata",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "android-tzdata",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.1.1"
    },
    {
      "SPDXID": "SPDXRef-android_system_properties",
      "copyrightText": "NOASSERTION",
      "description": "Minimal Android system properties wrapper",
      "downloadLocation": "https://github.com/nical/android_system_properties",
      "filesAnalyzed": false,
      "homepage": "https://github.com/nical/android_system_properties",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "android_system_properties",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1e"
      },
      "version": "0.1.5"
    },
    {
      "SPDXID": "SPDXRef-anes",
      "copyrightText": "NOASSERTION",
      "description": "ANSI Escape Sequences provider & parser",
      "downloadLocation": "https://github.com/zrzka/anes-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "anes",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.1.6"
    },
    {
      "SPDXID": "SPDXRef-anstream",
      "copyrightText": "NOASSERTION",
      "description": "IO stream adapters for writing colored text that will gracefully degrade according to your terminal's capabilities.",
      "downloadLocation": "https://github.com/rust-cli/anstyle.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "anstream",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.6.20"
    },
    {
      "SPDXID": "SPDXRef-anstyle",
      "copyrightText": "NOASSERTION",
      "description": "ANSI text styling",
      "downloadLocation": "https://github.com/rust-cli/anstyle.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "anstyle",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "1.0.11"
    },
    {
      "SPDXID": "SPDXRef-anstyleparse",
      "copyrightText": "NOASSERTION",
      "description": "Parse ANSI Style Escapes",
      "downloadLocation": "https://github.com/rust-cli/anstyle.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "anstyle-parse",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.2.7"
    },
    {
      "SPDXID": "SPDXRef-anstylequery",
      "copyrightText": "NOASSERTION",
      "description": "Look up colored console capabilities",
      "downloadLocation": "https://github.com/rust-cli/anstyle.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "anstyle-query",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "1.1.4"
    },
    {
      "SPDXID": "SPDXRef-anstylewincon",
      "copyrightText": "NOASSERTION",
      "description": "Styling legacy Windows terminals",
      "downloadLocation": "https://github.com/rust-cli/anstyle.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "anstyle-wincon",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "3.0.10"
    },
    {
      "SPDXID": "SPDXRef-anyhow",
      "copyrightText": "NOASSERTION",
      "description": "Flexible concrete Error type built on std::error::Error",
      "downloadLocation": "https://github.com/dtolnay/anyhow",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "anyhow",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.0.99"
    },
    {
      "SPDXID": "SPDXRef-approx",
      "copyrightText": "NOASSERTION",
      "description": "Approximate floating point equality comparisons and assertions.",
      "downloadLocation": "https://github.com/brendanzab/approx",
      "filesAnalyzed": false,
      "homepage": "https://github.com/brendanzab/approx",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "approx",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.5.1"
    },
    {
      "SPDXID": "SPDXRef-asynctrait",
      "copyrightText": "NOASSERTION",
      "description": "Type erasure for async trait methods",
      "downloadLocation": "https://github.com/dtolnay/async-trait",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "async-trait",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.1.89"
    },
    {
      "SPDXID": "SPDXRef-atty",
      "copyrightText": "NOASSERTION",
      "description": "A simple interface for querying atty",
      "downloadLocation": "https://github.com/softprops/atty",
      "filesAnalyzed": false,
      "homepage": "https://github.com/softprops/atty",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "atty",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.2.14"
    },
    {
      "SPDXID": "SPDXRef-autocfg",
      "copyrightText": "NOASSERTION",
      "description": "Automatic cfg for Rust compiler features",
      "downloadLocation": "https://github.com/cuviper/autocfg",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "autocfg",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.5.0"
    },
    {
      "SPDXID": "SPDXRef-backtrace",
      "copyrightText": "NOASSERTION",
      "description": "A library to acquire a stack trace (backtrace) at runtime in a Rust program.\n",
      "downloadLocation": "https://github.com/rust-lang/backtrace-rs",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/backtrace-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "backtrace",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.3.75"
    },
    {
      "SPDXID": "SPDXRef-base64",
      "copyrightText": "NOASSERTION",
      "description": "encodes and decodes base64 as bytes or utf8",
      "downloadLocation": "https://github.com/marshallpierce/rust-base64",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "base64",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.21.7"
    },
    {
      "SPDXID": "SPDXRef-betanetc",
      "copyrightText": "NOASSERTION",
      "description": "C FFI library for Betanet integration with AI Village Python infrastructure",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-c",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-betanetcla",
      "copyrightText": "NOASSERTION",
      "description": "Betanet HTX Convergence Layer Adapter for DTN",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-cla",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-betanetdtn",
      "copyrightText": "NOASSERTION",
      "description": "Bundle Protocol v7 DTN implementation for Betanet",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-dtn",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-betanetffi",
      "copyrightText": "NOASSERTION",
      "description": "C FFI bindings for Betanet core components",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-ffi",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-betanethtx",
      "copyrightText": "NOASSERTION",
      "description": "Betanet HTX transport protocol implementation",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-htx",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-betanetlinter",
      "copyrightText": "NOASSERTION",
      "description": "Betanet spec-compliance linter CLI",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-linter",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-betanetmixnode",
      "copyrightText": "NOASSERTION",
      "description": "High-performance Nym-style mixnode for Betanet",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-mixnode",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-betanetutls",
      "copyrightText": "NOASSERTION",
      "description": "Chrome-Stable (N-2) uTLS template generator",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "betanet-utls",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-bincode",
      "copyrightText": "NOASSERTION",
      "description": "A binary serialization / deserialization strategy that uses Serde for transforming structs into bytes and vice versa!",
      "downloadLocation": "https://github.com/servo/bincode",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "bincode",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.3.3"
    },
    {
      "SPDXID": "SPDXRef-bitset",
      "copyrightText": "NOASSERTION",
      "description": "A set of bits",
      "downloadLocation": "https://github.com/contain-rs/bit-set",
      "filesAnalyzed": false,
      "homepage": "https://github.com/contain-rs/bit-set",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "bit-set",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.8.0"
    },
    {
      "SPDXID": "SPDXRef-bitvec",
      "copyrightText": "NOASSERTION",
      "description": "A vector of bits",
      "downloadLocation": "https://github.com/contain-rs/bit-vec",
      "filesAnalyzed": false,
      "homepage": "https://github.com/contain-rs/bit-vec",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "bit-vec",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.8.0"
    },
    {
      "SPDXID": "SPDXRef-bitchatcla",
      "copyrightText": "NOASSERTION",
      "description": "BitChat BLE Convergence Layer Adapter for DTN",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "bitchat-cla",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-bitflags",
      "copyrightText": "NOASSERTION",
      "description": "A macro to generate structures which behave like bitflags.\n",
      "downloadLocation": "https://github.com/bitflags/bitflags",
      "filesAnalyzed": false,
      "homepage": "https://github.com/bitflags/bitflags",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "bitflags",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "1.3.2"
    },
    {
      "SPDXID": "SPDXRef-bitflags",
      "copyrightText": "NOASSERTION",
      "description": "A macro to generate structures which behave like bitflags.\n",
      "downloadLocation": "https://github.com/bitflags/bitflags",
      "filesAnalyzed": false,
      "homepage": "https://github.com/bitflags/bitflags",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "bitflags",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "2.9.1"
    },
    {
      "SPDXID": "SPDXRef-blake2",
      "copyrightText": "NOASSERTION",
      "description": "BLAKE2 hash functions",
      "downloadLocation": "https://github.com/RustCrypto/hashes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "blake2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.10.6"
    },
    {
      "SPDXID": "SPDXRef-blockbuffer",
      "copyrightText": "NOASSERTION",
      "description": "Fixed size buffer for block processing of data",
      "downloadLocation": "https://github.com/RustCrypto/utils",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "block-buffer",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.9.0"
    },
    {
      "SPDXID": "SPDXRef-blockbuffer",
      "copyrightText": "NOASSERTION",
      "description": "Buffer type for block processing of data",
      "downloadLocation": "https://github.com/RustCrypto/utils",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "block-buffer",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.10.4"
    },
    {
      "SPDXID": "SPDXRef-bumpalo",
      "copyrightText": "NOASSERTION",
      "description": "A fast bump allocation arena for Rust.",
      "downloadLocation": "https://github.com/fitzgen/bumpalo",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "bumpalo",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "3.19.0"
    },
    {
      "SPDXID": "SPDXRef-bytemuck",
      "copyrightText": "NOASSERTION",
      "description": "A crate for mucking around with piles of bytes.",
      "downloadLocation": "https://github.com/Lokathor/bytemuck",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Zlib OR Apache-2.0 OR MIT",
      "name": "bytemuck",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "1.23.2"
    },
    {
      "SPDXID": "SPDXRef-byteorder",
      "copyrightText": "NOASSERTION",
      "description": "Library for reading/writing numbers in big-endian and little-endian.",
      "downloadLocation": "https://github.com/BurntSushi/byteorder",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/byteorder",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense OR MIT",
      "name": "byteorder",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "1.5.0"
    },
    {
      "SPDXID": "SPDXRef-bytes",
      "copyrightText": "NOASSERTION",
      "description": "Types and traits for working with bytes",
      "downloadLocation": "https://github.com/tokio-rs/bytes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "bytes",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.10.1"
    },
    {
      "SPDXID": "SPDXRef-camino",
      "copyrightText": "NOASSERTION",
      "description": "UTF-8 paths",
      "downloadLocation": "https://github.com/camino-rs/camino",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "camino",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.1.11"
    },
    {
      "SPDXID": "SPDXRef-cargoplatform",
      "copyrightText": "NOASSERTION",
      "description": "Cargo's representation of a target platform.",
      "downloadLocation": "https://github.com/rust-lang/cargo",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/cargo",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "cargo-platform",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.1.9"
    },
    {
      "SPDXID": "SPDXRef-cargo_metadata",
      "copyrightText": "NOASSERTION",
      "description": "structured access to the output of `cargo metadata`",
      "downloadLocation": "https://github.com/oli-obk/cargo_metadata",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "cargo_metadata",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.18.1"
    },
    {
      "SPDXID": "SPDXRef-cast",
      "copyrightText": "NOASSERTION",
      "description": "Ergonomic, checked cast functions for primitive types",
      "downloadLocation": "https://github.com/japaric/cast.rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "cast",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.3.0"
    },
    {
      "SPDXID": "SPDXRef-cbindgen",
      "copyrightText": "NOASSERTION",
      "description": "A tool for generating C bindings to Rust code.",
      "downloadLocation": "https://github.com/eqrion/cbindgen",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MPL-2.0",
      "name": "cbindgen",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.24.5"
    },
    {
      "SPDXID": "SPDXRef-cc",
      "copyrightText": "NOASSERTION",
      "description": "A build-time dependency for Cargo build scripts to assist in invoking the native\nC compiler to compile native C code into a static archive to be linked into Rust\ncode.\n",
      "downloadLocation": "https://github.com/rust-lang/cc-rs",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/cc-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "cc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "1.2.33"
    },
    {
      "SPDXID": "SPDXRef-cfgif",
      "copyrightText": "NOASSERTION",
      "description": "A macro to ergonomically define an item depending on a large number of #[cfg]\nparameters. Structured like an if-else chain, the first matching branch is the\nitem that gets emitted.\n",
      "downloadLocation": "https://github.com/rust-lang/cfg-if",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "cfg-if",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.0.1"
    },
    {
      "SPDXID": "SPDXRef-chacha20",
      "copyrightText": "NOASSERTION",
      "description": "The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits\nfrom the RustCrypto `cipher` crate, with optional architecture-specific\nhardware acceleration (AVX2, SSE2). Additionally provides the ChaCha8, ChaCha12,\nXChaCha20, XChaCha12 and XChaCha8 stream ciphers, and also optional\nrand_core-compatible RNGs based on those ciphers.\n",
      "downloadLocation": "https://github.com/RustCrypto/stream-ciphers",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "chacha20",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.8.2"
    },
    {
      "SPDXID": "SPDXRef-chacha20",
      "copyrightText": "NOASSERTION",
      "description": "The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits\nfrom the RustCrypto `cipher` crate, with optional architecture-specific\nhardware acceleration (AVX2, SSE2). Additionally provides the ChaCha8, ChaCha12,\nXChaCha20, XChaCha12 and XChaCha8 stream ciphers, and also optional\nrand_core-compatible RNGs based on those ciphers.\n",
      "downloadLocation": "https://github.com/RustCrypto/stream-ciphers",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "chacha20",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.9.1"
    },
    {
      "SPDXID": "SPDXRef-chacha20poly1305",
      "copyrightText": "NOASSERTION",
      "description": "Pure Rust implementation of the ChaCha20Poly1305 Authenticated Encryption\nwith Additional Data Cipher (RFC 8439) with optional architecture-specific\nhardware acceleration. Also contains implementations of the XChaCha20Poly1305\nextended nonce variant of ChaCha20Poly1305, and the reduced-round\nChaCha8Poly1305 and ChaCha12Poly1305 lightweight variants.\n",
      "downloadLocation": "https://github.com/RustCrypto/AEADs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "chacha20poly1305",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.9.1"
    },
    {
      "SPDXID": "SPDXRef-chacha20poly1305",
      "copyrightText": "NOASSERTION",
      "description": "Pure Rust implementation of the ChaCha20Poly1305 Authenticated Encryption\nwith Additional Data Cipher (RFC 8439) with optional architecture-specific\nhardware acceleration. Also contains implementations of the XChaCha20Poly1305\nextended nonce variant of ChaCha20Poly1305, and the reduced-round\nChaCha8Poly1305 and ChaCha12Poly1305 lightweight variants.\n",
      "downloadLocation": "https://github.com/RustCrypto/AEADs/tree/master/chacha20poly1305",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "chacha20poly1305",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "16"
      },
      "version": "0.10.1"
    },
    {
      "SPDXID": "SPDXRef-chrono",
      "copyrightText": "NOASSERTION",
      "description": "Date and time library for Rust",
      "downloadLocation": "https://github.com/chronotope/chrono",
      "filesAnalyzed": false,
      "homepage": "https://github.com/chronotope/chrono",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "chrono",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.4.41"
    },
    {
      "SPDXID": "SPDXRef-ciborium",
      "copyrightText": "NOASSERTION",
      "description": "serde implementation of CBOR using ciborium-basic",
      "downloadLocation": "https://github.com/enarx/ciborium",
      "filesAnalyzed": false,
      "homepage": "https://github.com/enarx/ciborium",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "ciborium",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.2.2"
    },
    {
      "SPDXID": "SPDXRef-ciboriumio",
      "copyrightText": "NOASSERTION",
      "description": "Simplified Read/Write traits for no_std usage",
      "downloadLocation": "https://github.com/enarx/ciborium",
      "filesAnalyzed": false,
      "homepage": "https://github.com/enarx/ciborium",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "ciborium-io",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.2.2"
    },
    {
      "SPDXID": "SPDXRef-ciboriumll",
      "copyrightText": "NOASSERTION",
      "description": "Low-level CBOR codec primitives",
      "downloadLocation": "https://github.com/enarx/ciborium",
      "filesAnalyzed": false,
      "homepage": "https://github.com/enarx/ciborium",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "ciborium-ll",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.2.2"
    },
    {
      "SPDXID": "SPDXRef-cipher",
      "copyrightText": "NOASSERTION",
      "description": "Traits for describing block ciphers and stream ciphers",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "cipher",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.3.0"
    },
    {
      "SPDXID": "SPDXRef-cipher",
      "copyrightText": "NOASSERTION",
      "description": "Traits for describing block ciphers and stream ciphers",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "cipher",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.4.4"
    },
    {
      "SPDXID": "SPDXRef-clap",
      "copyrightText": "NOASSERTION",
      "description": "A simple to use, efficient, and full-featured Command Line Argument Parser",
      "downloadLocation": "https://github.com/clap-rs/clap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "clap",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "3.2.25"
    },
    {
      "SPDXID": "SPDXRef-clap",
      "copyrightText": "NOASSERTION",
      "description": "A simple to use, efficient, and full-featured Command Line Argument Parser",
      "downloadLocation": "https://github.com/clap-rs/clap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "clap",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "4.5.45"
    },
    {
      "SPDXID": "SPDXRef-clap_builder",
      "copyrightText": "NOASSERTION",
      "description": "A simple to use, efficient, and full-featured Command Line Argument Parser",
      "downloadLocation": "https://github.com/clap-rs/clap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "clap_builder",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "4.5.44"
    },
    {
      "SPDXID": "SPDXRef-clap_derive",
      "copyrightText": "NOASSERTION",
      "description": "Parse command line argument by defining a struct, derive crate.",
      "downloadLocation": "https://github.com/clap-rs/clap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "clap_derive",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "4.5.45"
    },
    {
      "SPDXID": "SPDXRef-clap_lex",
      "copyrightText": "NOASSERTION",
      "description": "Minimal, flexible command line parser",
      "downloadLocation": "https://github.com/clap-rs/clap/tree/master/clap_lex",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "clap_lex",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.2.4"
    },
    {
      "SPDXID": "SPDXRef-clap_lex",
      "copyrightText": "NOASSERTION",
      "description": "Minimal, flexible command line parser",
      "downloadLocation": "https://github.com/clap-rs/clap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "clap_lex",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.7.5"
    },
    {
      "SPDXID": "SPDXRef-colorchoice",
      "copyrightText": "NOASSERTION",
      "description": "Global override of color control",
      "downloadLocation": "https://github.com/rust-cli/anstyle.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "colorchoice",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "1.0.4"
    },
    {
      "SPDXID": "SPDXRef-corefoundationsys",
      "copyrightText": "NOASSERTION",
      "description": "Bindings to Core Foundation for macOS",
      "downloadLocation": "https://github.com/servo/core-foundation-rs",
      "filesAnalyzed": false,
      "homepage": "https://github.com/servo/core-foundation-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "core-foundation-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "18"
      },
      "version": "0.8.7"
    },
    {
      "SPDXID": "SPDXRef-cpufeatures",
      "copyrightText": "NOASSERTION",
      "description": "Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets, \nwith no_std support and support for mobile targets including Android and iOS\n",
      "downloadLocation": "https://github.com/RustCrypto/utils",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "cpufeatures",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.2.17"
    },
    {
      "SPDXID": "SPDXRef-crc",
      "copyrightText": "NOASSERTION",
      "description": "Rust implementation of CRC with support of various standards",
      "downloadLocation": "https://github.com/mrhooray/crc-rs.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "crc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "3.3.0"
    },
    {
      "SPDXID": "SPDXRef-crccatalog",
      "copyrightText": "NOASSERTION",
      "description": "Catalog of CRC algorithms (generated from http://reveng.sourceforge.net/crc-catalogue) expressed as simple Rust structs.",
      "downloadLocation": "https://github.com/akhilles/crc-catalog.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "crc-catalog",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "2.4.0"
    },
    {
      "SPDXID": "SPDXRef-crc32fast",
      "copyrightText": "NOASSERTION",
      "description": "Fast, SIMD-accelerated CRC32 (IEEE) checksum computation",
      "downloadLocation": "https://github.com/srijs/rust-crc32fast",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "crc32fast",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "1.5.0"
    },
    {
      "SPDXID": "SPDXRef-criterion",
      "copyrightText": "NOASSERTION",
      "description": "Statistics-driven micro-benchmarking library",
      "downloadLocation": "https://github.com/bheisler/criterion.rs",
      "filesAnalyzed": false,
      "homepage": "https://bheisler.github.io/criterion.rs/book/index.html",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0/MIT",
      "name": "criterion",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.4.0"
    },
    {
      "SPDXID": "SPDXRef-criterionplot",
      "copyrightText": "NOASSERTION",
      "description": "Criterion's plotting library",
      "downloadLocation": "https://github.com/bheisler/criterion.rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "criterion-plot",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.5.0"
    },
    {
      "SPDXID": "SPDXRef-crossbeamdeque",
      "copyrightText": "NOASSERTION",
      "description": "Concurrent work-stealing deque",
      "downloadLocation": "https://github.com/crossbeam-rs/crossbeam",
      "filesAnalyzed": false,
      "homepage": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-deque",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "crossbeam-deque",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.8.6"
    },
    {
      "SPDXID": "SPDXRef-crossbeamepoch",
      "copyrightText": "NOASSERTION",
      "description": "Epoch-based garbage collection",
      "downloadLocation": "https://github.com/crossbeam-rs/crossbeam",
      "filesAnalyzed": false,
      "homepage": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "crossbeam-epoch",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.9.18"
    },
    {
      "SPDXID": "SPDXRef-crossbeamutils",
      "copyrightText": "NOASSERTION",
      "description": "Utilities for concurrent programming",
      "downloadLocation": "https://github.com/crossbeam-rs/crossbeam",
      "filesAnalyzed": false,
      "homepage": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "crossbeam-utils",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.8.21"
    },
    {
      "SPDXID": "SPDXRef-crunchy",
      "copyrightText": "NOASSERTION",
      "description": "Crunchy unroller: deterministically unroll constant loops",
      "downloadLocation": "https://github.com/eira-fransham/crunchy",
      "filesAnalyzed": false,
      "homepage": "https://github.com/eira-fransham/crunchy",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "crunchy",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.2.4"
    },
    {
      "SPDXID": "SPDXRef-cryptocommon",
      "copyrightText": "NOASSERTION",
      "description": "Common cryptographic traits",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "crypto-common",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.1.6"
    },
    {
      "SPDXID": "SPDXRef-ctr",
      "copyrightText": "NOASSERTION",
      "description": "CTR block mode of operation",
      "downloadLocation": "https://github.com/RustCrypto/stream-ciphers",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "ctr",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "0.7.0"
    },
    {
      "SPDXID": "SPDXRef-curve25519dalek",
      "copyrightText": "NOASSERTION",
      "description": "A pure-Rust implementation of group operations on ristretto255 and Curve25519",
      "downloadLocation": "https://github.com/dalek-cryptography/curve25519-dalek",
      "filesAnalyzed": false,
      "homepage": "https://dalek.rs/curve25519-dalek",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-3-Clause",
      "name": "curve25519-dalek",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "3.2.0"
    },
    {
      "SPDXID": "SPDXRef-curve25519dalek",
      "copyrightText": "NOASSERTION",
      "description": "A pure-Rust implementation of group operations on ristretto255 and Curve25519",
      "downloadLocation": "https://github.com/dalek-cryptography/curve25519-dalek",
      "filesAnalyzed": false,
      "homepage": "https://github.com/dalek-cryptography/curve25519-dalek",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-3-Clause",
      "name": "curve25519-dalek",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1a"
      },
      "version": "4.0.0-rc.1"
    },
    {
      "SPDXID": "SPDXRef-dashmap",
      "copyrightText": "NOASSERTION",
      "description": "Blazing fast concurrent HashMap for Rust.",
      "downloadLocation": "https://github.com/xacrimon/dashmap",
      "filesAnalyzed": false,
      "homepage": "https://github.com/xacrimon/dashmap",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "dashmap",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "6.1.0"
    },
    {
      "SPDXID": "SPDXRef-digest",
      "copyrightText": "NOASSERTION",
      "description": "Traits for cryptographic hash functions",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "digest",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.9.0"
    },
    {
      "SPDXID": "SPDXRef-digest",
      "copyrightText": "NOASSERTION",
      "description": "Traits for cryptographic hash functions and message authentication codes",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "digest",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.10.7"
    },
    {
      "SPDXID": "SPDXRef-ed25519",
      "copyrightText": "NOASSERTION",
      "description": "Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032)\nsupport library providing signature type definitions and PKCS#8 private key\ndecoding/encoding support\n",
      "downloadLocation": "https://github.com/RustCrypto/signatures/tree/master/ed25519",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "ed25519",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.5.3"
    },
    {
      "SPDXID": "SPDXRef-ed25519dalek",
      "copyrightText": "NOASSERTION",
      "description": "Fast and efficient ed25519 EdDSA key generations, signing, and verification in pure Rust.",
      "downloadLocation": "https://github.com/dalek-cryptography/ed25519-dalek",
      "filesAnalyzed": false,
      "homepage": "https://dalek.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-3-Clause",
      "name": "ed25519-dalek",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "1.0.0"
    },
    {
      "SPDXID": "SPDXRef-either",
      "copyrightText": "NOASSERTION",
      "description": "The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.\n",
      "downloadLocation": "https://github.com/rayon-rs/either",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "either",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.15.0"
    },
    {
      "SPDXID": "SPDXRef-equivalent",
      "copyrightText": "NOASSERTION",
      "description": "Traits for key comparison in maps.",
      "downloadLocation": "https://github.com/indexmap-rs/equivalent",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "equivalent",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "1.0.2"
    },
    {
      "SPDXID": "SPDXRef-errno",
      "copyrightText": "NOASSERTION",
      "description": "Cross-platform interface to the `errno` variable.",
      "downloadLocation": "https://github.com/lambda-fairy/rust-errno",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "errno",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.3.13"
    },
    {
      "SPDXID": "SPDXRef-fastrand",
      "copyrightText": "NOASSERTION",
      "description": "A simple and fast random number generator",
      "downloadLocation": "https://github.com/smol-rs/fastrand",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "fastrand",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "2.3.0"
    },
    {
      "SPDXID": "SPDXRef-federated",
      "copyrightText": "NOASSERTION",
      "description": "No description",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "federated",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-fiatcrypto",
      "copyrightText": "NOASSERTION",
      "description": "Fiat-crypto generated Rust",
      "downloadLocation": "https://github.com/mit-plv/fiat-crypto",
      "filesAnalyzed": false,
      "homepage": "https://github.com/mit-plv/fiat-crypto",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0 OR BSD-1-Clause",
      "name": "fiat-crypto",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.1.20"
    },
    {
      "SPDXID": "SPDXRef-fixedbitset",
      "copyrightText": "NOASSERTION",
      "description": "FixedBitSet is a simple bitset collection",
      "downloadLocation": "https://github.com/petgraph/fixedbitset",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "fixedbitset",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.4.2"
    },
    {
      "SPDXID": "SPDXRef-fnv",
      "copyrightText": "NOASSERTION",
      "description": "Fowler–Noll–Vo hash function",
      "downloadLocation": "https://github.com/servo/rust-fnv",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 / MIT",
      "name": "fnv",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "1.0.7"
    },
    {
      "SPDXID": "SPDXRef-foreigntypes",
      "copyrightText": "NOASSERTION",
      "description": "A framework for Rust wrappers over C APIs",
      "downloadLocation": "https://github.com/sfackler/foreign-types",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "foreign-types",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.3.2"
    },
    {
      "SPDXID": "SPDXRef-foreigntypesshared",
      "copyrightText": "NOASSERTION",
      "description": "An internal crate used by foreign-types",
      "downloadLocation": "https://github.com/sfackler/foreign-types",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "foreign-types-shared",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "19"
      },
      "version": "0.1.1"
    },
    {
      "SPDXID": "SPDXRef-fs2",
      "copyrightText": "NOASSERTION",
      "description": "Cross-platform file locks and file duplication.",
      "downloadLocation": "https://github.com/danburkert/fs2-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "fs2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "0.4.3"
    },
    {
      "SPDXID": "SPDXRef-futures",
      "copyrightText": "NOASSERTION",
      "description": "An implementation of futures and streams featuring zero allocations,\ncomposability, and iterator-like interfaces.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futureschannel",
      "copyrightText": "NOASSERTION",
      "description": "Channels for asynchronous communication using futures-rs.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-channel",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futurescore",
      "copyrightText": "NOASSERTION",
      "description": "The core traits and types in for the `futures` library.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futuresexecutor",
      "copyrightText": "NOASSERTION",
      "description": "Executors for asynchronous tasks based on the futures-rs library.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-executor",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "16"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futuresio",
      "copyrightText": "NOASSERTION",
      "description": "The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-io",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futuresmacro",
      "copyrightText": "NOASSERTION",
      "description": "The futures-rs procedural macro implementations.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-macro",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futuressink",
      "copyrightText": "NOASSERTION",
      "description": "The asynchronous `Sink` trait for the futures-rs library.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-sink",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futurestask",
      "copyrightText": "NOASSERTION",
      "description": "Tools for working with tasks.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-task",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-futuresutil",
      "copyrightText": "NOASSERTION",
      "description": "Common utilities and extension traits for the futures-rs library.\n",
      "downloadLocation": "https://github.com/rust-lang/futures-rs",
      "filesAnalyzed": false,
      "homepage": "https://rust-lang.github.io/futures-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "futures-util",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.3.31"
    },
    {
      "SPDXID": "SPDXRef-fxhash",
      "copyrightText": "NOASSERTION",
      "description": "A fast, non-secure, hashing algorithm derived from an internal hasher used in FireFox and Rustc.",
      "downloadLocation": "https://github.com/cbreeden/fxhash",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0/MIT",
      "name": "fxhash",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.2.1"
    },
    {
      "SPDXID": "SPDXRef-genericarray",
      "copyrightText": "NOASSERTION",
      "description": "Generic types implementing functionality of arrays",
      "downloadLocation": "https://github.com/fizyk20/generic-array.git",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "generic-array",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.14.7"
    },
    {
      "SPDXID": "SPDXRef-getrandom",
      "copyrightText": "NOASSERTION",
      "description": "A small cross-platform library for retrieving random data from system source",
      "downloadLocation": "https://github.com/rust-random/getrandom",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "getrandom",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.1.16"
    },
    {
      "SPDXID": "SPDXRef-getrandom",
      "copyrightText": "NOASSERTION",
      "description": "A small cross-platform library for retrieving random data from system source",
      "downloadLocation": "https://github.com/rust-random/getrandom",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "getrandom",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.2.16"
    },
    {
      "SPDXID": "SPDXRef-getrandom",
      "copyrightText": "NOASSERTION",
      "description": "A small cross-platform library for retrieving random data from system source",
      "downloadLocation": "https://github.com/rust-random/getrandom",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "getrandom",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.3.3"
    },
    {
      "SPDXID": "SPDXRef-ghash",
      "copyrightText": "NOASSERTION",
      "description": "Universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC),\nas in the AES-GCM authenticated encryption cipher.\n",
      "downloadLocation": "https://github.com/RustCrypto/universal-hashes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "ghash",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.4.4"
    },
    {
      "SPDXID": "SPDXRef-gimli",
      "copyrightText": "NOASSERTION",
      "description": "A library for reading and writing the DWARF debugging format.",
      "downloadLocation": "https://github.com/gimli-rs/gimli",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "gimli",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.31.1"
    },
    {
      "SPDXID": "SPDXRef-half",
      "copyrightText": "NOASSERTION",
      "description": "Half-precision floating point f16 and bf16 types for Rust implementing the IEEE 754-2008 standard binary16 and bfloat16 types.",
      "downloadLocation": "https://github.com/VoidStarKat/half-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "half",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "2.6.0"
    },
    {
      "SPDXID": "SPDXRef-hashbrown",
      "copyrightText": "NOASSERTION",
      "description": "A Rust port of Google's SwissTable hash map",
      "downloadLocation": "https://github.com/rust-lang/hashbrown",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "hashbrown",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.12.3"
    },
    {
      "SPDXID": "SPDXRef-hashbrown",
      "copyrightText": "NOASSERTION",
      "description": "A Rust port of Google's SwissTable hash map",
      "downloadLocation": "https://github.com/rust-lang/hashbrown",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "hashbrown",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.14.5"
    },
    {
      "SPDXID": "SPDXRef-hashbrown",
      "copyrightText": "NOASSERTION",
      "description": "A Rust port of Google's SwissTable hash map",
      "downloadLocation": "https://github.com/rust-lang/hashbrown",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "hashbrown",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.15.5"
    },
    {
      "SPDXID": "SPDXRef-heck",
      "copyrightText": "NOASSERTION",
      "description": "heck is a case conversion library.",
      "downloadLocation": "https://github.com/withoutboats/heck",
      "filesAnalyzed": false,
      "homepage": "https://github.com/withoutboats/heck",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "heck",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.4.1"
    },
    {
      "SPDXID": "SPDXRef-heck",
      "copyrightText": "NOASSERTION",
      "description": "heck is a case conversion library.",
      "downloadLocation": "https://github.com/withoutboats/heck",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "heck",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.5.0"
    },
    {
      "SPDXID": "SPDXRef-hermitabi",
      "copyrightText": "NOASSERTION",
      "description": "hermit-abi is small interface to call functions from the unikernel RustyHermit.\nIt is used to build the target `x86_64-unknown-hermit`.\n",
      "downloadLocation": "https://github.com/hermitcore/libhermit-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "hermit-abi",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.1.19"
    },
    {
      "SPDXID": "SPDXRef-hex",
      "copyrightText": "NOASSERTION",
      "description": "Encoding and decoding data into/from hexadecimal representation.",
      "downloadLocation": "https://github.com/KokaKiwi/rust-hex",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "hex",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "0.4.3"
    },
    {
      "SPDXID": "SPDXRef-hkdf",
      "copyrightText": "NOASSERTION",
      "description": "HMAC-based Extract-and-Expand Key Derivation Function (HKDF)",
      "downloadLocation": "https://github.com/RustCrypto/KDFs/",
      "filesAnalyzed": false,
      "homepage": "https://github.com/RustCrypto/KDFs/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "hkdf",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.12.3"
    },
    {
      "SPDXID": "SPDXRef-hmac",
      "copyrightText": "NOASSERTION",
      "description": "Generic implementation of Hash-based Message Authentication Code (HMAC)",
      "downloadLocation": "https://github.com/RustCrypto/MACs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "hmac",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.12.1"
    },
    {
      "SPDXID": "SPDXRef-hmacsha256",
      "copyrightText": "NOASSERTION",
      "description": "A small, self-contained SHA256, HMAC-SHA256, and HKDF-SHA256 implementation",
      "downloadLocation": "https://github.com/jedisct1/rust-hmac-sha256",
      "filesAnalyzed": false,
      "homepage": "https://github.com/jedisct1/rust-hmac-sha256",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "ISC",
      "name": "hmac-sha256",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.1.12"
    },
    {
      "SPDXID": "SPDXRef-ianatimezone",
      "copyrightText": "NOASSERTION",
      "description": "get the IANA time zone for the current system",
      "downloadLocation": "https://github.com/strawlab/iana-time-zone",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "iana-time-zone",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.1.63"
    },
    {
      "SPDXID": "SPDXRef-ianatimezonehaiku",
      "copyrightText": "NOASSERTION",
      "description": "iana-time-zone support crate for Haiku OS",
      "downloadLocation": "https://github.com/strawlab/iana-time-zone",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "iana-time-zone-haiku",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "19"
      },
      "version": "0.1.2"
    },
    {
      "SPDXID": "SPDXRef-indexmap",
      "copyrightText": "NOASSERTION",
      "description": "A hash table with consistent order and fast iteration.",
      "downloadLocation": "https://github.com/bluss/indexmap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "indexmap",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "1.9.3"
    },
    {
      "SPDXID": "SPDXRef-indexmap",
      "copyrightText": "NOASSERTION",
      "description": "A hash table with consistent order and fast iteration.",
      "downloadLocation": "https://github.com/indexmap-rs/indexmap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "indexmap",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "2.10.0"
    },
    {
      "SPDXID": "SPDXRef-inout",
      "copyrightText": "NOASSERTION",
      "description": "Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.",
      "downloadLocation": "https://github.com/RustCrypto/utils",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "inout",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.1.4"
    },
    {
      "SPDXID": "SPDXRef-instant",
      "copyrightText": "NOASSERTION",
      "description": "Unmaintained, consider using web-time instead - A partial replacement for std::time::Instant that works on WASM to.",
      "downloadLocation": "https://github.com/sebcrozet/instant",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-3-Clause",
      "name": "instant",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.1.13"
    },
    {
      "SPDXID": "SPDXRef-iouring",
      "copyrightText": "NOASSERTION",
      "description": "The low-level `io_uring` userspace interface for Rust",
      "downloadLocation": "https://github.com/tokio-rs/io-uring",
      "filesAnalyzed": false,
      "homepage": "https://github.com/tokio-rs/io-uring",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "io-uring",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.7.9"
    },
    {
      "SPDXID": "SPDXRef-is_terminal_polyfill",
      "copyrightText": "NOASSERTION",
      "description": "Polyfill for `is_terminal` stdlib feature for use with older MSRVs",
      "downloadLocation": "https://github.com/polyfill-rs/is_terminal_polyfill",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "is_terminal_polyfill",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1a"
      },
      "version": "1.70.1"
    },
    {
      "SPDXID": "SPDXRef-itertools",
      "copyrightText": "NOASSERTION",
      "description": "Extra iterator adaptors, iterator methods, free functions, and macros.",
      "downloadLocation": "https://github.com/rust-itertools/itertools",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "itertools",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.10.5"
    },
    {
      "SPDXID": "SPDXRef-itertools",
      "copyrightText": "NOASSERTION",
      "description": "Extra iterator adaptors, iterator methods, free functions, and macros.",
      "downloadLocation": "https://github.com/rust-itertools/itertools",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "itertools",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.12.1"
    },
    {
      "SPDXID": "SPDXRef-itoa",
      "copyrightText": "NOASSERTION",
      "description": "Fast integer primitive to string conversion",
      "downloadLocation": "https://github.com/dtolnay/itoa",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "itoa",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "1.0.15"
    },
    {
      "SPDXID": "SPDXRef-jssys",
      "copyrightText": "NOASSERTION",
      "description": "Bindings for all JS global objects and functions in all JS environments like\nNode.js and browsers, built on `#[wasm_bindgen]` using the `wasm-bindgen` crate.\n",
      "downloadLocation": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/js-sys",
      "filesAnalyzed": false,
      "homepage": "https://rustwasm.github.io/wasm-bindgen/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "js-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.3.77"
    },
    {
      "SPDXID": "SPDXRef-lazy_static",
      "copyrightText": "NOASSERTION",
      "description": "A macro for declaring lazily evaluated statics in Rust.",
      "downloadLocation": "https://github.com/rust-lang-nursery/lazy-static.rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "lazy_static",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "1.5.0"
    },
    {
      "SPDXID": "SPDXRef-libc",
      "copyrightText": "NOASSERTION",
      "description": "Raw FFI bindings to platform libraries like libc.",
      "downloadLocation": "https://github.com/rust-lang/libc",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "libc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.2.175"
    },
    {
      "SPDXID": "SPDXRef-libm",
      "copyrightText": "NOASSERTION",
      "description": "libm in pure Rust",
      "downloadLocation": "https://github.com/rust-lang-nursery/libm",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "libm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.1.4"
    },
    {
      "SPDXID": "SPDXRef-libm",
      "copyrightText": "NOASSERTION",
      "description": "libm in pure Rust",
      "downloadLocation": "https://github.com/rust-lang/compiler-builtins",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "libm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.2.15"
    },
    {
      "SPDXID": "SPDXRef-linuxrawsys",
      "copyrightText": "NOASSERTION",
      "description": "Generated bindings for Linux's userspace API",
      "downloadLocation": "https://github.com/sunfishcode/linux-raw-sys",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",
      "name": "linux-raw-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.9.4"
    },
    {
      "SPDXID": "SPDXRef-lock_api",
      "copyrightText": "NOASSERTION",
      "description": "Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.",
      "downloadLocation": "https://github.com/Amanieu/parking_lot",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "lock_api",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.4.13"
    },
    {
      "SPDXID": "SPDXRef-log",
      "copyrightText": "NOASSERTION",
      "description": "A lightweight logging facade for Rust\n",
      "downloadLocation": "https://github.com/rust-lang/log",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "log",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.4.27"
    },
    {
      "SPDXID": "SPDXRef-matchers",
      "copyrightText": "NOASSERTION",
      "description": "Regex matching on character and byte streams.\n",
      "downloadLocation": "https://github.com/hawkw/matchers",
      "filesAnalyzed": false,
      "homepage": "https://github.com/hawkw/matchers",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "matchers",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-matrixmultiply",
      "copyrightText": "NOASSERTION",
      "description": "General matrix multiplication for f32 and f64 matrices. Operates on matrices with general layout (they can use arbitrary row and column stride). Detects and uses AVX or SSE2 on x86 platforms transparently for higher performance. Uses a microkernel strategy, so that the implementation is easy to parallelize and optimize.\n\nSupports multithreading.",
      "downloadLocation": "https://github.com/bluss/matrixmultiply/",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "matrixmultiply",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.3.10"
    },
    {
      "SPDXID": "SPDXRef-md5",
      "copyrightText": "NOASSERTION",
      "description": "The package provides the MD5 hash function.",
      "downloadLocation": "https://github.com/stainless-steel/md5",
      "filesAnalyzed": false,
      "homepage": "https://github.com/stainless-steel/md5",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0/MIT",
      "name": "md5",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "0.7.0"
    },
    {
      "SPDXID": "SPDXRef-memchr",
      "copyrightText": "NOASSERTION",
      "description": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for\n1, 2 or 3 byte search and single substring search.\n",
      "downloadLocation": "https://github.com/BurntSushi/memchr",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/memchr",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense OR MIT",
      "name": "memchr",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "2.7.5"
    },
    {
      "SPDXID": "SPDXRef-miniz_oxide",
      "copyrightText": "NOASSERTION",
      "description": "DEFLATE compression and decompression library rewritten in Rust based on miniz",
      "downloadLocation": "https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide",
      "filesAnalyzed": false,
      "homepage": "https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Zlib OR Apache-2.0",
      "name": "miniz_oxide",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.8.9"
    },
    {
      "SPDXID": "SPDXRef-mio",
      "copyrightText": "NOASSERTION",
      "description": "Lightweight non-blocking I/O.",
      "downloadLocation": "https://github.com/tokio-rs/mio",
      "filesAnalyzed": false,
      "homepage": "https://github.com/tokio-rs/mio",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "mio",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "1.0.4"
    },
    {
      "SPDXID": "SPDXRef-multimap",
      "copyrightText": "NOASSERTION",
      "description": "A multimap implementation.",
      "downloadLocation": "https://github.com/havarnov/multimap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "multimap",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.10.1"
    },
    {
      "SPDXID": "SPDXRef-nalgebra",
      "copyrightText": "NOASSERTION",
      "description": "General-purpose linear algebra library with transformations and statically-sized or dynamically-sized matrices.",
      "downloadLocation": "https://github.com/dimforge/nalgebra",
      "filesAnalyzed": false,
      "homepage": "https://nalgebra.org",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-3-Clause",
      "name": "nalgebra",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.32.6"
    },
    {
      "SPDXID": "SPDXRef-nalgebramacros",
      "copyrightText": "NOASSERTION",
      "description": "Procedural macros for nalgebra",
      "downloadLocation": "https://github.com/dimforge/nalgebra",
      "filesAnalyzed": false,
      "homepage": "https://nalgebra.org",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "nalgebra-macros",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.2.2"
    },
    {
      "SPDXID": "SPDXRef-navigator",
      "copyrightText": "NOASSERTION",
      "description": "Semiring-based multi-criteria path selection for AIVillage routing",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "navigator",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-ndarray",
      "copyrightText": "NOASSERTION",
      "description": "An n-dimensional array for general elements and for numerics. Lightweight array views and slicing; views support chunking and splitting.",
      "downloadLocation": "https://github.com/rust-ndarray/ndarray",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "ndarray",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.15.6"
    },
    {
      "SPDXID": "SPDXRef-nuansiterm",
      "copyrightText": "NOASSERTION",
      "description": "Library for ANSI terminal colors and styles (bold, underline)",
      "downloadLocation": "https://github.com/nushell/nu-ansi-term",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "nu-ansi-term",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.46.0"
    },
    {
      "SPDXID": "SPDXRef-numcomplex",
      "copyrightText": "NOASSERTION",
      "description": "Complex numbers implementation for Rust",
      "downloadLocation": "https://github.com/rust-num/num-complex",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-num/num-complex",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "num-complex",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.4.6"
    },
    {
      "SPDXID": "SPDXRef-numinteger",
      "copyrightText": "NOASSERTION",
      "description": "Integer traits and functions",
      "downloadLocation": "https://github.com/rust-num/num-integer",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-num/num-integer",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "num-integer",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.1.46"
    },
    {
      "SPDXID": "SPDXRef-numrational",
      "copyrightText": "NOASSERTION",
      "description": "Rational numbers implementation for Rust",
      "downloadLocation": "https://github.com/rust-num/num-rational",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-num/num-rational",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "num-rational",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.4.2"
    },
    {
      "SPDXID": "SPDXRef-numtraits",
      "copyrightText": "NOASSERTION",
      "description": "Numeric traits for generic mathematics",
      "downloadLocation": "https://github.com/rust-num/num-traits",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-num/num-traits",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "num-traits",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.2.19"
    },
    {
      "SPDXID": "SPDXRef-object",
      "copyrightText": "NOASSERTION",
      "description": "A unified interface for reading and writing object file formats.",
      "downloadLocation": "https://github.com/gimli-rs/object",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "object",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.36.7"
    },
    {
      "SPDXID": "SPDXRef-once_cell",
      "copyrightText": "NOASSERTION",
      "description": "Single assignment cells and lazy values.",
      "downloadLocation": "https://github.com/matklad/once_cell",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "once_cell",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "1.21.3"
    },
    {
      "SPDXID": "SPDXRef-once_cell_polyfill",
      "copyrightText": "NOASSERTION",
      "description": "Polyfill for `OnceCell` stdlib feature for use with older MSRVs",
      "downloadLocation": "https://github.com/polyfill-rs/once_cell_polyfill",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "once_cell_polyfill",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "18"
      },
      "version": "1.70.1"
    },
    {
      "SPDXID": "SPDXRef-oorandom",
      "copyrightText": "NOASSERTION",
      "description": "A tiny, robust PRNG implementation.",
      "downloadLocation": "https://hg.sr.ht/~icefox/oorandom",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "oorandom",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "11.1.5"
    },
    {
      "SPDXID": "SPDXRef-opaquedebug",
      "copyrightText": "NOASSERTION",
      "description": "Macro for opaque Debug trait implementation",
      "downloadLocation": "https://github.com/RustCrypto/utils",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "opaque-debug",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.3.1"
    },
    {
      "SPDXID": "SPDXRef-openssl",
      "copyrightText": "NOASSERTION",
      "description": "OpenSSL bindings",
      "downloadLocation": "https://github.com/sfackler/rust-openssl",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "openssl",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.10.73"
    },
    {
      "SPDXID": "SPDXRef-opensslmacros",
      "copyrightText": "NOASSERTION",
      "description": "Internal macros used by the openssl crate.",
      "downloadLocation": "NOASSERTION",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "openssl-macros",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.1.1"
    },
    {
      "SPDXID": "SPDXRef-opensslsys",
      "copyrightText": "NOASSERTION",
      "description": "FFI bindings to OpenSSL",
      "downloadLocation": "https://github.com/sfackler/rust-openssl",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "openssl-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.9.109"
    },
    {
      "SPDXID": "SPDXRef-orderedfloat",
      "copyrightText": "NOASSERTION",
      "description": "Wrappers for total ordering on floats",
      "downloadLocation": "https://github.com/reem/rust-ordered-float",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "ordered-float",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "4.6.0"
    },
    {
      "SPDXID": "SPDXRef-os_str_bytes",
      "copyrightText": "NOASSERTION",
      "description": "Convert between byte sequences and platform-native strings\n",
      "downloadLocation": "https://github.com/dylni/os_str_bytes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "os_str_bytes",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "6.6.1"
    },
    {
      "SPDXID": "SPDXRef-overload",
      "copyrightText": "NOASSERTION",
      "description": "Provides a macro to simplify operator overloading.",
      "downloadLocation": "https://github.com/danaugrs/overload",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "overload",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.1.1"
    },
    {
      "SPDXID": "SPDXRef-packed_simd_2",
      "copyrightText": "NOASSERTION",
      "description": "Portable Packed SIMD vectors",
      "downloadLocation": "https://github.com/rust-lang/packed_simd",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/packed_simd",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "packed_simd_2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.3.8"
    },
    {
      "SPDXID": "SPDXRef-parking_lot",
      "copyrightText": "NOASSERTION",
      "description": "More compact and efficient implementations of the standard synchronization primitives.",
      "downloadLocation": "https://github.com/Amanieu/parking_lot",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0/MIT",
      "name": "parking_lot",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.11.2"
    },
    {
      "SPDXID": "SPDXRef-parking_lot",
      "copyrightText": "NOASSERTION",
      "description": "More compact and efficient implementations of the standard synchronization primitives.",
      "downloadLocation": "https://github.com/Amanieu/parking_lot",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "parking_lot",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.12.4"
    },
    {
      "SPDXID": "SPDXRef-parking_lot_core",
      "copyrightText": "NOASSERTION",
      "description": "An advanced API for creating custom synchronization primitives.",
      "downloadLocation": "https://github.com/Amanieu/parking_lot",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0/MIT",
      "name": "parking_lot_core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.8.6"
    },
    {
      "SPDXID": "SPDXRef-parking_lot_core",
      "copyrightText": "NOASSERTION",
      "description": "An advanced API for creating custom synchronization primitives.",
      "downloadLocation": "https://github.com/Amanieu/parking_lot",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "parking_lot_core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "16"
      },
      "version": "0.9.11"
    },
    {
      "SPDXID": "SPDXRef-paste",
      "copyrightText": "NOASSERTION",
      "description": "Macros for all your token pasting needs",
      "downloadLocation": "https://github.com/dtolnay/paste",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "paste",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.0.15"
    },
    {
      "SPDXID": "SPDXRef-petgraph",
      "copyrightText": "NOASSERTION",
      "description": "Graph data structure library. Provides graph types and graph algorithms.",
      "downloadLocation": "https://github.com/petgraph/petgraph",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "petgraph",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.6.5"
    },
    {
      "SPDXID": "SPDXRef-pinprojectlite",
      "copyrightText": "NOASSERTION",
      "description": "A lightweight version of pin-project written with declarative macros.\n",
      "downloadLocation": "https://github.com/taiki-e/pin-project-lite",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "pin-project-lite",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "16"
      },
      "version": "0.2.16"
    },
    {
      "SPDXID": "SPDXRef-pinutils",
      "copyrightText": "NOASSERTION",
      "description": "Utilities for pinning\n",
      "downloadLocation": "https://github.com/rust-lang-nursery/pin-utils",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "pin-utils",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-pkgconfig",
      "copyrightText": "NOASSERTION",
      "description": "A library to run the pkg-config system tool at build time in order to be used in\nCargo build scripts.\n",
      "downloadLocation": "https://github.com/rust-lang/pkg-config-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "pkg-config",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.3.32"
    },
    {
      "SPDXID": "SPDXRef-platforms",
      "copyrightText": "NOASSERTION",
      "description": "Rust platform registry with information about valid Rust platforms (target\ntriple, target_arch, target_os) sourced from the Rust compiler.\n",
      "downloadLocation": "https://github.com/rustsec/rustsec",
      "filesAnalyzed": false,
      "homepage": "https://rustsec.org",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "platforms",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "3.6.0"
    },
    {
      "SPDXID": "SPDXRef-plotters",
      "copyrightText": "NOASSERTION",
      "description": "A Rust drawing library focus on data plotting for both WASM and native applications",
      "downloadLocation": "https://github.com/plotters-rs/plotters",
      "filesAnalyzed": false,
      "homepage": "https://plotters-rs.github.io/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "plotters",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.3.7"
    },
    {
      "SPDXID": "SPDXRef-plottersbackend",
      "copyrightText": "NOASSERTION",
      "description": "Plotters Backend API",
      "downloadLocation": "https://github.com/plotters-rs/plotters",
      "filesAnalyzed": false,
      "homepage": "https://plotters-rs.github.io",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "plotters-backend",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.3.7"
    },
    {
      "SPDXID": "SPDXRef-plotterssvg",
      "copyrightText": "NOASSERTION",
      "description": "Plotters SVG backend",
      "downloadLocation": "https://github.com/plotters-rs/plotters.git",
      "filesAnalyzed": false,
      "homepage": "https://plotters-rs.github.io",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "plotters-svg",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.3.7"
    },
    {
      "SPDXID": "SPDXRef-poly1305",
      "copyrightText": "NOASSERTION",
      "description": "The Poly1305 universal hash function and message authentication code",
      "downloadLocation": "https://github.com/RustCrypto/universal-hashes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "poly1305",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.7.2"
    },
    {
      "SPDXID": "SPDXRef-poly1305",
      "copyrightText": "NOASSERTION",
      "description": "The Poly1305 universal hash function and message authentication code",
      "downloadLocation": "https://github.com/RustCrypto/universal-hashes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "poly1305",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.8.0"
    },
    {
      "SPDXID": "SPDXRef-polyval",
      "copyrightText": "NOASSERTION",
      "description": "POLYVAL is a GHASH-like universal hash over GF(2^128) useful for constructing\na Message Authentication Code (MAC)\n",
      "downloadLocation": "https://github.com/RustCrypto/universal-hashes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "polyval",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.5.3"
    },
    {
      "SPDXID": "SPDXRef-ppvlite86",
      "copyrightText": "NOASSERTION",
      "description": "Cross-platform cryptography-oriented low-level SIMD library.",
      "downloadLocation": "https://github.com/cryptocorrosion/cryptocorrosion",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "ppv-lite86",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.2.21"
    },
    {
      "SPDXID": "SPDXRef-prettyplease",
      "copyrightText": "NOASSERTION",
      "description": "A minimal `syn` syntax tree pretty-printer",
      "downloadLocation": "https://github.com/dtolnay/prettyplease",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "prettyplease",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.2.36"
    },
    {
      "SPDXID": "SPDXRef-procmacro2",
      "copyrightText": "NOASSERTION",
      "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.",
      "downloadLocation": "https://github.com/dtolnay/proc-macro2",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "proc-macro2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.0.97"
    },
    {
      "SPDXID": "SPDXRef-proptest",
      "copyrightText": "NOASSERTION",
      "description": "Hypothesis-like property-based testing and shrinking.\n",
      "downloadLocation": "https://github.com/proptest-rs/proptest",
      "filesAnalyzed": false,
      "homepage": "https://proptest-rs.github.io/proptest/proptest/index.html",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "proptest",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "1.7.0"
    },
    {
      "SPDXID": "SPDXRef-prost",
      "copyrightText": "NOASSERTION",
      "description": "A Protocol Buffers implementation for the Rust Language.",
      "downloadLocation": "https://github.com/tokio-rs/prost",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "prost",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.12.6"
    },
    {
      "SPDXID": "SPDXRef-prostbuild",
      "copyrightText": "NOASSERTION",
      "description": "Generate Prost annotated Rust types from Protocol Buffers files.",
      "downloadLocation": "https://github.com/tokio-rs/prost",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "prost-build",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.12.6"
    },
    {
      "SPDXID": "SPDXRef-prostderive",
      "copyrightText": "NOASSERTION",
      "description": "Generate encoding and decoding implementations for Prost annotated types.",
      "downloadLocation": "https://github.com/tokio-rs/prost",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "prost-derive",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.12.6"
    },
    {
      "SPDXID": "SPDXRef-prosttypes",
      "copyrightText": "NOASSERTION",
      "description": "Prost definitions of Protocol Buffers well known types.",
      "downloadLocation": "https://github.com/tokio-rs/prost",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "prost-types",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.12.6"
    },
    {
      "SPDXID": "SPDXRef-protobuf",
      "copyrightText": "NOASSERTION",
      "description": "Rust implementation of Google protocol buffers\n",
      "downloadLocation": "https://github.com/stepancheg/rust-protobuf/",
      "filesAnalyzed": false,
      "homepage": "https://github.com/stepancheg/rust-protobuf/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "protobuf",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "3.7.2"
    },
    {
      "SPDXID": "SPDXRef-protobufsupport",
      "copyrightText": "NOASSERTION",
      "description": "Code supporting protobuf implementation. None of code in this crate is public API.\n",
      "downloadLocation": "https://github.com/stepancheg/rust-protobuf/",
      "filesAnalyzed": false,
      "homepage": "https://github.com/stepancheg/rust-protobuf/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "protobuf-support",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "3.7.2"
    },
    {
      "SPDXID": "SPDXRef-quickerror",
      "copyrightText": "NOASSERTION",
      "description": "    A macro which makes error types pleasant to write.\n",
      "downloadLocation": "http://github.com/tailhook/quick-error",
      "filesAnalyzed": false,
      "homepage": "http://github.com/tailhook/quick-error",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "quick-error",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "1.2.3"
    },
    {
      "SPDXID": "SPDXRef-quote",
      "copyrightText": "NOASSERTION",
      "description": "Quasi-quoting macro quote!(...)",
      "downloadLocation": "https://github.com/dtolnay/quote",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "quote",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.0.40"
    },
    {
      "SPDXID": "SPDXRef-refi",
      "copyrightText": "NOASSERTION",
      "description": "UEFI Reference Specification Protocol Constants and Definitions",
      "downloadLocation": "https://github.com/r-efi/r-efi",
      "filesAnalyzed": false,
      "homepage": "https://github.com/r-efi/r-efi/wiki",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0 OR LGPL-2.1-or-later",
      "name": "r-efi",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "5.3.0"
    },
    {
      "SPDXID": "SPDXRef-rand",
      "copyrightText": "NOASSERTION",
      "description": "Random number generators and other randomness functionality.\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://crates.io/crates/rand",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.7.3"
    },
    {
      "SPDXID": "SPDXRef-rand",
      "copyrightText": "NOASSERTION",
      "description": "Random number generators and other randomness functionality.\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.8.5"
    },
    {
      "SPDXID": "SPDXRef-rand",
      "copyrightText": "NOASSERTION",
      "description": "Random number generators and other randomness functionality.\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.9.2"
    },
    {
      "SPDXID": "SPDXRef-rand_chacha",
      "copyrightText": "NOASSERTION",
      "description": "ChaCha random number generator\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://crates.io/crates/rand_chacha",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_chacha",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.2.2"
    },
    {
      "SPDXID": "SPDXRef-rand_chacha",
      "copyrightText": "NOASSERTION",
      "description": "ChaCha random number generator\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_chacha",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.3.1"
    },
    {
      "SPDXID": "SPDXRef-rand_chacha",
      "copyrightText": "NOASSERTION",
      "description": "ChaCha random number generator\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_chacha",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.9.0"
    },
    {
      "SPDXID": "SPDXRef-rand_core",
      "copyrightText": "NOASSERTION",
      "description": "Core random number generator traits and tools for implementation.\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://crates.io/crates/rand_core",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.5.1"
    },
    {
      "SPDXID": "SPDXRef-rand_core",
      "copyrightText": "NOASSERTION",
      "description": "Core random number generator traits and tools for implementation.\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.6.4"
    },
    {
      "SPDXID": "SPDXRef-rand_core",
      "copyrightText": "NOASSERTION",
      "description": "Core random number generator traits and tools for implementation.\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.9.3"
    },
    {
      "SPDXID": "SPDXRef-rand_distr",
      "copyrightText": "NOASSERTION",
      "description": "Sampling from random number distributions\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_distr",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.4.3"
    },
    {
      "SPDXID": "SPDXRef-rand_hc",
      "copyrightText": "NOASSERTION",
      "description": "HC128 random number generator\n",
      "downloadLocation": "https://github.com/rust-random/rand",
      "filesAnalyzed": false,
      "homepage": "https://crates.io/crates/rand_hc",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "rand_hc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.2.0"
    },
    {
      "SPDXID": "SPDXRef-rand_xorshift",
      "copyrightText": "NOASSERTION",
      "description": "Xorshift random number generator\n",
      "downloadLocation": "https://github.com/rust-random/rngs",
      "filesAnalyzed": false,
      "homepage": "https://rust-random.github.io/book",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rand_xorshift",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.4.0"
    },
    {
      "SPDXID": "SPDXRef-rawpointer",
      "copyrightText": "NOASSERTION",
      "description": "Extra methods for raw pointers and `NonNull<T>`.\n\nFor example `.post_inc()` and `.pre_dec()` (c.f. `ptr++` and `--ptr`),\n`offset` and `add` for `NonNull<T>`, and the function `ptrdistance`.\n",
      "downloadLocation": "https://github.com/bluss/rawpointer/",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "rawpointer",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.2.1"
    },
    {
      "SPDXID": "SPDXRef-rayon",
      "copyrightText": "NOASSERTION",
      "description": "Simple work-stealing parallelism for Rust",
      "downloadLocation": "https://github.com/rayon-rs/rayon",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rayon",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.11.0"
    },
    {
      "SPDXID": "SPDXRef-rayoncore",
      "copyrightText": "NOASSERTION",
      "description": "Core APIs for Rayon",
      "downloadLocation": "https://github.com/rayon-rs/rayon",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rayon-core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "1.13.0"
    },
    {
      "SPDXID": "SPDXRef-redox_syscall",
      "copyrightText": "NOASSERTION",
      "description": "A Rust library to access raw Redox system calls",
      "downloadLocation": "https://gitlab.redox-os.org/redox-os/syscall",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "redox_syscall",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.2.16"
    },
    {
      "SPDXID": "SPDXRef-redox_syscall",
      "copyrightText": "NOASSERTION",
      "description": "A Rust library to access raw Redox system calls",
      "downloadLocation": "https://gitlab.redox-os.org/redox-os/syscall",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "redox_syscall",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.5.17"
    },
    {
      "SPDXID": "SPDXRef-regex",
      "copyrightText": "NOASSERTION",
      "description": "An implementation of regular expressions for Rust. This implementation uses\nfinite automata and guarantees linear time matching on all inputs.\n",
      "downloadLocation": "https://github.com/rust-lang/regex",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/regex",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "regex",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.11.1"
    },
    {
      "SPDXID": "SPDXRef-regexautomata",
      "copyrightText": "NOASSERTION",
      "description": "Automata construction and matching using regular expressions.",
      "downloadLocation": "https://github.com/BurntSushi/regex-automata",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/regex-automata",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense/MIT",
      "name": "regex-automata",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.1.10"
    },
    {
      "SPDXID": "SPDXRef-regexautomata",
      "copyrightText": "NOASSERTION",
      "description": "Automata construction and matching using regular expressions.",
      "downloadLocation": "https://github.com/rust-lang/regex/tree/master/regex-automata",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "regex-automata",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.4.9"
    },
    {
      "SPDXID": "SPDXRef-regexsyntax",
      "copyrightText": "NOASSERTION",
      "description": "A regular expression parser.",
      "downloadLocation": "https://github.com/rust-lang/regex",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/regex",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "regex-syntax",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.6.29"
    },
    {
      "SPDXID": "SPDXRef-regexsyntax",
      "copyrightText": "NOASSERTION",
      "description": "A regular expression parser.",
      "downloadLocation": "https://github.com/rust-lang/regex/tree/master/regex-syntax",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "regex-syntax",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.8.5"
    },
    {
      "SPDXID": "SPDXRef-ring",
      "copyrightText": "NOASSERTION",
      "description": "An experiment.",
      "downloadLocation": "https://github.com/briansmith/ring",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 AND ISC",
      "name": "ring",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.17.14"
    },
    {
      "SPDXID": "SPDXRef-rustcdemangle",
      "copyrightText": "NOASSERTION",
      "description": "Rust compiler symbol demangling.\n",
      "downloadLocation": "https://github.com/rust-lang/rustc-demangle",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/rustc-demangle",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "rustc-demangle",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.1.26"
    },
    {
      "SPDXID": "SPDXRef-rustc_version",
      "copyrightText": "NOASSERTION",
      "description": "A library for querying the version of a installed rustc compiler",
      "downloadLocation": "https://github.com/djc/rustc-version-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rustc_version",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.4.1"
    },
    {
      "SPDXID": "SPDXRef-rustix",
      "copyrightText": "NOASSERTION",
      "description": "Safe Rust bindings to POSIX/Unix/Linux/Winsock-like syscalls",
      "downloadLocation": "https://github.com/bytecodealliance/rustix",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",
      "name": "rustix",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.0.8"
    },
    {
      "SPDXID": "SPDXRef-rustls",
      "copyrightText": "NOASSERTION",
      "description": "Rustls is a modern TLS library written in Rust.",
      "downloadLocation": "https://github.com/rustls/rustls",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rustls/rustls",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR ISC OR MIT",
      "name": "rustls",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.22.4"
    },
    {
      "SPDXID": "SPDXRef-rustlspkitypes",
      "copyrightText": "NOASSERTION",
      "description": "Shared types for the rustls PKI ecosystem",
      "downloadLocation": "https://github.com/rustls/pki-types",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rustls/pki-types",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rustls-pki-types",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "16"
      },
      "version": "1.12.0"
    },
    {
      "SPDXID": "SPDXRef-rustlswebpki",
      "copyrightText": "NOASSERTION",
      "description": "Web PKI X.509 Certificate Verification.",
      "downloadLocation": "https://github.com/rustls/webpki",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "ISC",
      "name": "rustls-webpki",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.102.8"
    },
    {
      "SPDXID": "SPDXRef-rustversion",
      "copyrightText": "NOASSERTION",
      "description": "Conditional compilation according to rustc compiler version",
      "downloadLocation": "https://github.com/dtolnay/rustversion",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "rustversion",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.0.22"
    },
    {
      "SPDXID": "SPDXRef-rustyfork",
      "copyrightText": "NOASSERTION",
      "description": "Cross-platform library for running Rust tests in sub-processes using a\nfork-like interface.\n",
      "downloadLocation": "https://github.com/altsysrq/rusty-fork",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "rusty-fork",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.3.0"
    },
    {
      "SPDXID": "SPDXRef-ryu",
      "copyrightText": "NOASSERTION",
      "description": "Fast floating point to string conversion",
      "downloadLocation": "https://github.com/dtolnay/ryu",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR BSL-1.0",
      "name": "ryu",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "1.0.20"
    },
    {
      "SPDXID": "SPDXRef-safe_arch",
      "copyrightText": "NOASSERTION",
      "description": "Crate that exposes `core::arch` safely via `#[cfg()]`.",
      "downloadLocation": "https://github.com/Lokathor/safe_arch",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Zlib OR Apache-2.0 OR MIT",
      "name": "safe_arch",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.7.4"
    },
    {
      "SPDXID": "SPDXRef-samefile",
      "copyrightText": "NOASSERTION",
      "description": "A simple crate for determining whether two file paths point to the same file.\n",
      "downloadLocation": "https://github.com/BurntSushi/same-file",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/same-file",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense/MIT",
      "name": "same-file",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "1.0.6"
    },
    {
      "SPDXID": "SPDXRef-scopeguard",
      "copyrightText": "NOASSERTION",
      "description": "A RAII scope guard that will run a given closure when it goes out of scope,\neven if the code between panics (assuming unwinding panic).\n\nDefines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as\nshorthands for guards with one of the implemented strategies.\n",
      "downloadLocation": "https://github.com/bluss/scopeguard",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "scopeguard",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "1.2.0"
    },
    {
      "SPDXID": "SPDXRef-semver",
      "copyrightText": "NOASSERTION",
      "description": "Parser and evaluator for Cargo's flavor of Semantic Versioning",
      "downloadLocation": "https://github.com/dtolnay/semver",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "semver",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.0.26"
    },
    {
      "SPDXID": "SPDXRef-serde",
      "copyrightText": "NOASSERTION",
      "description": "A generic serialization/deserialization framework",
      "downloadLocation": "https://github.com/serde-rs/serde",
      "filesAnalyzed": false,
      "homepage": "https://serde.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "serde",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.0.219"
    },
    {
      "SPDXID": "SPDXRef-serde_derive",
      "copyrightText": "NOASSERTION",
      "description": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",
      "downloadLocation": "https://github.com/serde-rs/serde",
      "filesAnalyzed": false,
      "homepage": "https://serde.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "serde_derive",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "1.0.219"
    },
    {
      "SPDXID": "SPDXRef-serde_json",
      "copyrightText": "NOASSERTION",
      "description": "A JSON serialization file format",
      "downloadLocation": "https://github.com/serde-rs/json",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "serde_json",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.0.142"
    },
    {
      "SPDXID": "SPDXRef-serde_spanned",
      "copyrightText": "NOASSERTION",
      "description": "Serde-compatible spanned Value",
      "downloadLocation": "https://github.com/toml-rs/toml",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "serde_spanned",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.6.9"
    },
    {
      "SPDXID": "SPDXRef-sha2",
      "copyrightText": "NOASSERTION",
      "description": "Pure Rust implementation of the SHA-2 hash function family\nincluding SHA-224, SHA-256, SHA-384, and SHA-512.\n",
      "downloadLocation": "https://github.com/RustCrypto/hashes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "sha2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.9.9"
    },
    {
      "SPDXID": "SPDXRef-sha2",
      "copyrightText": "NOASSERTION",
      "description": "Pure Rust implementation of the SHA-2 hash function family\nincluding SHA-224, SHA-256, SHA-384, and SHA-512.\n",
      "downloadLocation": "https://github.com/RustCrypto/hashes",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "sha2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.10.6"
    },
    {
      "SPDXID": "SPDXRef-shardedslab",
      "copyrightText": "NOASSERTION",
      "description": "A lock-free concurrent slab.\n",
      "downloadLocation": "https://github.com/hawkw/sharded-slab",
      "filesAnalyzed": false,
      "homepage": "https://github.com/hawkw/sharded-slab",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "sharded-slab",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.1.7"
    },
    {
      "SPDXID": "SPDXRef-shlex",
      "copyrightText": "NOASSERTION",
      "description": "Split a string into shell words, like Python's shlex.",
      "downloadLocation": "https://github.com/comex/rust-shlex",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "shlex",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "1.3.0"
    },
    {
      "SPDXID": "SPDXRef-signalhookregistry",
      "copyrightText": "NOASSERTION",
      "description": "Backend crate for signal-hook",
      "downloadLocation": "https://github.com/vorner/signal-hook",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0/MIT",
      "name": "signal-hook-registry",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "19"
      },
      "version": "1.4.6"
    },
    {
      "SPDXID": "SPDXRef-signature",
      "copyrightText": "NOASSERTION",
      "description": "Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)",
      "downloadLocation": "https://github.com/RustCrypto/traits/tree/master/signature",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "signature",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "1.6.4"
    },
    {
      "SPDXID": "SPDXRef-simba",
      "copyrightText": "NOASSERTION",
      "description": "SIMD algebra for Rust",
      "downloadLocation": "https://github.com/dimforge/simba",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0",
      "name": "simba",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.8.1"
    },
    {
      "SPDXID": "SPDXRef-slab",
      "copyrightText": "NOASSERTION",
      "description": "Pre-allocated storage for a uniform data type",
      "downloadLocation": "https://github.com/tokio-rs/slab",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "slab",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.4.11"
    },
    {
      "SPDXID": "SPDXRef-sled",
      "copyrightText": "NOASSERTION",
      "description": "Lightweight high-performance pure-rust transactional embedded database.",
      "downloadLocation": "https://github.com/spacejam/sled",
      "filesAnalyzed": false,
      "homepage": "https://github.com/spacejam/sled",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "sled",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.34.7"
    },
    {
      "SPDXID": "SPDXRef-smallvec",
      "copyrightText": "NOASSERTION",
      "description": "'Small vector' optimization: store up to a small number of items on the stack",
      "downloadLocation": "https://github.com/servo/rust-smallvec",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "smallvec",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "1.15.1"
    },
    {
      "SPDXID": "SPDXRef-snow",
      "copyrightText": "NOASSERTION",
      "description": "A pure-rust implementation of the Noise Protocol Framework",
      "downloadLocation": "https://github.com/mcginty/snow",
      "filesAnalyzed": false,
      "homepage": "https://github.com/mcginty/snow",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "snow",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "9"
      },
      "version": "0.9.2"
    },
    {
      "SPDXID": "SPDXRef-socket2",
      "copyrightText": "NOASSERTION",
      "description": "Utilities for handling networking sockets with a maximal amount of configuration\npossible intended.\n",
      "downloadLocation": "https://github.com/rust-lang/socket2",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rust-lang/socket2",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "socket2",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.6.0"
    },
    {
      "SPDXID": "SPDXRef-strsim",
      "copyrightText": "NOASSERTION",
      "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein,\nOSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice.\n",
      "downloadLocation": "https://github.com/dguo/strsim-rs",
      "filesAnalyzed": false,
      "homepage": "https://github.com/dguo/strsim-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "strsim",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.10.0"
    },
    {
      "SPDXID": "SPDXRef-strsim",
      "copyrightText": "NOASSERTION",
      "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein,\nOSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice.\n",
      "downloadLocation": "https://github.com/rapidfuzz/strsim-rs",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rapidfuzz/strsim-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "strsim",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.11.1"
    },
    {
      "SPDXID": "SPDXRef-subtle",
      "copyrightText": "NOASSERTION",
      "description": "Pure-Rust traits and utilities for constant-time cryptographic implementations.",
      "downloadLocation": "https://github.com/dalek-cryptography/subtle",
      "filesAnalyzed": false,
      "homepage": "https://dalek.rs/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-3-Clause",
      "name": "subtle",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "2.6.1"
    },
    {
      "SPDXID": "SPDXRef-syn",
      "copyrightText": "NOASSERTION",
      "description": "Parser for Rust source code",
      "downloadLocation": "https://github.com/dtolnay/syn",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "syn",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "1.0.109"
    },
    {
      "SPDXID": "SPDXRef-syn",
      "copyrightText": "NOASSERTION",
      "description": "Parser for Rust source code",
      "downloadLocation": "https://github.com/dtolnay/syn",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "syn",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "2.0.106"
    },
    {
      "SPDXID": "SPDXRef-tempfile",
      "copyrightText": "NOASSERTION",
      "description": "A library for managing temporary files and directories.",
      "downloadLocation": "https://github.com/Stebalien/tempfile",
      "filesAnalyzed": false,
      "homepage": "https://stebalien.com/projects/tempfile-rs/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "tempfile",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "3.20.0"
    },
    {
      "SPDXID": "SPDXRef-termcolor",
      "copyrightText": "NOASSERTION",
      "description": "A simple cross platform library for writing colored text to a terminal.\n",
      "downloadLocation": "https://github.com/BurntSushi/termcolor",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/termcolor",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense OR MIT",
      "name": "termcolor",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "1.4.1"
    },
    {
      "SPDXID": "SPDXRef-textwrap",
      "copyrightText": "NOASSERTION",
      "description": "Library for word wrapping, indenting, and dedenting strings. Has optional support for Unicode and emojis as well as machine hyphenation.",
      "downloadLocation": "https://github.com/mgeisler/textwrap",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "textwrap",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.16.2"
    },
    {
      "SPDXID": "SPDXRef-thiserror",
      "copyrightText": "NOASSERTION",
      "description": "derive(Error)",
      "downloadLocation": "https://github.com/dtolnay/thiserror",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "thiserror",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "1.0.69"
    },
    {
      "SPDXID": "SPDXRef-thiserror",
      "copyrightText": "NOASSERTION",
      "description": "derive(Error)",
      "downloadLocation": "https://github.com/dtolnay/thiserror",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "thiserror",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "2.0.14"
    },
    {
      "SPDXID": "SPDXRef-thiserrorimpl",
      "copyrightText": "NOASSERTION",
      "description": "Implementation detail of the `thiserror` crate",
      "downloadLocation": "https://github.com/dtolnay/thiserror",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "thiserror-impl",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "1.0.69"
    },
    {
      "SPDXID": "SPDXRef-thiserrorimpl",
      "copyrightText": "NOASSERTION",
      "description": "Implementation detail of the `thiserror` crate",
      "downloadLocation": "https://github.com/dtolnay/thiserror",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "thiserror-impl",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "2.0.14"
    },
    {
      "SPDXID": "SPDXRef-thread_local",
      "copyrightText": "NOASSERTION",
      "description": "Per-object thread-local storage",
      "downloadLocation": "https://github.com/Amanieu/thread_local-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "thread_local",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.1.9"
    },
    {
      "SPDXID": "SPDXRef-tinytemplate",
      "copyrightText": "NOASSERTION",
      "description": "Simple, lightweight template engine",
      "downloadLocation": "https://github.com/bheisler/TinyTemplate",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "tinytemplate",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.2.1"
    },
    {
      "SPDXID": "SPDXRef-tokio",
      "copyrightText": "NOASSERTION",
      "description": "An event-driven, non-blocking I/O platform for writing asynchronous I/O\nbacked applications.\n",
      "downloadLocation": "https://github.com/tokio-rs/tokio",
      "filesAnalyzed": false,
      "homepage": "https://tokio.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "tokio",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "1.47.1"
    },
    {
      "SPDXID": "SPDXRef-tokiomacros",
      "copyrightText": "NOASSERTION",
      "description": "Tokio's proc macros.\n",
      "downloadLocation": "https://github.com/tokio-rs/tokio",
      "filesAnalyzed": false,
      "homepage": "https://tokio.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "tokio-macros",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "2.5.0"
    },
    {
      "SPDXID": "SPDXRef-tokiorustls",
      "copyrightText": "NOASSERTION",
      "description": "Asynchronous TLS/SSL streams for Tokio using Rustls.",
      "downloadLocation": "https://github.com/rustls/tokio-rustls",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rustls/tokio-rustls",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "tokio-rustls",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.25.0"
    },
    {
      "SPDXID": "SPDXRef-toml",
      "copyrightText": "NOASSERTION",
      "description": "A native Rust encoder and decoder of TOML-formatted files and streams. Provides\nimplementations of the standard Serialize/Deserialize traits for TOML data to\nfacilitate deserializing and serializing Rust structures.\n",
      "downloadLocation": "https://github.com/toml-rs/toml",
      "filesAnalyzed": false,
      "homepage": "https://github.com/toml-rs/toml",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "toml",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.5.11"
    },
    {
      "SPDXID": "SPDXRef-toml",
      "copyrightText": "NOASSERTION",
      "description": "A native Rust encoder and decoder of TOML-formatted files and streams. Provides\nimplementations of the standard Serialize/Deserialize traits for TOML data to\nfacilitate deserializing and serializing Rust structures.\n",
      "downloadLocation": "https://github.com/toml-rs/toml",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "toml",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.8.23"
    },
    {
      "SPDXID": "SPDXRef-toml_datetime",
      "copyrightText": "NOASSERTION",
      "description": "A TOML-compatible datetime type",
      "downloadLocation": "https://github.com/toml-rs/toml",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "toml_datetime",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.6.11"
    },
    {
      "SPDXID": "SPDXRef-toml_edit",
      "copyrightText": "NOASSERTION",
      "description": "Yet another format-preserving TOML parser.",
      "downloadLocation": "https://github.com/toml-rs/toml",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "toml_edit",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.22.27"
    },
    {
      "SPDXID": "SPDXRef-toml_write",
      "copyrightText": "NOASSERTION",
      "description": "A low-level interface for writing out TOML\n",
      "downloadLocation": "https://github.com/toml-rs/toml",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "toml_write",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.1.2"
    },
    {
      "SPDXID": "SPDXRef-tracing",
      "copyrightText": "NOASSERTION",
      "description": "Application-level tracing for Rust.\n",
      "downloadLocation": "https://github.com/tokio-rs/tracing",
      "filesAnalyzed": false,
      "homepage": "https://tokio.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "tracing",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.1.41"
    },
    {
      "SPDXID": "SPDXRef-tracingattributes",
      "copyrightText": "NOASSERTION",
      "description": "Procedural macro attributes for automatically instrumenting functions.\n",
      "downloadLocation": "https://github.com/tokio-rs/tracing",
      "filesAnalyzed": false,
      "homepage": "https://tokio.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "tracing-attributes",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "18"
      },
      "version": "0.1.30"
    },
    {
      "SPDXID": "SPDXRef-tracingcore",
      "copyrightText": "NOASSERTION",
      "description": "Core primitives for application-level tracing.\n",
      "downloadLocation": "https://github.com/tokio-rs/tracing",
      "filesAnalyzed": false,
      "homepage": "https://tokio.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "tracing-core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.1.34"
    },
    {
      "SPDXID": "SPDXRef-tracinglog",
      "copyrightText": "NOASSERTION",
      "description": "Provides compatibility between `tracing` and the `log` crate.\n",
      "downloadLocation": "https://github.com/tokio-rs/tracing",
      "filesAnalyzed": false,
      "homepage": "https://tokio.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "tracing-log",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.2.0"
    },
    {
      "SPDXID": "SPDXRef-tracingsubscriber",
      "copyrightText": "NOASSERTION",
      "description": "Utilities for implementing and composing `tracing` subscribers.\n",
      "downloadLocation": "https://github.com/tokio-rs/tracing",
      "filesAnalyzed": false,
      "homepage": "https://tokio.rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "tracing-subscriber",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "18"
      },
      "version": "0.3.19"
    },
    {
      "SPDXID": "SPDXRef-twinvault",
      "copyrightText": "NOASSERTION",
      "description": "Conflict-free twin state with receipts for every operation",
      "downloadLocation": "https://github.com/betanet/betanet-bounty",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "twin-vault",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "f"
      },
      "version": "0.1.0"
    },
    {
      "SPDXID": "SPDXRef-typenum",
      "copyrightText": "NOASSERTION",
      "description": "Typenum is a Rust library for type-level numbers evaluated at\n    compile time. It currently supports bits, unsigned integers, and signed\n    integers. It also provides a type-level array of type-level numbers, but its\n    implementation is incomplete.",
      "downloadLocation": "https://github.com/paholg/typenum",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "typenum",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "1.18.0"
    },
    {
      "SPDXID": "SPDXRef-unarray",
      "copyrightText": "NOASSERTION",
      "description": "Utilities for working with uninitialized arrays",
      "downloadLocation": "https://github.com/cameron1024/unarray",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "unarray",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.1.4"
    },
    {
      "SPDXID": "SPDXRef-unicodeident",
      "copyrightText": "NOASSERTION",
      "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",
      "downloadLocation": "https://github.com/dtolnay/unicode-ident",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "(MIT OR Apache-2.0) AND Unicode-3.0",
      "name": "unicode-ident",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "1.0.18"
    },
    {
      "SPDXID": "SPDXRef-universalhash",
      "copyrightText": "NOASSERTION",
      "description": "Trait for universal hash functions",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "universal-hash",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.4.0"
    },
    {
      "SPDXID": "SPDXRef-universalhash",
      "copyrightText": "NOASSERTION",
      "description": "Traits which describe the functionality of universal hash functions (UHFs)",
      "downloadLocation": "https://github.com/RustCrypto/traits",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "universal-hash",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.5.1"
    },
    {
      "SPDXID": "SPDXRef-untrusted",
      "copyrightText": "NOASSERTION",
      "description": "Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.",
      "downloadLocation": "https://github.com/briansmith/untrusted",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "ISC",
      "name": "untrusted",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.9.0"
    },
    {
      "SPDXID": "SPDXRef-urlencoding",
      "copyrightText": "NOASSERTION",
      "description": "A Rust library for doing URL percentage encoding.",
      "downloadLocation": "https://github.com/kornelski/rust_urlencoding",
      "filesAnalyzed": false,
      "homepage": "https://lib.rs/urlencoding",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "urlencoding",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "2.1.3"
    },
    {
      "SPDXID": "SPDXRef-utf8parse",
      "copyrightText": "NOASSERTION",
      "description": "Table-driven UTF-8 parser",
      "downloadLocation": "https://github.com/alacritty/vte",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "utf8parse",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.2.2"
    },
    {
      "SPDXID": "SPDXRef-uuid",
      "copyrightText": "NOASSERTION",
      "description": "A library to generate and parse UUIDs.",
      "downloadLocation": "https://github.com/uuid-rs/uuid",
      "filesAnalyzed": false,
      "homepage": "https://github.com/uuid-rs/uuid",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "uuid",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "1.18.0"
    },
    {
      "SPDXID": "SPDXRef-valuable",
      "copyrightText": "NOASSERTION",
      "description": "Object-safe value inspection, used to pass un-typed structured data across trait-object boundaries.\n",
      "downloadLocation": "https://github.com/tokio-rs/valuable",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "valuable",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.1.1"
    },
    {
      "SPDXID": "SPDXRef-vcpkg",
      "copyrightText": "NOASSERTION",
      "description": "A library to find native dependencies in a vcpkg tree at build\ntime in order to be used in Cargo build scripts.\n",
      "downloadLocation": "https://github.com/mcgoo/vcpkg-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "vcpkg",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.2.15"
    },
    {
      "SPDXID": "SPDXRef-version_check",
      "copyrightText": "NOASSERTION",
      "description": "Tiny crate to check the version of the installed/running rustc.",
      "downloadLocation": "https://github.com/SergioBenitez/version_check",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "version_check",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.9.5"
    },
    {
      "SPDXID": "SPDXRef-vrf",
      "copyrightText": "NOASSERTION",
      "description": "Fast and extensible Verifiable Random Function (VRF) library; currently supporting secp256k1, secp256r1 and sect163k1 curves",
      "downloadLocation": "https://github.com/witnet/vrf-rs",
      "filesAnalyzed": false,
      "homepage": "https://github.com/witnet/vrf-rs",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "vrf",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "8"
      },
      "version": "0.2.5"
    },
    {
      "SPDXID": "SPDXRef-waittimeout",
      "copyrightText": "NOASSERTION",
      "description": "A crate to wait on a child process with a timeout specified across Unix and\nWindows platforms.\n",
      "downloadLocation": "https://github.com/alexcrichton/wait-timeout",
      "filesAnalyzed": false,
      "homepage": "https://github.com/alexcrichton/wait-timeout",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "wait-timeout",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.2.1"
    },
    {
      "SPDXID": "SPDXRef-walkdir",
      "copyrightText": "NOASSERTION",
      "description": "Recursively walk a directory.",
      "downloadLocation": "https://github.com/BurntSushi/walkdir",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/walkdir",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense/MIT",
      "name": "walkdir",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "2.5.0"
    },
    {
      "SPDXID": "SPDXRef-wasi",
      "copyrightText": "NOASSERTION",
      "description": "Experimental WASI API bindings for Rust",
      "downloadLocation": "https://github.com/bytecodealliance/wasi",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",
      "name": "wasi",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "20"
      },
      "version": "0.9.0+wasi-snapshot-preview1"
    },
    {
      "SPDXID": "SPDXRef-wasi",
      "copyrightText": "NOASSERTION",
      "description": "Experimental WASI API bindings for Rust",
      "downloadLocation": "https://github.com/bytecodealliance/wasi",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",
      "name": "wasi",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "21"
      },
      "version": "0.11.1+wasi-snapshot-preview1"
    },
    {
      "SPDXID": "SPDXRef-wasi",
      "copyrightText": "NOASSERTION",
      "description": "WASI API bindings for Rust",
      "downloadLocation": "https://github.com/bytecodealliance/wasi-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",
      "name": "wasi",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.14.2+wasi-0.2.4"
    },
    {
      "SPDXID": "SPDXRef-wasmbindgen",
      "copyrightText": "NOASSERTION",
      "description": "Easy support for interacting between JS and Rust.\n",
      "downloadLocation": "https://github.com/rustwasm/wasm-bindgen",
      "filesAnalyzed": false,
      "homepage": "https://rustwasm.github.io/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "wasm-bindgen",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.2.100"
    },
    {
      "SPDXID": "SPDXRef-wasmbindgenbackend",
      "copyrightText": "NOASSERTION",
      "description": "Backend code generation of the wasm-bindgen tool\n",
      "downloadLocation": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/backend",
      "filesAnalyzed": false,
      "homepage": "https://rustwasm.github.io/wasm-bindgen/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "wasm-bindgen-backend",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1b"
      },
      "version": "0.2.100"
    },
    {
      "SPDXID": "SPDXRef-wasmbindgenmacro",
      "copyrightText": "NOASSERTION",
      "description": "Definition of the `#[wasm_bindgen]` attribute, an internal dependency\n",
      "downloadLocation": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro",
      "filesAnalyzed": false,
      "homepage": "https://rustwasm.github.io/wasm-bindgen/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "wasm-bindgen-macro",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "19"
      },
      "version": "0.2.100"
    },
    {
      "SPDXID": "SPDXRef-wasmbindgenmacrosupport",
      "copyrightText": "NOASSERTION",
      "description": "The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backend crate\n",
      "downloadLocation": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/macro-support",
      "filesAnalyzed": false,
      "homepage": "https://rustwasm.github.io/wasm-bindgen/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "wasm-bindgen-macro-support",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "21"
      },
      "version": "0.2.100"
    },
    {
      "SPDXID": "SPDXRef-wasmbindgenshared",
      "copyrightText": "NOASSERTION",
      "description": "Shared support between wasm-bindgen and wasm-bindgen cli, an internal\ndependency.\n",
      "downloadLocation": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/shared",
      "filesAnalyzed": false,
      "homepage": "https://rustwasm.github.io/wasm-bindgen/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "wasm-bindgen-shared",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1a"
      },
      "version": "0.2.100"
    },
    {
      "SPDXID": "SPDXRef-websys",
      "copyrightText": "NOASSERTION",
      "description": "Bindings for all Web APIs, a procedurally generated crate from WebIDL\n",
      "downloadLocation": "https://github.com/rustwasm/wasm-bindgen/tree/master/crates/web-sys",
      "filesAnalyzed": false,
      "homepage": "https://rustwasm.github.io/wasm-bindgen/web-sys/index.html",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "web-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "d"
      },
      "version": "0.3.77"
    },
    {
      "SPDXID": "SPDXRef-webpkiroots",
      "copyrightText": "NOASSERTION",
      "description": "Mozilla's CA root certificates for use with webpki",
      "downloadLocation": "https://github.com/rustls/webpki-roots",
      "filesAnalyzed": false,
      "homepage": "https://github.com/rustls/webpki-roots",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MPL-2.0",
      "name": "webpki-roots",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.25.4"
    },
    {
      "SPDXID": "SPDXRef-wide",
      "copyrightText": "NOASSERTION",
      "description": "A crate to help you go wide.",
      "downloadLocation": "https://github.com/Lokathor/wide",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Zlib OR Apache-2.0 OR MIT",
      "name": "wide",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "a"
      },
      "version": "0.7.33"
    },
    {
      "SPDXID": "SPDXRef-winapi",
      "copyrightText": "NOASSERTION",
      "description": "Raw FFI bindings for all of Windows API.",
      "downloadLocation": "https://github.com/retep998/winapi-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "winapi",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "b"
      },
      "version": "0.3.9"
    },
    {
      "SPDXID": "SPDXRef-winapii686pcwindowsgnu",
      "copyrightText": "NOASSERTION",
      "description": "Import libraries for the i686-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.",
      "downloadLocation": "https://github.com/retep998/winapi-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "winapi-i686-pc-windows-gnu",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1f"
      },
      "version": "0.4.0"
    },
    {
      "SPDXID": "SPDXRef-winapiutil",
      "copyrightText": "NOASSERTION",
      "description": "A dumping ground for high level safe wrappers over windows-sys.",
      "downloadLocation": "https://github.com/BurntSushi/winapi-util",
      "filesAnalyzed": false,
      "homepage": "https://github.com/BurntSushi/winapi-util",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Unlicense OR MIT",
      "name": "winapi-util",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "10"
      },
      "version": "0.1.9"
    },
    {
      "SPDXID": "SPDXRef-winapix86_64pcwindowsgnu",
      "copyrightText": "NOASSERTION",
      "description": "Import libraries for the x86_64-pc-windows-gnu target. Please don't use this crate directly, depend on winapi instead.",
      "downloadLocation": "https://github.com/retep998/winapi-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT/Apache-2.0",
      "name": "winapi-x86_64-pc-windows-gnu",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "21"
      },
      "version": "0.4.0"
    },
    {
      "SPDXID": "SPDXRef-windowscore",
      "copyrightText": "NOASSERTION",
      "description": "Core type support for COM and Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-core",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "12"
      },
      "version": "0.61.2"
    },
    {
      "SPDXID": "SPDXRef-windowsimplement",
      "copyrightText": "NOASSERTION",
      "description": "The implement macro for the windows crate",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-implement",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "17"
      },
      "version": "0.60.0"
    },
    {
      "SPDXID": "SPDXRef-windowsinterface",
      "copyrightText": "NOASSERTION",
      "description": "The interface macro for the windows crate",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-interface",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "17"
      },
      "version": "0.59.1"
    },
    {
      "SPDXID": "SPDXRef-windowslink",
      "copyrightText": "NOASSERTION",
      "description": "Linking for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-link",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.1.3"
    },
    {
      "SPDXID": "SPDXRef-windowsresult",
      "copyrightText": "NOASSERTION",
      "description": "Windows error handling",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-result",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "0.3.4"
    },
    {
      "SPDXID": "SPDXRef-windowsstrings",
      "copyrightText": "NOASSERTION",
      "description": "Windows string types",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-strings",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.4.2"
    },
    {
      "SPDXID": "SPDXRef-windowssys",
      "copyrightText": "NOASSERTION",
      "description": "Rust for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.52.0"
    },
    {
      "SPDXID": "SPDXRef-windowssys",
      "copyrightText": "NOASSERTION",
      "description": "Rust for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.59.0"
    },
    {
      "SPDXID": "SPDXRef-windowssys",
      "copyrightText": "NOASSERTION",
      "description": "Rust for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-sys",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "0.60.2"
    },
    {
      "SPDXID": "SPDXRef-windowstargets",
      "copyrightText": "NOASSERTION",
      "description": "Import libs for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-targets",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windowstargets",
      "copyrightText": "NOASSERTION",
      "description": "Import libs for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows-targets",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.53.3"
    },
    {
      "SPDXID": "SPDXRef-windows_aarch64_gnullvm",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_aarch64_gnullvm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1d"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_aarch64_gnullvm",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_aarch64_gnullvm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1d"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-windows_aarch64_msvc",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_aarch64_msvc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1a"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_aarch64_msvc",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_aarch64_msvc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1a"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-windows_i686_gnu",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_i686_gnu",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "16"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_i686_gnu",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_i686_gnu",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "16"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-windows_i686_gnullvm",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_i686_gnullvm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1a"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_i686_gnullvm",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_i686_gnullvm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1a"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-windows_i686_msvc",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_i686_msvc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "17"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_i686_msvc",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_i686_msvc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "17"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-windows_x86_64_gnu",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_x86_64_gnu",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "18"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_x86_64_gnu",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_x86_64_gnu",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "18"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-windows_x86_64_gnullvm",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_x86_64_gnullvm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1c"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_x86_64_gnullvm",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_x86_64_gnullvm",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "1c"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-windows_x86_64_msvc",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_x86_64_msvc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "19"
      },
      "version": "0.52.6"
    },
    {
      "SPDXID": "SPDXRef-windows_x86_64_msvc",
      "copyrightText": "NOASSERTION",
      "description": "Import lib for Windows",
      "downloadLocation": "https://github.com/microsoft/windows-rs",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT OR Apache-2.0",
      "name": "windows_x86_64_msvc",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "19"
      },
      "version": "0.53.0"
    },
    {
      "SPDXID": "SPDXRef-winnow",
      "copyrightText": "NOASSERTION",
      "description": "A byte-oriented, zero-copy, parser combinators library",
      "downloadLocation": "https://github.com/winnow-rs/winnow",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "MIT",
      "name": "winnow",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "0.7.12"
    },
    {
      "SPDXID": "SPDXRef-witbindgenrt",
      "copyrightText": "NOASSERTION",
      "description": "Runtime support for the `wit-bindgen` crate\n",
      "downloadLocation": "https://github.com/bytecodealliance/wit-bindgen",
      "filesAnalyzed": false,
      "homepage": "https://github.com/bytecodealliance/wit-bindgen",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT",
      "name": "wit-bindgen-rt",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "14"
      },
      "version": "0.39.0"
    },
    {
      "SPDXID": "SPDXRef-x25519dalek",
      "copyrightText": "NOASSERTION",
      "description": "X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.",
      "downloadLocation": "https://github.com/dalek-cryptography/x25519-dalek",
      "filesAnalyzed": false,
      "homepage": "https://dalek.rs/",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-3-Clause",
      "name": "x25519-dalek",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "11"
      },
      "version": "1.1.1"
    },
    {
      "SPDXID": "SPDXRef-zerocopy",
      "copyrightText": "NOASSERTION",
      "description": "Zerocopy makes zero-cost memory manipulation effortless. We write \"unsafe\" so you don't have to.",
      "downloadLocation": "https://github.com/google/zerocopy",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-2-Clause OR Apache-2.0 OR MIT",
      "name": "zerocopy",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "e"
      },
      "version": "0.8.26"
    },
    {
      "SPDXID": "SPDXRef-zerocopyderive",
      "copyrightText": "NOASSERTION",
      "description": "Custom derive for traits from the zerocopy crate",
      "downloadLocation": "https://github.com/google/zerocopy",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "BSD-2-Clause OR Apache-2.0 OR MIT",
      "name": "zerocopy-derive",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "15"
      },
      "version": "0.8.26"
    },
    {
      "SPDXID": "SPDXRef-zeroize",
      "copyrightText": "NOASSERTION",
      "description": "Securely clear secrets from memory with a simple trait built on\nstable Rust primitives which guarantee memory is zeroed using an\noperation will not be 'optimized away' by the compiler.\nUses a portable pure Rust implementation that works everywhere,\neven WASM!\n",
      "downloadLocation": "https://github.com/RustCrypto/utils/tree/master/zeroize",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "zeroize",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "c"
      },
      "version": "1.8.1"
    },
    {
      "SPDXID": "SPDXRef-zeroize_derive",
      "copyrightText": "NOASSERTION",
      "description": "Custom derive support for zeroize",
      "downloadLocation": "https://github.com/RustCrypto/utils/tree/master/zeroize/derive",
      "filesAnalyzed": false,
      "homepage": "NOASSERTION",
      "licenseConcluded": "NOASSERTION",
      "licenseDeclared": "Apache-2.0 OR MIT",
      "name": "zeroize_derive",
      "packageVerificationCode": {
        "packageVerificationCodeValue": "13"
      },
      "version": "1.4.2"
    }
  ],
  "relationships": [
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpp_demangle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-fallibleiterator",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-gimli",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-memmap2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-object",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcdemangle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-smallvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-typedarena",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-findshlibs",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-libtestmimic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-addr2line"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-adler2"
    },
    {
      "relatedSpdxElement": "SPDXRef-blobby",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-heapless",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-arrayvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-blobby",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-cryptocommon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-heapless",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aead"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aes"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aes"
    },
    {
      "relatedSpdxElement": "SPDXRef-ctr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aes"
    },
    {
      "relatedSpdxElement": "SPDXRef-opaquedebug",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aes"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aes"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aes"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aes"
    },
    {
      "relatedSpdxElement": "SPDXRef-aead",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-aes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-ctr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-ghash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-aead",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-aesgcm"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-betanetdtn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-betanethtx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-dashmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-openmls",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-openmls_rust_crypto",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-openmls_traits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-prost",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-protobuf",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-prostbuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-agentfabric"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ahocorasick"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ahocorasick"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ahocorasick"
    },
    {
      "relatedSpdxElement": "SPDXRef-zip",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-androidtzdata"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-android_system_properties"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anes"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anes"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anes"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstyle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstyleparse",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstylequery",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-colorchoice",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-is_terminal_polyfill",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-utf8parse",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-divan",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-lexopt",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-owocolors",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-stripansiescapes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstylewincon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstream"
    },
    {
      "relatedSpdxElement": "SPDXRef-lexopt",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyle"
    },
    {
      "relatedSpdxElement": "SPDXRef-arrayvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyleparse"
    },
    {
      "relatedSpdxElement": "SPDXRef-utf8parse",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyleparse"
    },
    {
      "relatedSpdxElement": "SPDXRef-codegenrs",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyleparse"
    },
    {
      "relatedSpdxElement": "SPDXRef-divan",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyleparse"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyleparse"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyleparse"
    },
    {
      "relatedSpdxElement": "SPDXRef-vte_generate_state_changes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstyleparse"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstylequery"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstyle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstylewincon"
    },
    {
      "relatedSpdxElement": "SPDXRef-lexopt",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstylewincon"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell_polyfill",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstylewincon"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anstylewincon"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anyhow"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anyhow"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anyhow"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anyhow"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anyhow"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-anyhow"
    },
    {
      "relatedSpdxElement": "SPDXRef-numcomplex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-approx"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-approx"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingattributes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-asynctrait"
    },
    {
      "relatedSpdxElement": "SPDXRef-hermitabi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-atty"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-atty"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-atty"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpp_demangle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcdemangle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-libloading",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowstargets",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-addr2line",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-miniz_oxide",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-object",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-ruzstd",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-backtrace"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-base64"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-base64"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-base64"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-base64"
    },
    {
      "relatedSpdxElement": "SPDXRef-rstest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-base64"
    },
    {
      "relatedSpdxElement": "SPDXRef-rstest_reuse",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-base64"
    },
    {
      "relatedSpdxElement": "SPDXRef-strum",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-base64"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-cbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingsubscriber",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-cbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetc"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-betanetdtn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-betanethtx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-chrono",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-crc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_chacha",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-sled",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetdtn"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetffi"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-base64",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-chacha20poly1305",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-dashmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-quinn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustls",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlspkitypes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-snow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokiorustls",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-urlencoding",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-webpkiroots",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-x25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanethtx"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-cargo_metadata",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-chrono",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingsubscriber",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-walkdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetlinter"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-chacha20poly1305",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-ed25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-hkdf",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-vrf",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-x25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingsubscriber",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetmixnode"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-md5",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustls",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingsubscriber",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-betanetutls"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bincode"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bincode"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bincode"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitset"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitset"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitset"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitset"
    },
    {
      "relatedSpdxElement": "SPDXRef-borsh",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-miniserde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-nanoserde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_xorshift",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-betanetdtn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitchatcla"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-walkdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bitflags"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-blake2"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-blake2"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-blake2"
    },
    {
      "relatedSpdxElement": "SPDXRef-blockpadding",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-blockbuffer"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-blockbuffer"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-blockbuffer"
    },
    {
      "relatedSpdxElement": "SPDXRef-allocatorapi2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-blinkalloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bumpalo"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bytemuck"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-byteorder"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-byteorder"
    },
    {
      "relatedSpdxElement": "SPDXRef-portableatomic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-loom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-camino"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-camino"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-camino"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-camino"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-camino"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargoplatform"
    },
    {
      "relatedSpdxElement": "SPDXRef-camino",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargo_metadata"
    },
    {
      "relatedSpdxElement": "SPDXRef-cargoplatform",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargo_metadata"
    },
    {
      "relatedSpdxElement": "SPDXRef-derive_builder",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargo_metadata"
    },
    {
      "relatedSpdxElement": "SPDXRef-semver",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargo_metadata"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargo_metadata"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargo_metadata"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cargo_metadata"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cast"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-heck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-serial_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-jobserver",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cc"
    },
    {
      "relatedSpdxElement": "SPDXRef-shlex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cc"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cc"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cc"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cfgif"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20"
    },
    {
      "relatedSpdxElement": "SPDXRef-aead",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-chacha20",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-poly1305",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-aead",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-aead",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-chacha20",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-poly1305",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-aead",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chacha20poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-purerustlocales",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-similarasserts",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-androidtzdata",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-ianatimezone",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowslink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowsbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-chrono"
    },
    {
      "relatedSpdxElement": "SPDXRef-ciboriumio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciborium"
    },
    {
      "relatedSpdxElement": "SPDXRef-ciboriumll",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciborium"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciborium"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciborium"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciborium"
    },
    {
      "relatedSpdxElement": "SPDXRef-rstest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciborium"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciborium"
    },
    {
      "relatedSpdxElement": "SPDXRef-ciboriumio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciboriumll"
    },
    {
      "relatedSpdxElement": "SPDXRef-half",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciboriumll"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ciboriumll"
    },
    {
      "relatedSpdxElement": "SPDXRef-blobby",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cipher"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cipher"
    },
    {
      "relatedSpdxElement": "SPDXRef-blobby",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cipher"
    },
    {
      "relatedSpdxElement": "SPDXRef-cryptocommon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cipher"
    },
    {
      "relatedSpdxElement": "SPDXRef-inout",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cipher"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cipher"
    },
    {
      "relatedSpdxElement": "SPDXRef-atty",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap_lex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-strsim",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-termcolor",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-terminal_size",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-textwrap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicase",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-yamlrust",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-humantime",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-shlex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-trycmd",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap_builder",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-automod",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-clapcargo",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-jiff",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-shlex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-trycmd",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstream",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstyle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap_lex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-strsim",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-terminal_size",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicase",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodewidth",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-colorprint",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicemojichar",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_builder"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstyle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-heck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-pulldowncmark",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-os_str_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_lex"
    },
    {
      "relatedSpdxElement": "SPDXRef-automod",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-clap_lex"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cpufeatures"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cpufeatures"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cpufeatures"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cpufeatures"
    },
    {
      "relatedSpdxElement": "SPDXRef-crccatalog",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crc"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crc32fast"
    },
    {
      "relatedSpdxElement": "SPDXRef-bencher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crc32fast"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crc32fast"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crc32fast"
    },
    {
      "relatedSpdxElement": "SPDXRef-anes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-asyncstd",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-atty",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-cast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-ciborium",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterionplot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-csv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-oorandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-plotters",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-smol",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-tinytemplate",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-walkdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-approx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterion"
    },
    {
      "relatedSpdxElement": "SPDXRef-cast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterionplot"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterionplot"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertoolsnum",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterionplot"
    },
    {
      "relatedSpdxElement": "SPDXRef-numcomplex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterionplot"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-criterionplot"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamepoch",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamdeque"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamutils",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamdeque"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamdeque"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamutils",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamepoch"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamepoch"
    },
    {
      "relatedSpdxElement": "SPDXRef-loom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamepoch"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamutils"
    },
    {
      "relatedSpdxElement": "SPDXRef-loom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-crossbeamutils"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cryptocommon"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cryptocommon"
    },
    {
      "relatedSpdxElement": "SPDXRef-typenum",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-cryptocommon"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ctr"
    },
    {
      "relatedSpdxElement": "SPDXRef-aes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ctr"
    },
    {
      "relatedSpdxElement": "SPDXRef-cipher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ctr"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ctr"
    },
    {
      "relatedSpdxElement": "SPDXRef-byteorder",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-fiatcrypto",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-packed_simd_2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-platforms",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-fiatcrypto",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-packed_simd_2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-curve25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamutils",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-hashbrown",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-lock_api",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-typesize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-dashmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-blobby",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-digest"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-digest"
    },
    {
      "relatedSpdxElement": "SPDXRef-blobby",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-digest"
    },
    {
      "relatedSpdxElement": "SPDXRef-blockbuffer",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-digest"
    },
    {
      "relatedSpdxElement": "SPDXRef-constoid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-digest"
    },
    {
      "relatedSpdxElement": "SPDXRef-cryptocommon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-digest"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-digest"
    },
    {
      "relatedSpdxElement": "SPDXRef-pkcs8",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-signature",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-ed25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519"
    },
    {
      "relatedSpdxElement": "SPDXRef-curve25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-ed25519",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-merlin",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ed25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-either"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-either"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-errno"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-errno"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-errno"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-errno"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fastrand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fastrand"
    },
    {
      "relatedSpdxElement": "SPDXRef-wyhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fastrand"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fastrand"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fastrand"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fastrand"
    },
    {
      "relatedSpdxElement": "SPDXRef-agentfabric",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-betanetdtn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitchatcla",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-chacha20poly1305",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-chrono",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-dashmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-ed25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-nalgebra",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-ndarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-orderedfloat",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_distr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-sled",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-twinvault",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-federated"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fixedbitset"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fixedbitset"
    },
    {
      "relatedSpdxElement": "SPDXRef-foreigntypesshared",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-foreigntypes"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fs2"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fs2"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fs2"
    },
    {
      "relatedSpdxElement": "SPDXRef-futureschannel",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-futurescore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresexecutor",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuressink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-futurestask",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresutil",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-assert_matches",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-pinproject",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futures"
    },
    {
      "relatedSpdxElement": "SPDXRef-futurescore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futureschannel"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuressink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futureschannel"
    },
    {
      "relatedSpdxElement": "SPDXRef-portableatomic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futurescore"
    },
    {
      "relatedSpdxElement": "SPDXRef-futurescore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresexecutor"
    },
    {
      "relatedSpdxElement": "SPDXRef-futurestask",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresexecutor"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresutil",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresexecutor"
    },
    {
      "relatedSpdxElement": "SPDXRef-num_cpus",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresexecutor"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresmacro"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresmacro"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresmacro"
    },
    {
      "relatedSpdxElement": "SPDXRef-futureschannel",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-futurescore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresmacro",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuressink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-futurestask",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-pinprojectlite",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-pinutils",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-slab",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokioio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-futuresutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-byteorder",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fxhash"
    },
    {
      "relatedSpdxElement": "SPDXRef-fnv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fxhash"
    },
    {
      "relatedSpdxElement": "SPDXRef-seahash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-fxhash"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-genericarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-typenum",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-genericarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-genericarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-genericarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-genericarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-version_check",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-genericarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-stdweb",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-refi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-getrandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-opaquedebug",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ghash"
    },
    {
      "relatedSpdxElement": "SPDXRef-polyval",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ghash"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ghash"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ghash"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-gimli"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-gimli"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-gimli"
    },
    {
      "relatedSpdxElement": "SPDXRef-fallibleiterator",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-gimli"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-gimli"
    },
    {
      "relatedSpdxElement": "SPDXRef-stable_deref_trait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-gimli"
    },
    {
      "relatedSpdxElement": "SPDXRef-testassembler",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-gimli"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_distr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-crunchy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck_macros",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-crunchy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-half"
    },
    {
      "relatedSpdxElement": "SPDXRef-ahash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-bumpalo",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-fnv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-ahash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-allocatorapi2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-equivalent",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-bumpalo",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-fnv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-allocatorapi2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-equivalent",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-foldhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-bumpalo",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-fnv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hashbrown"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodesegmentation",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-heck"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hermitabi"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hermitabi"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hermitabi"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-fasterhex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-pretty_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustchex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-versionsync",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hex"
    },
    {
      "relatedSpdxElement": "SPDXRef-hmac",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hkdf"
    },
    {
      "relatedSpdxElement": "SPDXRef-blobby",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hkdf"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hkdf"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha1",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hkdf"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hkdf"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmac"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmac"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmac"
    },
    {
      "relatedSpdxElement": "SPDXRef-md5",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmac"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha1",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmac"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmac"
    },
    {
      "relatedSpdxElement": "SPDXRef-streebog",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmac"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmacsha256"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-hmacsha256"
    },
    {
      "relatedSpdxElement": "SPDXRef-chronotz",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-android_system_properties",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-ianatimezonehaiku",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowscore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-corefoundationsys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezone"
    },
    {
      "relatedSpdxElement": "SPDXRef-cc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ianatimezonehaiku"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-hashbrown",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcrayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-fnv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-fxhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-autocfg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-borsh",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-equivalent",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-hashbrown",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-fastrand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-fnv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-indexmap"
    },
    {
      "relatedSpdxElement": "SPDXRef-blockpadding",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-inout"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-inout"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-stdweb",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-websys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-stdweb",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-websys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-stdweb",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-websys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-instant"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-sc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-slab",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-socket2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-bindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-iouring"
    },
    {
      "relatedSpdxElement": "SPDXRef-either",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-paste",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-permutohedron",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-either",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-paste",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-permutohedron",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itertools"
    },
    {
      "relatedSpdxElement": "SPDXRef-nopanic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-itoa"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-jssys"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-jssys"
    },
    {
      "relatedSpdxElement": "SPDXRef-spin",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-lazy_static"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-lazy_static"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-lazy_static"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-libc"
    },
    {
      "relatedSpdxElement": "SPDXRef-nopanic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-libm"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-libm"
    },
    {
      "relatedSpdxElement": "SPDXRef-nopanic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-libm"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-linuxrawsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-linuxrawsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-linuxrawsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-linuxrawsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-owning_ref",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-lock_api"
    },
    {
      "relatedSpdxElement": "SPDXRef-scopeguard",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-lock_api"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-lock_api"
    },
    {
      "relatedSpdxElement": "SPDXRef-autocfg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-lock_api"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-sval",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-sval_ref",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-valuebag",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-sval",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-sval_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-valuebag",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-log"
    },
    {
      "relatedSpdxElement": "SPDXRef-regexautomata",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matchers"
    },
    {
      "relatedSpdxElement": "SPDXRef-num_cpus",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matrixmultiply"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matrixmultiply"
    },
    {
      "relatedSpdxElement": "SPDXRef-rawpointer",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matrixmultiply"
    },
    {
      "relatedSpdxElement": "SPDXRef-threadtree",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matrixmultiply"
    },
    {
      "relatedSpdxElement": "SPDXRef-bencher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matrixmultiply"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matrixmultiply"
    },
    {
      "relatedSpdxElement": "SPDXRef-autocfg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-matrixmultiply"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-memchr"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-memchr"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-memchr"
    },
    {
      "relatedSpdxElement": "SPDXRef-adler2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-miniz_oxide"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-miniz_oxide"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-miniz_oxide"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-miniz_oxide"
    },
    {
      "relatedSpdxElement": "SPDXRef-simdadler32",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-miniz_oxide"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-env_logger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-mio"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-multimap"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-multimap"
    },
    {
      "relatedSpdxElement": "SPDXRef-alga",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-approx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-cust_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-glam",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-matrixcomparecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-matrixmultiply",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-mint",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-nalgebramacros",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-numcomplex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-numrational",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-pest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-pest_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_distr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-simba",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-typenum",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-matrixcompare",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_isaac",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_xorshift",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebra"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebramacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebramacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebramacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-nalgebra",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nalgebramacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-betanetdtn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-orderedfloat",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-navigator"
    },
    {
      "relatedSpdxElement": "SPDXRef-approx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-approx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-cblassys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-matrixmultiply",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-numcomplex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-numinteger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-rawpointer",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-approx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-defmac",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ndarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-overload",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nuansiterm"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nuansiterm"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nuansiterm"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nuansiterm"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nuansiterm"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-nuansiterm"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytecheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numcomplex"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numcomplex"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numcomplex"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numcomplex"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numcomplex"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numcomplex"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numinteger"
    },
    {
      "relatedSpdxElement": "SPDXRef-numbigint",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numrational"
    },
    {
      "relatedSpdxElement": "SPDXRef-numinteger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numrational"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numrational"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numrational"
    },
    {
      "relatedSpdxElement": "SPDXRef-libm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numtraits"
    },
    {
      "relatedSpdxElement": "SPDXRef-autocfg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-numtraits"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-crc32fast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-flate2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-hashbrown",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-ruzstd",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmparser",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-object"
    },
    {
      "relatedSpdxElement": "SPDXRef-criticalsection",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-once_cell"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-once_cell"
    },
    {
      "relatedSpdxElement": "SPDXRef-portableatomic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-once_cell"
    },
    {
      "relatedSpdxElement": "SPDXRef-criticalsection",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-once_cell"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-once_cell"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-oorandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_pcg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-oorandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-randomfastrng",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-oorandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-randomize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-oorandom"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-opensslsys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-foreigntypes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-opensslmacros",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-openssl"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslmacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslmacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslmacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-awslcsys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-bsslsys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-bindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-cc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-opensslsrc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-pkgconfig",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-vcpkg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-opensslsys"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-borsh",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-derivevisitor",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-numcmp",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-schemars",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-speedy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-orderedfloat"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-os_str_bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-print_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-os_str_bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-uniquote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-os_str_bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-fastrand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-os_str_bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-os_str_bytes"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-core_arch",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-libm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-arrayvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-paste",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-sleefsys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-packed_simd_2"
    },
    {
      "relatedSpdxElement": "SPDXRef-instant",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-lock_api",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-lock_api",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-instant",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-petgraph",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-smallvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-threadid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-redox_syscall",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapi",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-petgraph",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-smallvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-threadid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-redox_syscall",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowstargets",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-parking_lot_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-pastetestsuite",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-paste"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-paste"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-paste"
    },
    {
      "relatedSpdxElement": "SPDXRef-fixedbitset",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-ahash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-defmac",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-fxhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-odds",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-petgraph"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-pinprojectlite"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-pinprojectlite"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-pkgconfig"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-platforms"
    },
    {
      "relatedSpdxElement": "SPDXRef-chrono",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-plottersbackend",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-plottersbitmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-plotterssvg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-websys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-ab_glyph",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-fontkit",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-image",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-pathfinder_geometry",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-ttfparser",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_distr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_xorshift",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotters"
    },
    {
      "relatedSpdxElement": "SPDXRef-image",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotterssvg"
    },
    {
      "relatedSpdxElement": "SPDXRef-plottersbackend",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-plotterssvg"
    },
    {
      "relatedSpdxElement": "SPDXRef-opaquedebug",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-universalhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-opaquedebug",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-universalhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-poly1305"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-polyval"
    },
    {
      "relatedSpdxElement": "SPDXRef-opaquedebug",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-polyval"
    },
    {
      "relatedSpdxElement": "SPDXRef-universalhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-polyval"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-polyval"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-polyval"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-polyval"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ppvlite86"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prettyplease"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prettyplease"
    },
    {
      "relatedSpdxElement": "SPDXRef-indoc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prettyplease"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prettyplease"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prettyplease"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prettyplease"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodeident",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-procmacro2"
    },
    {
      "relatedSpdxElement": "SPDXRef-flate2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-procmacro2"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-procmacro2"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-procmacro2"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-procmacro2"
    },
    {
      "relatedSpdxElement": "SPDXRef-tar",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-procmacro2"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitset",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptestmacro",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_chacha",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_xorshift",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-regexsyntax",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustyfork",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-unarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-x86",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-proptest"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prost"
    },
    {
      "relatedSpdxElement": "SPDXRef-prostderive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prost"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prost"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prost"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prost"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-heck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-multimap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-petgraph",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-prettyplease",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-prost",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-prosttypes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-pulldowncmark",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-pulldowncmarktocmark",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-env_logger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostbuild"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prostderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-prost",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prosttypes"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-prosttypes"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-protobuf"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-protobuf"
    },
    {
      "relatedSpdxElement": "SPDXRef-protobufsupport",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-protobuf"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-protobuf"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-protobufsupport"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-quote"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-quote"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-quote"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-refi"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-packed_simd",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_pcg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_hc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_pcg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_chacha",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_hc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-packed_simd_2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_chacha",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_pcg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_chacha",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_pcg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand"
    },
    {
      "relatedSpdxElement": "SPDXRef-ppvlite86",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-ppvlite86",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-ppvlite86",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_chacha"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_core"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_distr"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_distr"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_distr"
    },
    {
      "relatedSpdxElement": "SPDXRef-average",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_distr"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_distr"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_pcg",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_distr"
    },
    {
      "relatedSpdxElement": "SPDXRef-special",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_distr"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_hc"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_xorshift"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_xorshift"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rand_xorshift"
    },
    {
      "relatedSpdxElement": "SPDXRef-either",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayon"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayoncore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayon"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasm_sync",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayon"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayon"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_xorshift",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayon"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamdeque",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayoncore"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamutils",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayoncore"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasm_sync",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayoncore"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayoncore"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_xorshift",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayoncore"
    },
    {
      "relatedSpdxElement": "SPDXRef-scopedtls",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayoncore"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rayoncore"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-redox_syscall"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-redox_syscall"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-redox_syscall"
    },
    {
      "relatedSpdxElement": "SPDXRef-loom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-redox_syscall"
    },
    {
      "relatedSpdxElement": "SPDXRef-ahocorasick",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-regexautomata",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-regexsyntax",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-env_logger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-regextest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regex"
    },
    {
      "relatedSpdxElement": "SPDXRef-fst",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-regexsyntax",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-bstr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-ahocorasick",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-regexsyntax",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-bstr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-env_logger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-regextest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexautomata"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-regexsyntax"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-untrusted",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-cc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ring"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustcdemangle"
    },
    {
      "relatedSpdxElement": "SPDXRef-semver",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustc_version"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustc_version"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-flate2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-errno",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-memoffset",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-serial_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-linuxrawsys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-errno",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-linuxrawsys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-errno",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-errno",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustix"
    },
    {
      "relatedSpdxElement": "SPDXRef-awslcrs",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlspkitypes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-ring",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlswebpki",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-base64",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-bencher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-env_logger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlspemfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-webpkiroots",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlspkitypes"
    },
    {
      "relatedSpdxElement": "SPDXRef-webtime",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlspkitypes"
    },
    {
      "relatedSpdxElement": "SPDXRef-crabgrind",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlspkitypes"
    },
    {
      "relatedSpdxElement": "SPDXRef-awslcrs",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlspkitypes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-ring",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-untrusted",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-base64",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-bencher",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-bzip2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-rcgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustlswebpki"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustversion"
    },
    {
      "relatedSpdxElement": "SPDXRef-fnv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustyfork"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickerror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustyfork"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustyfork"
    },
    {
      "relatedSpdxElement": "SPDXRef-waittimeout",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-rustyfork"
    },
    {
      "relatedSpdxElement": "SPDXRef-nopanic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ryu"
    },
    {
      "relatedSpdxElement": "SPDXRef-num_cpus",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ryu"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ryu"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_xorshift",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-ryu"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-safe_arch"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-samefile"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapiutil",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-samefile"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-semver"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-itoa",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-ryu",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-automod",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-indoc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-refcast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_stacker",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_json"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_spanned"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_spanned"
    },
    {
      "relatedSpdxElement": "SPDXRef-serdeuntagged",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_spanned"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-serde_spanned"
    },
    {
      "relatedSpdxElement": "SPDXRef-blockbuffer",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-opaquedebug",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2asm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-cpufeatures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2asm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sha2"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-memorystats",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-slab",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-loom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-loom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-shardedslab"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-signalhookregistry"
    },
    {
      "relatedSpdxElement": "SPDXRef-signalhook",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-signalhookregistry"
    },
    {
      "relatedSpdxElement": "SPDXRef-digest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-signature"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-signature"
    },
    {
      "relatedSpdxElement": "SPDXRef-signature_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-signature"
    },
    {
      "relatedSpdxElement": "SPDXRef-hexliteral",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-signature"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-signature"
    },
    {
      "relatedSpdxElement": "SPDXRef-approx",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-cordic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-cuda_std",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-cust_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-decimal",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-fixed",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-libm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-numcomplex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-numtraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-packed_simd_2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-paste",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-rkyv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-wide",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-simba"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-slab"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-slab"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-slab"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-colorbacktrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-crc32fast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamepoch",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-crossbeamutils",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-fxhash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-rio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-zstd",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-byteorder",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-env_logger",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-quickcheck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_chacha",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_distr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-fs2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-sled"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-malloc_size_of",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-unty",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-debugger_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-debugger_test_parser",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-smallvec"
    },
    {
      "relatedSpdxElement": "SPDXRef-aesgcm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-blake2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-byteorder",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-chacha20poly1305",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-curve25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-pqcryptokyber",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-pqcryptotraits",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-ring",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-sodiumoxide",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-x25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustc_version",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-snow"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-socket2"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-socket2"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-subtle"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodeident",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-automod",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-flate2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-insta",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-refcast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-reqwest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-syntestsuite",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-tar",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-termcolor",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-walkdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodeident",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-automod",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-insta",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-refcast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-syntestsuite",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-termcolor",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-flate2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-rayon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-reqwest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-tar",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-walkdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-syn"
    },
    {
      "relatedSpdxElement": "SPDXRef-fastrand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tempfile"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tempfile"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tempfile"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustix",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tempfile"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tempfile"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tempfile"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapiutil",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-termcolor"
    },
    {
      "relatedSpdxElement": "SPDXRef-hyphenation",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-smawk",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-terminal_size",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodelinebreak",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodewidth",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicemojichar",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-versionsync",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-termion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-textwrap"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserrorimpl",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-refcast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserrorimpl",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-refcast",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserror"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserrorimpl"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserrorimpl"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserrorimpl"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserrorimpl"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserrorimpl"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thiserrorimpl"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thread_local"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-thread_local"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tinytemplate"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tinytemplate"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tinytemplate"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tinytemplate"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-mio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-pinprojectlite",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokiomacros",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-asyncstream",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresconcurrency",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-mockall",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokiostream",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokiotest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingmock",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-iouring",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-mio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-slab",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-loom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-socket2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-socket2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-mioaio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-backtrace",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-signalhookregistry",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-nix",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokio"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiomacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiomacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiomacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiomacros"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlspkitypes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustls",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-argh",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-futuresutil",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlspemfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlswebpki",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-webpkiroots",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tokiorustls"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_spanned",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml_datetime",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml_edit",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-tomltestdata",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-tomltestharness",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-walkdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_datetime"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_datetime"
    },
    {
      "relatedSpdxElement": "SPDXRef-indexmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-kstring",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_spanned",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml_datetime",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml_write",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-winnow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-tomltestdata",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-tomltestharness",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-walkdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_edit"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_write"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_write"
    },
    {
      "relatedSpdxElement": "SPDXRef-toml",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-toml_write"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-pinprojectlite",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingattributes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingcore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracing"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokiotest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingsubscriber",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingattributes"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingcore"
    },
    {
      "relatedSpdxElement": "SPDXRef-valuable",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingcore"
    },
    {
      "relatedSpdxElement": "SPDXRef-ahash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracinglog"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracinglog"
    },
    {
      "relatedSpdxElement": "SPDXRef-lru",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracinglog"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracinglog"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingcore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracinglog"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracinglog"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracinglog"
    },
    {
      "relatedSpdxElement": "SPDXRef-chrono",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-matchers",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-nuansiterm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-shardedslab",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-smallvec",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-thread_local",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-time",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingcore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracinglog",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingserde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-regex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-time",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracingfutures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracinglog",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-valuableserde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-valuable",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-tracingsubscriber"
    },
    {
      "relatedSpdxElement": "SPDXRef-agentfabric",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-asynctrait",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytes",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-chacha20poly1305",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-chrono",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-coset",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-dashmap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-ed25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-hkdf",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-parking_lot",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-sled",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-tracing",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-twinvault"
    },
    {
      "relatedSpdxElement": "SPDXRef-scaleinfo",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-typenum"
    },
    {
      "relatedSpdxElement": "SPDXRef-teststrategy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-unarray"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-unicodeident"
    },
    {
      "relatedSpdxElement": "SPDXRef-fst",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-unicodeident"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-unicodeident"
    },
    {
      "relatedSpdxElement": "SPDXRef-roaring",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-unicodeident"
    },
    {
      "relatedSpdxElement": "SPDXRef-ucdtrie",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-unicodeident"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodexid",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-unicodeident"
    },
    {
      "relatedSpdxElement": "SPDXRef-genericarray",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-universalhash"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-universalhash"
    },
    {
      "relatedSpdxElement": "SPDXRef-cryptocommon",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-universalhash"
    },
    {
      "relatedSpdxElement": "SPDXRef-subtle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-universalhash"
    },
    {
      "relatedSpdxElement": "SPDXRef-arbitrary",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-atomic",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-borsh",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-borshderive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-md5",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-sha1_smol",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-slog",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuidmacrointernal",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopy",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_test",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-uuidrnginternal",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgentest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-getrandom",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-uuid"
    },
    {
      "relatedSpdxElement": "SPDXRef-valuablederive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-valuable"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-valuable"
    },
    {
      "relatedSpdxElement": "SPDXRef-lazy_static",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vcpkg"
    },
    {
      "relatedSpdxElement": "SPDXRef-tempdir",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vcpkg"
    },
    {
      "relatedSpdxElement": "SPDXRef-hmacsha256",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vrf"
    },
    {
      "relatedSpdxElement": "SPDXRef-openssl",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vrf"
    },
    {
      "relatedSpdxElement": "SPDXRef-thiserror",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vrf"
    },
    {
      "relatedSpdxElement": "SPDXRef-clap",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vrf"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vrf"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vrf"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-vrf"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-waittimeout"
    },
    {
      "relatedSpdxElement": "SPDXRef-samefile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-walkdir"
    },
    {
      "relatedSpdxElement": "SPDXRef-doccomment",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-walkdir"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapiutil",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-walkdir"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-compiler_builtins",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacecore",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustcstdworkspacealloc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-witbindgenrt",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasi"
    },
    {
      "relatedSpdxElement": "SPDXRef-cfgif",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_json",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgenmacro",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-paste",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgen"
    },
    {
      "relatedSpdxElement": "SPDXRef-bumpalo",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenbackend"
    },
    {
      "relatedSpdxElement": "SPDXRef-log",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenbackend"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenbackend"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenbackend"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenbackend"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgenshared",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenbackend"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacro"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgenmacrosupport",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacro"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacro"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacrosupport"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacrosupport"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacrosupport"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgenbackend",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacrosupport"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgenshared",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenmacrosupport"
    },
    {
      "relatedSpdxElement": "SPDXRef-unicodeident",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wasmbindgenshared"
    },
    {
      "relatedSpdxElement": "SPDXRef-jssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-websys"
    },
    {
      "relatedSpdxElement": "SPDXRef-wasmbindgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-websys"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-websys"
    },
    {
      "relatedSpdxElement": "SPDXRef-chrono",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-csv",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-hex",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-numbigint",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-percentencoding",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-rcgen",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-reqwest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-ring",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlspemfile",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-tokio",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustlswebpki",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-x509parser",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-yasna",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-webpkiroots"
    },
    {
      "relatedSpdxElement": "SPDXRef-bytemuck",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wide"
    },
    {
      "relatedSpdxElement": "SPDXRef-safe_arch",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wide"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wide"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-wide"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapii686pcwindowsgnu",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winapi"
    },
    {
      "relatedSpdxElement": "SPDXRef-winapix86_64pcwindowsgnu",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winapi"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowssys",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winapiutil"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowsimplement",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowscore"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowsinterface",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowscore"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowslink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowscore"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowsresult",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowscore"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowsstrings",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowscore"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsimplement"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsimplement"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsimplement"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsinterface"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsinterface"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsinterface"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowslink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsresult"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowslink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowsstrings"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowstargets",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowssys"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowstargets",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowssys"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowstargets",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowssys"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_aarch64_gnullvm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_x86_64_msvc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_aarch64_msvc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_i686_gnu",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_i686_msvc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_x86_64_gnu",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_i686_gnullvm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_x86_64_gnullvm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_aarch64_gnullvm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_x86_64_msvc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_aarch64_msvc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_i686_gnu",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_i686_msvc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_x86_64_gnu",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windowslink",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_i686_gnullvm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-windows_x86_64_gnullvm",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-windowstargets"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstream",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-anstyle",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-is_terminal_polyfill",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-memchr",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-terminal_size",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-annotatesnippets",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-anyhow",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-automod",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-circular",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-lexopt",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-proptest",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustchash",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-snapbox",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-termtranscript",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-winnow"
    },
    {
      "relatedSpdxElement": "SPDXRef-bitflags",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-witbindgenrt"
    },
    {
      "relatedSpdxElement": "SPDXRef-futures",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-witbindgenrt"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-witbindgenrt"
    },
    {
      "relatedSpdxElement": "SPDXRef-curve25519dalek",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-x25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-x25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand_core",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-x25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-x25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-bincode",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-x25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-criterion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-x25519dalek"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopyderive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-either",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-elain",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-itertools",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-rand",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopyderive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-zerocopyderive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopy"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-dissimilar",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-libc",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-once_cell",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-prettyplease",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-rustversion",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-static_assertions",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-trybuild",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zerocopyderive"
    },
    {
      "relatedSpdxElement": "SPDXRef-serde",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zeroize"
    },
    {
      "relatedSpdxElement": "SPDXRef-zeroize_derive",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zeroize"
    },
    {
      "relatedSpdxElement": "SPDXRef-procmacro2",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zeroize_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-quote",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zeroize_derive"
    },
    {
      "relatedSpdxElement": "SPDXRef-syn",
      "relationshipType": "DEPENDS_ON",
      "spdxElementId": "SPDXRef-zeroize_derive"
    }
  ],
  "spdxVersion": "SPDX-2.3"
}
