# Default values for aivillage
# This is a YAML-formatted file.

# Global configuration
global:
  imageRegistry: ghcr.io
  imagePullSecrets: []
  storageClass: "fast-ssd"

# Deployment configuration
deployment:
  replicaCount: 3
  slot: blue  # Used for blue-green deployments
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

# Image configuration
image:
  repository: aivillage
  tag: latest
  pullPolicy: IfNotPresent

# Service configuration
service:
  type: ClusterIP
  annotations: {}

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
  hosts:
    - host: api.aivillage.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: aivillage-tls
      hosts:
        - api.aivillage.com

# Gateway service
gateway:
  enabled: true
  replicaCount: 3
  image:
    repository: gateway
    tag: latest
  service:
    port: 8000
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    RATE_LIMIT_REQUESTS: "1000"
    RATE_LIMIT_WINDOW: "60"

# Twin service
twin:
  enabled: true
  replicaCount: 2
  image:
    repository: twin
    tag: latest
  service:
    port: 8001
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "800m"

# Credits API service
creditsAPI:
  enabled: true
  replicaCount: 2
  image:
    repository: credits-api
    tag: latest
  service:
    port: 8002
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Credits Worker
creditsWorker:
  enabled: true
  replicaCount: 1
  image:
    repository: credits-worker
    tag: latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  env:
    WORKER_INTERVAL: "300"

# HyperRAG MCP Server
hyperagMCP:
  enabled: true
  replicaCount: 2
  image:
    repository: hyperag-mcp
    tag: latest
  service:
    port: 8765
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "800m"

# Agent Forge
agentForge:
  enabled: true
  replicaCount: 2
  image:
    repository: agent-forge
    tag: latest
  service:
    port: 8003
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"

# Compression Service
compressionService:
  enabled: true
  replicaCount: 1
  image:
    repository: compression-service
    tag: latest
  service:
    port: 8004
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "4Gi"
      cpu: "2"

# Evolution Engine
evolutionEngine:
  enabled: true
  replicaCount: 1
  image:
    repository: evolution-engine
    tag: latest
  service:
    port: 8005
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"

# Mesh Network
meshNetwork:
  enabled: true
  replicaCount: 2
  image:
    repository: mesh-network
    tag: latest
  service:
    port: 8006
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Database configurations
postgresql:
  enabled: true
  auth:
    postgresPassword: "changeme"
    username: "aivillage_user"
    password: "changeme"
    database: "aivillage"
  primary:
    persistence:
      enabled: true
      size: 20Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "1Gi"
        cpu: "500m"

redis:
  enabled: true
  auth:
    enabled: true
    password: "changeme"
  master:
    persistence:
      enabled: true
      size: 5Gi
      storageClass: "fast-ssd"
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "512Mi"
        cpu: "200m"

# Neo4j configuration
neo4j:
  enabled: true
  auth:
    user: "neo4j"
    password: "changeme"
  persistence:
    enabled: true
    size: 20Gi
    storageClass: "fast-ssd"
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2"

# Qdrant configuration
qdrant:
  enabled: true
  persistence:
    enabled: true
    size: 20Gi
    storageClass: "fast-ssd"
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "2Gi"
      cpu: "1"

# Monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
    retention: "7d"
    resources:
      requests:
        memory: "512Mi"
        cpu: "300m"
      limits:
        memory: "2Gi"
        cpu: "1"
  grafana:
    enabled: true
    adminPassword: "changeme"
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "500m"

# Security configuration
security:
  podSecurityContext:
    runAsNonRoot: true
    runAsUser: 65534
    fsGroup: 65534
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
      - ALL

# Environment-specific secrets (override in values-production.yaml)
secrets:
  postgresPassword: "changeme"
  redisPassword: "changeme"
  neo4jPassword: "changeme"
  hyperhagJwtSecret: "changeme"
  openaiApiKey: ""
  anthropicApiKey: ""
  grafanaPassword: "changeme"

# Node selectors and tolerations
nodeSelector: {}
tolerations: []
affinity: {}

# Resource quotas
resources:
  requests:
    cpu: "2"
    memory: "4Gi"
  limits:
    cpu: "10"
    memory: "20Gi"
