# Staging values for aivillage
# Override default values for staging environment

# Staging deployment configuration (smaller than production)
deployment:
  replicaCount: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1

# Staging ingress
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/rate-limit: "500"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
  hosts:
    - host: staging-api.aivillage.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: aivillage-staging-tls
      hosts:
        - staging-api.aivillage.com

# Staging service configurations with minimal resources
gateway:
  replicaCount: 2
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    RATE_LIMIT_REQUESTS: "500"
    RATE_LIMIT_WINDOW: "60"
    GUNICORN_WORKERS: "2"
    GUNICORN_THREADS: "1"

twin:
  replicaCount: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "600m"

creditsAPI:
  replicaCount: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "400m"

creditsWorker:
  replicaCount: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"

hyperagMCP:
  replicaCount: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "600m"

agentForge:
  replicaCount: 1
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"

compressionService:
  replicaCount: 1
  resources:
    requests:
      memory: "2Gi"
      cpu: "1"
    limits:
      memory: "4Gi"
      cpu: "2"

evolutionEngine:
  replicaCount: 1
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"

meshNetwork:
  replicaCount: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "400m"

# Staging database configurations (smaller)
postgresql:
  primary:
    persistence:
      size: 20Gi
    resources:
      requests:
        memory: "512Mi"
        cpu: "300m"
      limits:
        memory: "1Gi"
        cpu: "600m"

redis:
  master:
    persistence:
      size: 5Gi
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "400m"

neo4j:
  persistence:
    size: 20Gi
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "2Gi"
      cpu: "1"

qdrant:
  persistence:
    size: 20Gi
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "500m"

# Staging monitoring with shorter retention
monitoring:
  prometheus:
    retention: "3d"  # 3 days retention for staging
    resources:
      requests:
        memory: "512Mi"
        cpu: "300m"
      limits:
        memory: "1Gi"
        cpu: "600m"
  grafana:
    resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "400m"

# Staging resource quotas (much smaller)
resources:
  requests:
    cpu: "5"
    memory: "10Gi"
  limits:
    cpu: "15"
    memory: "30Gi"

# Staging secrets (less secure for testing)
secrets:
  postgresPassword: "staging_password_123"
  redisPassword: "staging_redis_123"
  neo4jPassword: "staging_neo4j_123"
  hyperhagJwtSecret: "staging_jwt_secret_12345"
  openaiApiKey: "sk-test-staging"
  anthropicApiKey: "test-staging"
  grafanaPassword: "staging_admin"
