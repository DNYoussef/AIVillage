# Multi-stage build for HyperRAG MCP Server
FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        gcc \
        g++ \
        curl \
        git \
        && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Create non-root user
RUN groupadd -r aivillage && useradd -r -g aivillage aivillage

# Copy requirements first for better caching
COPY requirements.txt requirements-production.txt ./
COPY mcp_servers/hyperag/requirements.txt ./mcp_requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt -r requirements-production.txt -r mcp_requirements.txt

# Copy application code
COPY mcp_servers/ ./mcp_servers/
COPY agent_forge/ ./agent_forge/
COPY production/rag/ ./production/rag/
COPY config/ ./config/

# Copy configuration files
COPY .env.mcp ./

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV MCP_SERVER_PORT=8765
ENV MCP_SERVER_HOST=0.0.0.0

# Change ownership to non-root user
RUN chown -R aivillage:aivillage /app

# Switch to non-root user
USER aivillage

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8765/health || exit 1

# Expose port
EXPOSE 8765

# Start the MCP server
CMD ["python", "-m", "mcp_servers.hyperag.server"]