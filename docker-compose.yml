version: '3.9'

services:
  # Main application services
  # NOTE: server.py is not included here as it's for development/testing only
  # Production deployments should use gateway and twin services

  twin:
    build: ./services/twin
    ports:
      - "8001:8001"
    expose:
      - "8001"
    environment:
      - TWIN_MODEL_PATH=${MODEL_PATH:-/models/small-llama.bin}
    labels:
      - "prometheus.scrape=true"
      - "prometheus.port=8001"
    volumes:
      - ./models:/models:ro
    networks:
      - ai-village-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  gateway:
    build: ./services/gateway
    ports:
      - "8000:8000"
    environment:
      - TWIN_URL=http://twin:8001
      - RATE_LIMIT_REQUESTS=${RATE_LIMIT_REQUESTS:-100}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-60}
      - GATEWAY_ALLOW_ORIGINS=${GATEWAY_ALLOW_ORIGINS:-http://localhost}
    depends_on:
      - twin
    networks:
      - ai-village-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Credits ledger service
  credits-api:
    build:
      context: ./communications
      dockerfile: Dockerfile.credits-api
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://aivillage_user:aivillage_pass@postgres:5432/aivillage_credits
      - PROMETHEUS_URL=http://prometheus:9090
    depends_on:
      - postgres
    networks:
      - ai-village-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Credits earning worker (cron-like)
  credits-worker:
    build:
      context: ./communications
      dockerfile: Dockerfile.credits-worker
    environment:
      - DATABASE_URL=postgresql://aivillage_user:aivillage_pass@postgres:5432/aivillage_credits
      - PROMETHEUS_URL=http://prometheus:9090
      - CREDITS_API_URL=http://credits-api:8002
      - WORKER_INTERVAL=300  # 5 minutes
    depends_on:
      - credits-api
      - prometheus
    networks:
      - ai-village-net
    profiles:
      - monitoring
    restart: unless-stopped

  # PostgreSQL database for credits
  postgres:
    image: postgres:15
    container_name: ai-village-postgres
    environment:
      - POSTGRES_DB=aivillage_credits
      - POSTGRES_USER=aivillage_user
      - POSTGRES_PASSWORD=aivillage_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai-village-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aivillage_user -d aivillage_credits"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional monitoring services (can be disabled)
  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: ai-village-prometheus
    volumes:
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - ai-village-net
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:11.0.0
    container_name: ai-village-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-changeme}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    networks:
      - ai-village-net
    depends_on:
      - prometheus
    profiles:
      - monitoring

  pushgateway:
    image: prom/pushgateway:v1.6.2
    container_name: ai-village-pushgateway
    ports:
      - "9091:9091"
    networks:
      - ai-village-net
    profiles:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:

networks:
  ai-village-net:
    external: false
