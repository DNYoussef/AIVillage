# Clean Architecture Rules Configuration
# Defines layer dependencies, boundaries, and validation rules

architecture:
  layers:
    apps:
      description: "User interfaces and client applications"
      allowed_dependencies:
        - core
        - infrastructure
        - libs
        - integrations
      forbidden_dependencies:
        - devops
      max_file_lines: 300

    core:
      description: "Business logic and domain models"
      allowed_dependencies:
        - libs
      forbidden_dependencies:
        - apps
        - infrastructure
        - devops
        - integrations
      max_file_lines: 500

    infrastructure:
      description: "Technical implementation details"
      allowed_dependencies:
        - libs
        - shared  # Existing shared utilities
      forbidden_dependencies:
        - apps
        - core
        - devops
      max_file_lines: 400

    devops:
      description: "Development operations and automation"
      allowed_dependencies:
        - "*"  # Can reference all layers for deployment
      forbidden_dependencies: []
      max_file_lines: 200

    libs:
      description: "Shared libraries and utilities"
      allowed_dependencies: []  # Only external libraries
      forbidden_dependencies:
        - apps
        - core
        - infrastructure
        - devops
        - integrations
      max_file_lines: 300

    integrations:
      description: "External system integrations"
      allowed_dependencies:
        - libs
      forbidden_dependencies:
        - apps
        - core
        - infrastructure
        - devops
      max_file_lines: 300

  boundaries:
    interface_communication:
      enabled: true
      description: "All cross-layer communication must use interfaces"
      violation_level: "error"

    dependency_injection:
      enabled: true
      description: "Use dependency injection for cross-layer dependencies"
      violation_level: "warning"

    configuration_driven:
      enabled: true
      description: "All integrations must be configuration-driven"
      violation_level: "error"

  migration_rules:
    preserve_existing:
      - gateway/
      - twin/
      - mcp/
      - p2p/
      - shared/

    move_to_apps:
      - packages/ui/
      - packages/core/education/
      - gateway/ui/

    move_to_core:
      - packages/agents/
      - packages/agent_forge/
      - packages/rag/
      - packages/tokenomics/

    move_to_infrastructure:
      - packages/p2p/
      - packages/fog/
      - packages/edge/
      - packages/monitoring/

    move_to_libs:
      - packages/hrrm/
      - packages/mobile/ (utilities)

    move_to_integrations:
      - packages/automation/ (external)

  validation:
    max_complexity: 10
    max_parameters: 3
    max_file_lines: 500
    max_function_lines: 50

    forbidden_patterns:
      - "from apps import"         # in core, infrastructure, libs
      - "from core import"         # in infrastructure, libs
      - "from infrastructure import"  # in core, libs
      - "import *.twin.*"          # Use interfaces instead
      - "import *.gateway.*"       # Use interfaces instead

    required_patterns:
      - "class.*Interface"         # Interface definitions
      - "async def.*"              # Async patterns
      - "from typing import"       # Type hints

quality_gates:
  circular_dependencies: false
  layer_violations: false
  interface_compliance: 80  # Percentage
  test_coverage: 80         # Percentage
  documentation_coverage: 70  # Percentage

connascence_rules:
  # Strong connascence should stay local
  algorithm_connascence:
    max_distance: "same_class"
    max_degree: 2

  position_connascence:
    max_distance: "same_function"
    max_degree: 1

  # Weak connascence acceptable across modules
  name_connascence:
    max_distance: "same_layer"
    max_degree: 5

  type_connascence:
    max_distance: "cross_layer"
    max_degree: 3

# Directory structure template
directory_structure:
  apps:
    mobile:
      - ios/
      - android/
      - shared/
    web:
      - admin-dashboard/
      - user-portal/
      - developer-console/
      - shared/
    cli:
      - admin-cli/
      - developer-cli/
      - user-cli/
    desktop:
      - electron/
      - native/

  core:
    agents:
      - governance/
      - knowledge/
      - infrastructure/
      - specialized/
      - contracts/
    agent-forge:
      - training/
      - evolution/
      - compression/
      - models/
    rag:
      - ingestion/
      - retrieval/
      - generation/
      - memory/
    domain:
      - tokenomics/
      - identity/
      - security/
      - compliance/

  infrastructure:
    gateway:    # Existing - preserve
    twin:       # Existing - preserve
    mcp:        # Existing - expand
    p2p:        # Existing - expand
    shared:     # Existing - preserve
    fog:        # New
    data:       # New
    messaging:  # New

  devops:
    ci-cd:
      - github-actions/
      - quality-gates/
      - security-scans/
      - deployment-pipelines/
    deployment:
      - docker/
      - kubernetes/
      - terraform/
      - environments/
    monitoring:
      - metrics/
      - logging/
      - alerting/
      - dashboards/
    automation:
      - backup/
      - maintenance/
      - migration/
      - provisioning/

  libs:
    crypto:
      - encryption/
      - signing/
      - hashing/
      - key-management/
    networking:
      - protocols/
      - discovery/
      - routing/
      - security/
    ml-utils:
      - training/
      - inference/
      - evaluation/
      - optimization/
    common:
      - data-structures/
      - algorithms/
      - validation/
      - serialization/

  integrations:
    external-apis:
      - openai/
      - anthropic/
      - openrouter/
      - cloud-providers/
    blockchain:
      - ethereum/
      - polygon/
      - smart-contracts/
    cloud-services:
      - aws/
      - gcp/
      - azure/
