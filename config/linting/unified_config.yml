# AIVillage Unified Linting Configuration
# Comprehensive configuration for all linting tools and quality gates
# Last Updated: 2025-01-09

# ============================================================================
# PYTHON LINTING CONFIGURATION
# ============================================================================
python:
  # Ruff - Fast Python linter and formatter
  ruff:
    line_length: 120
    target_version: "py312"
    select:
      - "E"    # pycodestyle errors
      - "W"    # pycodestyle warnings  
      - "F"    # Pyflakes
      - "I"    # isort
      - "UP"   # pyupgrade
      - "B"    # flake8-bugbear
      - "C4"   # flake8-comprehensions
      - "SIM"  # flake8-simplify
      - "S"    # flake8-bandit (security)
      - "N"    # pep8-naming
      - "D"    # pydocstyle
    ignore:
      - "E501"  # Line too long (handled by black)
      - "D100"  # Missing docstring in public module
      - "D101"  # Missing docstring in public class
      - "D102"  # Missing docstring in public method
      - "D103"  # Missing docstring in public function
      - "S105"  # Possible hardcoded password (false positives)
    exclude:
      - "experimental/"
      - "deprecated/"
      - "archive/"
      - "tmp/"
      - "build/"
      - "dist/"
      - "__pycache__/"
      - ".venv/"
      - "tools/development/build/workspace/"
    per_file_ignores:
      "tests/*": ["S101", "D100", "D101", "D102", "D103"]  # Allow assert in tests
      "__init__.py": ["F401"]  # Allow unused imports in __init__.py

  # Black - Code formatter
  black:
    line_length: 120
    target_version: ["py312"]
    skip_string_normalization: false
    exclude: "/(experimental|deprecated|archive|tmp|build|dist|__pycache__|.venv|tools/development/build/workspace)/"
    
  # MyPy - Static type checker
  mypy:
    python_version: "3.12"
    warn_return_any: true
    warn_unused_configs: true
    disallow_untyped_defs: false  # Gradually enable
    disallow_incomplete_defs: false  # Gradually enable
    check_untyped_defs: true
    disallow_subclassing_any: true
    disallow_untyped_calls: false  # Gradually enable
    disallow_untyped_decorators: false  # Gradually enable
    ignore_missing_imports: true
    no_implicit_optional: true
    warn_redundant_casts: true
    warn_unused_ignores: true
    show_error_codes: true
    exclude:
      - "experimental/"
      - "deprecated/"
      - "archive/"
      - "tmp/"
      - "tools/development/build/workspace/"
    
  # Bandit - Security linter
  bandit:
    tests: ["B101", "B102", "B103", "B104", "B105", "B106", "B107", "B108", "B110", 
            "B112", "B201", "B301", "B302", "B303", "B304", "B305", "B306", "B307", "B308", "B309", "B310", "B311", "B312", "B313", "B314", "B315", "B316", "B317", "B318", "B319", "B320", "B321", "B322", "B323", "B324", "B325",
            "B401", "B402", "B403", "B404", "B405", "B406", "B407", "B408", "B409", "B410", "B411", "B412", "B413",
            "B501", "B502", "B503", "B504", "B505", "B506", "B507", "B508", "B509",
            "B601", "B602", "B603", "B604", "B605", "B606", "B607", "B608", "B609", "B610", "B611",
            "B701", "B702", "B703"]
    skips: ["B101", "B601"]  # Skip assert and shell usage in specific contexts
    exclude_dirs:
      - "tests/"
      - "experimental/"
      - "deprecated/"
      - "tools/development/build/workspace/"
    severity_level: "medium"
    confidence_level: "medium"
    recursive: true

# ============================================================================
# FRONTEND LINTING CONFIGURATION  
# ============================================================================
frontend:
  # ESLint - JavaScript/TypeScript linting
  eslint:
    extends:
      - "eslint:recommended"
      - "@typescript-eslint/recommended"
      - "prettier"
    parser: "@typescript-eslint/parser"
    plugins:
      - "@typescript-eslint"
      - "security"
      - "import"
    parserOptions:
      ecmaVersion: 2023
      sourceType: "module"
      project: "./tsconfig.json"
    rules:
      no-console: "warn"
      no-unused-vars: "error"
      prefer-const: "error"
      no-var: "error"
      eqeqeq: "error"
      curly: "error"
      security/detect-object-injection: "error"
      security/detect-non-literal-regexp: "error"
      import/order: "error"
      "@typescript-eslint/no-unused-vars": "error"
      "@typescript-eslint/explicit-function-return-type": "warn"
    env:
      browser: true
      node: true
      es2023: true
    
  # Prettier - Code formatter
  prettier:
    printWidth: 120
    tabWidth: 2
    useTabs: false
    semi: true
    singleQuote: true
    quoteProps: "as-needed"
    trailingComma: "es5"
    bracketSpacing: true
    bracketSameLine: false
    arrowParens: "avoid"
    
  # TypeScript compiler options
  typescript:
    compilerOptions:
      target: "ES2023"
      module: "commonjs"
      lib: ["ES2023", "DOM"]
      strict: true
      noImplicitAny: true
      strictNullChecks: true
      noImplicitReturns: true
      noUnusedLocals: true
      noUnusedParameters: true
    exclude:
      - "node_modules/"
      - "dist/"
      - "build/"

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================
security:
  # Security policy settings
  block_on_critical: true
  block_on_high: false
  auto_fix: false
  report_format: "sarif"
  fail_on_severity: "HIGH"
  
  security_policy:
    block_on_critical: true
    block_on_high: false
    max_medium_issues: 10
    max_low_issues: 50
    required_tools: ["bandit", "detect-secrets", "pip-audit", "semgrep"]
    severity_thresholds:
      critical: 0
      high: 2
      medium: 10
      low: 50
    exempted_rules: []
    custom_rules_path: "config/security/custom-rules"
  
  # Tool-specific configurations
  tools:
    bandit:
      enabled: true
      config_file: ".bandit"
      severity: ["HIGH", "MEDIUM"]
      confidence: ["HIGH", "MEDIUM"]
    
    semgrep:
      enabled: true
      rulesets:
        - "security"
        - "owasp-top-ten"
        - "cwe-top-25"
        - "python"
      custom_rules: "config/security/custom-semgrep-rules"
      timeout: 300
    
    detect_secrets:
      enabled: true
      baseline: ".secrets.baseline"
      plugins:
        - "ArtifactoryDetector"
        - "AWSKeyDetector" 
        - "AzureStorageKeyDetector"
        - "Base64HighEntropyString"
        - "BasicAuthDetector"
        - "CloudantDetector"
        - "DiscordBotTokenDetector"
        - "GitHubTokenDetector"
        - "HexHighEntropyString"
        - "IBMCloudIamDetector"
        - "IBMCosHmacDetector"
        - "IPPublicDetector"
        - "JwtTokenDetector"
        - "KeywordDetector"
        - "MailchimpDetector"
        - "NpmDetector"
        - "PrivateKeyDetector"
        - "SlackDetector"
        - "SoftlayerDetector"
        - "SquareOAuthDetector"
        - "StripeDetector"
        - "TwilioKeyDetector"
      exclude_files: "^(tests/|experimental/|tools/development/build/workspace/)"
      exclude_lines: "password|NOPASSWORD"
    
    pip_audit:
      enabled: true
      format: "json"
      local: true
      desc: true
      cache_dir: ".pip-audit-cache"
      
    safety:
      enabled: true
      ignore_ids: []
      full_report: true

# ============================================================================
# DOCUMENTATION LINTING
# ============================================================================
documentation:
  markdownlint:
    enabled: true
    config:
      MD013: false  # Line length
      MD033: false  # Allow HTML
      MD041: false  # First line in file should be a top level header
    exclude:
      - "node_modules/"
      - ".venv/"
      - "build/"
      - "dist/"
  
  textlint:
    enabled: false  # Optional advanced text linting

# ============================================================================
# QUALITY GATES AND THRESHOLDS  
# ============================================================================
quality_gates:
  overall_score_threshold: 80
  security_score_threshold: 90
  performance_score_threshold: 70
  style_score_threshold: 75
  
  fail_conditions:
    critical_security_issues: 0
    high_security_issues: 2
    total_issues_per_file: 10
    complexity_score: 10
    technical_debt_ratio: 0.3
  
  metrics_weights:
    security: 0.35
    performance: 0.25
    style: 0.20
    maintainability: 0.15
    coverage: 0.05

# ============================================================================
# PERFORMANCE AND CACHING
# ============================================================================
performance:
  caching:
    enabled: true
    ttl: 3600  # 1 hour
    cache_results: true
  
  parallel_execution:
    enabled: true
    max_workers: 4
  
  timeout_settings:
    ruff: 120
    black: 60
    mypy: 300
    bandit: 180
    semgrep: 400
    eslint: 240
    prettier: 120
    typescript: 300

# ============================================================================
# GITHUB INTEGRATION
# ============================================================================
github_integration:
  enabled: true
  auto_pr_checks: true
  auto_fix_commits: false  # Require manual approval
  quality_gates: true
  required_status_checks:
    - "unified-linting"
    - "security-scan"
  
  pr_comments:
    enabled: true
    include_suggestions: true
    include_metrics: true
    max_comments: 10
  
  check_run_settings:
    name: "AIVillage Code Quality"
    title_template: "Code Quality Analysis - {status}"
    summary_template: "Found {total_issues} issues across {tools_run} tools"

# ============================================================================
# PATHS AND FILE PATTERNS
# ============================================================================
paths:
  include_patterns:
    - "src/**/*.py"
    - "core/**/*.py"
    - "infrastructure/**/*.py" 
    - "tests/**/*.py"
    - "config/**/*.py"
    - "scripts/**/*.py"
    - "**/*.js"
    - "**/*.ts"
    - "**/*.jsx"
    - "**/*.tsx"
    - "**/*.json"
    - "**/*.yml"
    - "**/*.yaml"
    - "**/*.md"
  
  exclude_patterns:
    - "experimental/**"
    - "deprecated/**" 
    - "archive/**"
    - "tmp/**"
    - "build/**"
    - "dist/**"
    - "__pycache__/**"
    - ".venv/**"
    - "node_modules/**"
    - ".git/**"
    - "tools/development/build/workspace/**"
    - "*.log"
    - "*.pid"
    - "*.sock"
  
  auto_detect_paths:
    - "."
    - "src/"
    - "core/"
    - "infrastructure/"
    - "apps/"
    - "lib/"

# ============================================================================
# REPORTING AND OUTPUT
# ============================================================================
reporting:
  formats:
    - "json"
    - "sarif"
    - "text"
    - "summary"
  
  output_files:
    json: "linting-results.json"
    sarif: "linting-results.sarif"
    text: "linting-report.txt"
    summary: "linting-summary.txt"
  
  include_metrics: true
  include_suggestions: true
  include_diff: false
  
  console_output:
    verbose: false
    show_passed: true
    show_skipped: false
    color: true

# ============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# ============================================================================
environments:
  development:
    security:
      block_on_high: false
      max_medium_issues: 20
    quality_gates:
      overall_score_threshold: 70
    performance:
      parallel_execution:
        max_workers: 2
  
  staging:
    security:
      block_on_high: true
      max_medium_issues: 5
    quality_gates:
      overall_score_threshold: 85
      
  production:
    security:
      block_on_critical: true
      block_on_high: true
      max_medium_issues: 0
    quality_gates:
      overall_score_threshold: 90
      security_score_threshold: 95
    github_integration:
      auto_fix_commits: false
      required_status_checks:
        - "unified-linting"
        - "security-scan"
        - "performance-test"
        - "integration-test"