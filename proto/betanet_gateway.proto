syntax = "proto3";

package betanet.gateway.v1;

option go_package = "github.com/aivillage/scion-sidecar/pkg/gateway";

import "google/protobuf/timestamp.proto";

// BetaNet Gateway Service
service BetaNetGateway {
    // SCION packet operations
    rpc SendScionPacket(SendPacketRequest) returns (SendPacketResponse);
    rpc RecvScionPacket(RecvPacketRequest) returns (RecvPacketResponse);
    
    // Path management
    rpc RegisterPath(RegisterPathRequest) returns (RegisterPathResponse);
    rpc QueryPaths(QueryPathsRequest) returns (QueryPathsResponse);
    
    // Health and monitoring
    rpc Health(HealthRequest) returns (HealthResponse);
    rpc Stats(StatsRequest) returns (StatsResponse);
    
    // Validation
    rpc ValidateSequence(ValidateSequenceRequest) returns (ValidateSequenceResponse);
    
    // Tunnel management (additional features)
    rpc CreateTunnel(CreateTunnelRequest) returns (CreateTunnelResponse);
    rpc ListTunnels(ListTunnelsRequest) returns (ListTunnelsResponse);
    rpc DeleteTunnel(DeleteTunnelRequest) returns (DeleteTunnelResponse);
    rpc GetTunnelStatus(GetTunnelStatusRequest) returns (GetTunnelStatusResponse);
}

// Messages

// SCION packet operations
message SendPacketRequest {
    bytes packet_data = 1;
    string destination_ia = 2;
    string path_id = 3;
}

message SendPacketResponse {
    bool success = 1;
    string packet_id = 2;
    string error_message = 3;
}

message RecvPacketRequest {
    string source_ia = 1;
    int32 timeout_ms = 2;
}

message RecvPacketResponse {
    bytes packet_data = 1;
    string source_ia = 2;
    string path_id = 3;
    google.protobuf.Timestamp received_at = 4;
}

// Path management
message RegisterPathRequest {
    string path_id = 1;
    repeated string hops = 2;
    int32 mtu = 3;
    google.protobuf.Timestamp expiration = 4;
}

message RegisterPathResponse {
    bool success = 1;
    string message = 2;
}

message QueryPathsRequest {
    string destination_ia = 1;
    int32 max_paths = 2;
}

message QueryPathsResponse {
    repeated PathInfo paths = 1;
}

message PathInfo {
    string path_id = 1;
    repeated string hops = 2;
    int32 mtu = 3;
    double latency_ms = 4;
    google.protobuf.Timestamp expiration = 5;
}

// Health and monitoring
message HealthRequest {
    string service = 1;
}

message HealthResponse {
    HealthStatus status = 1;
    string message = 2;
}

message StatsRequest {
    bool include_paths = 1;
    bool include_metrics = 2;
}

message StatsResponse {
    int64 packets_sent = 1;
    int64 packets_received = 2;
    int64 bytes_sent = 3;
    int64 bytes_received = 4;
    int32 active_paths = 5;
    double uptime_seconds = 6;
}

// Validation
message ValidateSequenceRequest {
    repeated bytes packets = 1;
    string expected_hash = 2;
}

message ValidateSequenceResponse {
    bool valid = 1;
    string actual_hash = 2;
    repeated int32 invalid_indices = 3;
}

// Tunnel management (original messages)
message CreateTunnelRequest {
    string source_ia = 1;        // Source ISD-AS
    string destination_ia = 2;   // Destination ISD-AS
    string destination_host = 3; // Destination host address
    int32 destination_port = 4;  // Destination port
    TunnelOptions options = 5;   // Tunnel configuration options
}

message CreateTunnelResponse {
    string tunnel_id = 1;        // Unique tunnel identifier
    int32 local_port = 2;        // Local port for tunnel access
    TunnelStatus status = 3;     // Initial tunnel status
}

message ListTunnelsRequest {
    string filter = 1;           // Optional filter criteria
    int32 page_size = 2;         // Number of results per page
    string page_token = 3;       // Token for pagination
}

message ListTunnelsResponse {
    repeated TunnelInfo tunnels = 1;  // List of tunnel information
    string next_page_token = 2;       // Token for next page
    int32 total_count = 3;            // Total number of tunnels
}

message DeleteTunnelRequest {
    string tunnel_id = 1;        // Tunnel ID to delete
}

message DeleteTunnelResponse {
    bool success = 1;            // Deletion success status
    string message = 2;          // Status message
}

message GetTunnelStatusRequest {
    string tunnel_id = 1;        // Tunnel ID to query
}

message GetTunnelStatusResponse {
    TunnelInfo tunnel_info = 1;  // Complete tunnel information
}

message HealthCheckRequest {
    string service = 1;          // Optional service name to check
}

message HealthCheckResponse {
    HealthStatus status = 1;     // Overall health status
    string message = 2;          // Status message
    repeated ServiceHealth services = 3; // Individual service health
}

// Data Types

message TunnelInfo {
    string tunnel_id = 1;        // Unique tunnel identifier
    string source_ia = 2;        // Source ISD-AS
    string destination_ia = 3;   // Destination ISD-AS
    string destination_host = 4; // Destination host
    int32 destination_port = 5;  // Destination port
    int32 local_port = 6;        // Local tunnel port
    TunnelStatus status = 7;     // Current status
    google.protobuf.Timestamp created_at = 8;  // Creation timestamp
    google.protobuf.Timestamp updated_at = 9;  // Last update timestamp
    TunnelMetrics metrics = 10;  // Usage metrics
    TunnelOptions options = 11;  // Configuration options
}

message TunnelOptions {
    int32 timeout_seconds = 1;   // Connection timeout
    int32 retry_attempts = 2;    // Maximum retry attempts
    bool compression_enabled = 3; // Enable compression
    string encryption_method = 4; // Encryption method
    map<string, string> metadata = 5; // Additional metadata
}

message TunnelMetrics {
    int64 bytes_sent = 1;        // Total bytes sent
    int64 bytes_received = 2;    // Total bytes received
    int64 packets_sent = 3;      // Total packets sent
    int64 packets_received = 4;  // Total packets received
    int64 connection_count = 5;  // Number of connections
    double latency_ms = 6;       // Average latency in milliseconds
    int64 errors = 7;            // Error count
}

message ServiceHealth {
    string service_name = 1;     // Service name
    HealthStatus status = 2;     // Service health status
    string message = 3;          // Status details
    google.protobuf.Timestamp last_check = 4; // Last health check
}

// Enums

enum TunnelStatus {
    TUNNEL_STATUS_UNSPECIFIED = 0;
    TUNNEL_STATUS_CREATING = 1;
    TUNNEL_STATUS_ACTIVE = 2;
    TUNNEL_STATUS_INACTIVE = 3;
    TUNNEL_STATUS_ERROR = 4;
    TUNNEL_STATUS_DELETING = 5;
}

enum HealthStatus {
    HEALTH_STATUS_UNSPECIFIED = 0;
    HEALTH_STATUS_SERVING = 1;
    HEALTH_STATUS_NOT_SERVING = 2;
    HEALTH_STATUS_UNKNOWN = 3;
}