# Streamlined Pre-commit Configuration
# Focus on essential checks that work reliably with our tooling

repos:
  # Basic file quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(deprecated/|archive/)
      - id: end-of-file-fixer
        exclude: ^(deprecated/|archive/)
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=5000]
      - id: detect-private-key
      - id: check-toml
      - id: check-ast
        exclude: ^(deprecated/|archive/|experimental/)
      - id: debug-statements
        exclude: ^(tests/|deprecated/)

  # Python linting with ruff (compatible version)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.0.263  # Match our installed version
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        exclude: ^(deprecated/|archive/|experimental/)

  # Black formatting (backup/compatibility)
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        args: [--line-length=120]
        exclude: ^(deprecated/|archive/|experimental/)

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile, black, --line-length, "120"]
        exclude: ^(deprecated/|archive/|experimental/)

  # Security baseline
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: ^(deprecated/|archive/)

  # Security scanning with Bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, pyproject.toml, --quiet]
        exclude: ^(deprecated/|archive/|tests/)

# Global settings
default_language_version:
  python: python3.12

fail_fast: false
exclude: ^(deprecated/|archive/|\.git/|__pycache__/)
