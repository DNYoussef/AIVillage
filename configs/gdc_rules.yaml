# HypeRAG Graph Denial Constraints (GDC) Rules
#
# This file defines the constraint rules that detect forbidden sub-graph patterns
# in the HypeRAG knowledge graph. Each violation feeds into the Innovator Repair flow.

# High-Severity Constraints (Critical Issues)
- id: GDC_CONFIDENCE_VIOLATION
  description: "Node or edge has confidence value outside valid range [0,1]"
  cypher: |
    MATCH (n)
    WHERE (n.confidence IS NOT NULL AND (n.confidence < 0 OR n.confidence > 1))
    RETURN n
    UNION
    MATCH ()-[r]->()
    WHERE (r.confidence IS NOT NULL AND (r.confidence < 0 OR r.confidence > 1))
    RETURN r as n
  severity: high
  suggested_action: normalize_confidence
  category: data_quality
  enabled: true
  performance_hint: "Uses index on confidence property"

- id: GDC_MISSING_PARTICIPANTS
  description: "PARTICIPATES relationship to hyperedge not in participants list"
  cypher: |
    MATCH (n)-[:PARTICIPATES]->(h:Hyperedge)
    WHERE NOT n.id IN h.participants
    RETURN n, h
  severity: high
  suggested_action: sync_participants_list
  category: structural
  enabled: true
  performance_hint: "Consider index on Hyperedge.participants"

- id: GDC_CIRCULAR_CONSOLIDATION
  description: "Semantic node consolidates from itself (circular reference)"
  cypher: |
    MATCH (s:SemanticNode)-[:CONSOLIDATED_FROM*1..10]->(s)
    RETURN s
  severity: high
  suggested_action: break_consolidation_cycle
  category: structural
  enabled: true
  performance_hint: "Variable-length path - may be slow on large graphs"

# Medium-Severity Constraints (Data Integrity Issues)
- id: GDC_ORPHANED_HYPEREDGE
  description: "Hyperedge with fewer than 2 participants (invalid n-ary relation)"
  cypher: |
    MATCH (h:Hyperedge)
    WHERE size(h.participants) < 2
    RETURN h
  severity: medium
  suggested_action: delete_hyperedge
  category: structural
  enabled: true
  performance_hint: "Uses array size function"

- id: GDC_TEMPORAL_ANOMALY
  description: "Node created before its consolidation source (temporal inconsistency)"
  cypher: |
    MATCH (target)-[:CONSOLIDATED_FROM]->(source)
    WHERE target.created_at < source.created_at
    RETURN target, source
  severity: medium
  suggested_action: fix_temporal_order
  category: temporal
  enabled: true
  performance_hint: "Requires index on created_at"

- id: GDC_MISSING_EMBEDDINGS
  description: "SemanticNode without vector embedding for similarity search"
  cypher: |
    MATCH (n:SemanticNode)
    WHERE n.embedding IS NULL OR size(n.embedding) = 0
    RETURN n
  severity: medium
  suggested_action: generate_embeddings
  category: semantic
  enabled: true
  performance_hint: "Check null and empty array conditions"

- id: GDC_INVALID_PAGERANK
  description: "Node has invalid PageRank score (negative or extremely high)"
  cypher: |
    MATCH (n:SemanticNode)
    WHERE n.pagerank_score IS NOT NULL
    AND (n.pagerank_score < 0 OR n.pagerank_score > 10.0)
    RETURN n
  severity: medium
  suggested_action: recalculate_pagerank
  category: graph_algorithm
  enabled: true
  performance_hint: "Uses numeric range filter"

# Low-Severity Constraints (Quality Improvements)
- id: GDC_STALE_EPISODIC_NODES
  description: "Episodic nodes that exceed TTL but haven't been cleaned up"
  cypher: |
    MATCH (n:HippoNode)
    WHERE n.ttl IS NOT NULL
    AND (datetime().epochSeconds - datetime(n.created_at).epochSeconds) > n.ttl
    RETURN n
  severity: low
  suggested_action: cleanup_expired_nodes
  category: maintenance
  enabled: true
  performance_hint: "Calculates time differences - consider caching"

- id: GDC_LOW_QUALITY_CONTENT
  description: "Nodes with very short content that may be low-quality"
  cypher: |
    MATCH (n)
    WHERE n.content IS NOT NULL
    AND size(n.content) < 10
    AND NOT n.node_type IN ['placeholder', 'stub']
    RETURN n
  severity: low
  suggested_action: review_content_quality
  category: content_quality
  enabled: true
  performance_hint: "String length check"

- id: GDC_DUPLICATE_CONTENT
  description: "Multiple nodes with identical content (potential duplicates)"
  cypher: |
    MATCH (n1), (n2)
    WHERE n1.content = n2.content
    AND n1.id < n2.id
    AND n1.content IS NOT NULL
    AND size(n1.content) > 20
    RETURN n1, n2
  severity: low
  suggested_action: merge_duplicate_nodes
  category: deduplication
  enabled: true
  performance_hint: "Content comparison - expensive on large graphs"

- id: GDC_ISOLATED_NODES
  description: "Nodes with no incoming or outgoing relationships"
  cypher: |
    MATCH (n)
    WHERE NOT (n)--()
    AND NOT n:User
    AND NOT n:Document
    RETURN n
  severity: low
  suggested_action: review_isolation
  category: connectivity
  enabled: true
  performance_hint: "Pattern negation may be slow"

# Specialized Constraints (Domain-Specific)
- id: GDC_INCONSISTENT_ALPHA_WEIGHTS
  description: "Hyperedge alpha_weight doesn't match user's alpha profile"
  cypher: |
    MATCH (u:User)-[:HAS_PROFILE]->(p:AlphaProfile)-[:WEIGHTS]->(h:Hyperedge)
    WHERE h.alpha_weight IS NOT NULL
    AND p.weights IS NOT NULL
    AND h.alpha_weight <> p.weights[h.relation]
    RETURN u, h, p
  severity: medium
  suggested_action: sync_alpha_weights
  category: personalization
  enabled: false
  performance_hint: "Complex relationship traversal"

- id: GDC_COMMUNITY_MISMATCH
  description: "Nodes connected by strong relationships in different communities"
  cypher: |
    MATCH (n1:SemanticNode)-[r:PARTICIPATES]->(h:Hyperedge)<-[:PARTICIPATES]-(n2:SemanticNode)
    WHERE n1.community_id IS NOT NULL
    AND n2.community_id IS NOT NULL
    AND n1.community_id <> n2.community_id
    AND r.confidence > 0.8
    RETURN n1, n2, h
  severity: low
  suggested_action: review_community_assignment
  category: community_detection
  enabled: false
  performance_hint: "High-confidence relationship filter"

# Performance and Monitoring Constraints
- id: GDC_HIGH_DEGREE_NODES
  description: "Nodes with excessive number of relationships (potential hubs)"
  cypher: |
    MATCH (n)
    WITH n, count{(n)-[]-()}  as degree
    WHERE degree > 1000
    RETURN n, degree
  severity: low
  suggested_action: analyze_hub_nodes
  category: performance
  enabled: true
  performance_hint: "Count relationships - use sparingly"

- id: GDC_MISSING_GDC_FLAGS
  description: "Nodes that should have GDC flags but don't"
  cypher: |
    MATCH (n)
    WHERE (n.gdc_flags IS NULL OR size(n.gdc_flags) = 0)
    AND (n.confidence IS NOT NULL OR n.importance_score IS NOT NULL)
    RETURN n
  severity: low
  suggested_action: initialize_gdc_flags
  category: metadata
  enabled: true
  performance_hint: "Checks for missing metadata arrays"